{"version":3,"sources":["webpack:///./src/app/main/content/apps/settings/reset-password.component.html","webpack:///./src/app/main/content/apps/settings/reset-password.component.scss","webpack:///./src/app/main/content/apps/settings/reset-password.component.ts","webpack:///./src/app/main/content/apps/settings/settings.module.ts","webpack:///./src/app/main/content/apps/settings/settings.service.ts"],"names":[],"mappings":"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","file":"settings-settings-module.js","sourcesContent":["module.exports = \"<div id=\\\"task-upload\\\" class=\\\"page-layout simple left-sidenav inner-sidenav\\\">\\r\\n  <!-- HEADER -->\\r\\n  <div class=\\\"header mat-accent-bg p-16 p-sm-24\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start start\\\"\\r\\n  fxLayout.gt-xs=\\\"row\\\" fxLayoutAlign.gt-xs=\\\"space-between center\\\">\\r\\n  \\r\\n  <!-- APP TITLE -->\\r\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n    <div class=\\\"logo\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n         <mat-icon class=\\\"logo-icon mr-16\\\">settings_backup_restore</mat-icon>\\r\\n         <span class=\\\"logo-text h1\\\">Reset Password</span>\\r\\n     </div>\\r\\n  \\r\\n  </div>\\r\\n  <!-- / APP TITLE -->\\r\\n  </div>\\r\\n  <!-- / HEADER -->\\r\\n\\r\\n  <div class=\\\"reset m-16\\\">\\r\\n    <div id=\\\"reset-password-form\\\">\\r\\n        <div class=\\\"logo\\\">\\r\\n          <img src=\\\"assets/images/logos/logo.png\\\">\\r\\n        </div>\\r\\n    \\r\\n        <form name=\\\"forgotPasswordForm\\\" (ngSubmit)=\\\"resetPassword(forgotPasswordForm.value)\\\" [formGroup]=\\\"forgotPasswordForm\\\" novalidate>\\r\\n    \\r\\n          <mat-form-field>\\r\\n            <input matInput placeholder=\\\"Current Password\\\" formControlName=\\\"current_password\\\">\\r\\n          </mat-form-field>\\r\\n\\r\\n          <mat-form-field>\\r\\n            <input matInput placeholder=\\\"New Password\\\" formControlName=\\\"password\\\">\\r\\n          </mat-form-field>\\r\\n          \\r\\n          <mat-form-field>\\r\\n            <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\">\\r\\n          </mat-form-field>\\r\\n\\r\\n          <button type=\\\"submit\\\" mat-raised-button class=\\\"submit-button\\\" aria-label=\\\"Send Request\\\" [disabled]=\\\"forgotPasswordForm.invalid\\\">\\r\\n            Send Request\\r\\n          </button>\\r\\n        </form>\\r\\n    \\r\\n        <div class=\\\"login\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n          <a class=\\\"link\\\" [routerLink]=\\\"'/pages/auth/forgot-password'\\\">Forgot Password ?</a>\\r\\n        </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n#reset-password-form {\\n  width: 384px;\\n  max-width: 384px;\\n  padding: 32px;\\n  text-align: center;\\n  background: #FFFFFF;\\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12); }\\n@media screen and (max-width: 599px) {\\n    #reset-password-form {\\n      padding: 24px;\\n      width: 100%; } }\\n#reset-password-form .logo {\\n    width: 128px;\\n    margin: 32px auto; }\\n#reset-password-form .title {\\n    font-size: 12px;\\n    color: #ccc;\\n    margin: 16px 32px 32px 30px; }\\n#reset-password-form form {\\n    width: 100%;\\n    text-align: left; }\\n#reset-password-form form mat-form-field {\\n      width: 100%; }\\n#reset-password-form form .submit-button {\\n      width: 220px;\\n      margin: 16px auto;\\n      display: block; }\\n@media screen and (max-width: 599px) {\\n        #reset-password-form form .submit-button {\\n          width: 90%; } }\\n#reset-password-form .login {\\n    margin: 32px auto 24px auto;\\n    width: 250px;\\n    font-weight: 500; }\\n#reset-password-form .login .text {\\n      margin-right: 8px; }\\n.reset {\\n  display: block;\\n  width: 100%;\\n  left: 30%;\\n  float: left;\\n  position: relative; }\\n.submit-button {\\n  background-color: #F57D3F;\\n  color: #fff; }\\n\"","import { ApiLoaderService } from '@fuse/services/api-loader.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { FuseConfigService } from '@fuse/services/config.service';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { SettingsService } from './settings.service';\r\nimport { ToasterService } from '@fuse/services/toaster-service.service';\r\n\r\n@Component({\r\n  selector: 'app-reset-password',\r\n  templateUrl: './reset-password.component.html',\r\n  styleUrls: ['./reset-password.component.scss'],\r\n  animations : fuseAnimations\r\n})\r\nexport class ResetPasswordComponent implements OnInit {\r\n\r\n    forgotPasswordForm: FormGroup;\r\n    forgotPasswordFormErrors: any;\r\n\r\n    constructor(\r\n        private fuseConfig: FuseConfigService,\r\n        private formBuilder: FormBuilder,\r\n        private apiloader: ApiLoaderService,\r\n        private toast: ToasterService,\r\n        private settingsService: SettingsService\r\n    )\r\n    {\r\n        /* this.fuseConfig.setConfig({\r\n            layout: {\r\n                navigation: 'none',\r\n                toolbar   : 'none',\r\n                footer    : 'none'\r\n            }\r\n        }); */\r\n\r\n        this.forgotPasswordFormErrors = {\r\n            email: {}\r\n        };\r\n    }\r\n\r\n    ngOnInit()\r\n    {\r\n        this.forgotPasswordForm = this.formBuilder.group({\r\n            current_password: [''],\r\n            password: [''],\r\n            email: ['']\r\n        });\r\n\r\n        this.forgotPasswordForm.valueChanges.subscribe(() => {\r\n            this.onForgotPasswordFormValuesChanged();\r\n        });\r\n    }\r\n\r\n    resetPassword(formData){\r\n        this.apiloader.setLoader(true);\r\n        const body = new URLSearchParams();\r\n        body.set('email', formData.email);\r\n        body.set('password', formData.password);\r\n        body.set('current_password', formData.current_password);\r\n\r\n        this.settingsService.postData('clients/reset-password', body.toString()).subscribe(response => {\r\n            if (response.data){\r\n                this.apiloader.setLoader(false);\r\n                this.toast.showSuccess('Password reset Successfully!.');\r\n            }\r\n        }, error => {\r\n            this.apiloader.setLoader(false);\r\n            this.toast.showError(error);\r\n        });\r\n    }\r\n\r\n    onForgotPasswordFormValuesChanged()\r\n    {\r\n        for ( const field in this.forgotPasswordFormErrors )\r\n        {\r\n            if ( !this.forgotPasswordFormErrors.hasOwnProperty(field) )\r\n            {\r\n                continue;\r\n            }\r\n\r\n            // Clear previous errors\r\n            this.forgotPasswordFormErrors[field] = {};\r\n\r\n            // Get the control\r\n            const control = this.forgotPasswordForm.get(field);\r\n\r\n            if ( control && control.dirty && !control.valid )\r\n            {\r\n                this.forgotPasswordFormErrors[field] = control.errors;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FuseSharedModule } from '@fuse/shared.module';\r\nimport { MatButtonModule, MatFormFieldModule, MatInputModule, MatIconModule } from '@angular/material';\r\nimport { ResetPasswordComponent } from './reset-password.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n      path     : '',\r\n      component: ResetPasswordComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    FuseSharedModule,\r\n    MatButtonModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatIconModule\r\n  ],\r\n  declarations: [ResetPasswordComponent]\r\n})\r\nexport class SettingsModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\nimport { apiUri } from '@fuse/constant';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SettingsService {\r\n  baseUrl = apiUri;\r\n  constructor(private http: HttpClient, private router: Router) { }\r\n\r\n  setHeaders(){\r\n    let headers: HttpHeaders = new HttpHeaders();\r\n    headers = headers.set('Accept', 'application/json');\r\n    headers = headers.set('Content-Type', 'application/x-www-form-urlencoded');\r\n    return headers;\r\n  }\r\n\r\n  public postData(url, data, type?: string): Observable<any>{\r\n      let headers = this.setHeaders();\r\n      if (type = 'reset'){\r\n        headers = headers.set('Authorization', 'Bearer 12344' );\r\n      }\r\n      const options = { headers: headers };\r\n      return this.http.post(this.baseUrl + url, data, options).map(this.extractData).catch(this.handleError);\r\n  }\r\n\r\n  public getData(url, data?: any): Observable<any>{\r\n      const headers = this.setHeaders();\r\n      if (data){\r\n        const queryParams =  Object.keys(data).map(key => key + '=' + data[key]).join('&');\r\n        url += '?' + queryParams;\r\n      }\r\n      const options = { headers: headers };\r\n      return this.http.get(this.baseUrl + url, options).map(this.extractData).catch(this.handleError);\r\n  }\r\n\r\n  public deleteData(url): Observable<any>{\r\n    const headers = this.setHeaders();\r\n    const options = { headers: headers };\r\n    return this.http.delete(this.baseUrl + url, options).map(this.extractData).catch(this.handleError);\r\n  }\r\n\r\n  private extractData(res: Response) {\r\n      const body = res;\r\n      return body || {};\r\n  }\r\n\r\n  private handleError(error: any) {\r\n    const errMsg = error.error;\r\n    if (typeof errMsg.message === 'object') {\r\n      const arr = Array.from(Object.keys(errMsg.message), k => errMsg.message[k]);\r\n      return throwError(arr);\r\n    }\r\n    return throwError(errMsg.message);\r\n  }\r\n}\r\n"],"sourceRoot":""}