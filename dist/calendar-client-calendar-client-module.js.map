{"version":3,"sources":["webpack:///./src/app/main/content/apps/calendar-client/cal-client.component.html","webpack:///./src/app/main/content/apps/calendar-client/cal-client.component.scss","webpack:///./src/app/main/content/apps/calendar-client/cal-client.component.ts","webpack:///./src/app/main/content/apps/calendar-client/cal-client.service.ts","webpack:///./src/app/main/content/apps/calendar-client/cal-event.model.ts","webpack:///./src/app/main/content/apps/calendar-client/calendar-client.module.ts","webpack:///./src/app/main/content/apps/calendar-client/calendar-client.service.ts","webpack:///./src/app/main/content/apps/calendar-client/event-dialog/event-dialog.component.html","webpack:///./src/app/main/content/apps/calendar-client/event-dialog/event-dialog.component.scss","webpack:///./src/app/main/content/apps/calendar-client/event-dialog/event-dialog.component.ts"],"names":[],"mappings":"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","file":"calendar-client-calendar-client-module.js","sourcesContent":["module.exports = \"<div id=\\\"calendar\\\" class=\\\"page-layout simple fullwidth\\\" fusePerfectScrollbar>\\r\\n\\r\\n  <!-- HEADER -->\\r\\n  <div class=\\\"header p-16 p-sm-24\\\" [ngClass]=\\\"viewDate | date:'MMM'\\\">\\r\\n\\r\\n      <div class=\\\"header-content\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n\\r\\n          <div class=\\\"header-top\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\" fxLayout.xs=\\\"column\\\">\\r\\n\\r\\n              <div class=\\\"logo mb-16 mb-sm-0\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n                  <mat-icon class=\\\"logo-icon\\\" *fuseIfOnDom [@animate]=\\\"{value:'*',params:{delay:'50ms',scale:'0.2'}}\\\">today</mat-icon>\\r\\n                  <span class=\\\"logo-text\\\" *fuseIfOnDom [@animate]=\\\"{value:'*',params:{delay:'100ms',x:'-25px'}}\\\">Calendar</span>\\r\\n              </div>\\r\\n\\r\\n              <!-- TOOLBAR -->\\r\\n              <div class=\\\"toolbar\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n\\r\\n                  <button mat-icon-button aria-label=\\\"Search\\\" matTooltip=\\\"Search\\\">\\r\\n                      <mat-icon>search</mat-icon>\\r\\n                  </button>\\r\\n\\r\\n                  <button mat-icon-button\\r\\n                          mwlCalendarToday\\r\\n                          [(viewDate)]=\\\"viewDate\\\"\\r\\n                          (viewDateChange)=\\\"selectedDay = {date:$event}\\\"\\r\\n                          aria-label=\\\"Today\\\" matTooltip=\\\"Today\\\">\\r\\n                      <mat-icon>today</mat-icon>\\r\\n                  </button>\\r\\n\\r\\n                  <button mat-icon-button (click)=\\\"view='day'\\\" aria-label=\\\"Day\\\" matTooltip=\\\"Day\\\">\\r\\n                      <mat-icon>view_day</mat-icon>\\r\\n                  </button>\\r\\n\\r\\n                  <button mat-icon-button (click)=\\\"view='week'\\\" aria-label=\\\"Week\\\" matTooltip=\\\"Week\\\">\\r\\n                      <mat-icon>view_week</mat-icon>\\r\\n                  </button>\\r\\n\\r\\n                  <button mat-icon-button (click)=\\\"view='month'\\\" aria-label=\\\"Month\\\" matTooltip=\\\"Month\\\">\\r\\n                      <mat-icon>view_module</mat-icon>\\r\\n                  </button>\\r\\n              </div>\\r\\n          </div>\\r\\n          <!-- / TOOLBAR -->\\r\\n\\r\\n          <!-- HEADER BOTTOM -->\\r\\n          <div class=\\\"header-bottom\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\"\\r\\n               *fuseIfOnDom [@animate]=\\\"{value:'*',params:{delay:'150ms'}}\\\">\\r\\n\\r\\n              <button mat-icon-button class=\\\"arrow\\\"\\r\\n                      mwlCalendarPreviousView\\r\\n                      [view]=\\\"view\\\"\\r\\n                      [(viewDate)]=\\\"viewDate\\\"\\r\\n                      (viewDateChange)=\\\"selectedDay = {date:$event}\\\"\\r\\n                      aria-label=\\\"Previous\\\">\\r\\n                  <mat-icon>chevron_left</mat-icon>\\r\\n              </button>\\r\\n\\r\\n              <div class=\\\"title\\\">\\r\\n                  {{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}\\r\\n              </div>\\r\\n\\r\\n              <button mat-icon-button class=\\\"arrow\\\"\\r\\n                      mwlCalendarNextView\\r\\n                      [view]=\\\"view\\\"\\r\\n                      [(viewDate)]=\\\"viewDate\\\"\\r\\n                      (viewDateChange)=\\\"selectedDay = {date:$event}\\\"\\r\\n                      aria-label=\\\"Next\\\">\\r\\n                  <mat-icon>chevron_right</mat-icon>\\r\\n              </button>\\r\\n          </div>\\r\\n          <!-- / HEADER BOTTOM -->\\r\\n      </div>\\r\\n\\r\\n      <!-- ADD EVENT BUTTON -->\\r\\n      <!-- <button mat-fab class=\\\"add-event-button mat-warn\\\" (click)=\\\"addEvent()\\\" aria-label=\\\"Add event\\\"\\r\\n              *fuseIfOnDom [@animate]=\\\"{value:'*',params:{delay:'300ms',scale:'0.2'}}\\\">\\r\\n          <mat-icon>add</mat-icon>\\r\\n      </button> -->\\r\\n      <!-- / ADD EVENT BUTTON -->\\r\\n  </div>\\r\\n  <!-- / HEADER -->\\r\\n\\r\\n  <!-- CONTENT -->\\r\\n  <div class=\\\"content\\\" fusePerfectScrollbar *fuseIfOnDom [@animate]=\\\"{value:'*',params:{delay:'200ms',y:'50px'}}\\\">\\r\\n      <div [ngSwitch]=\\\"view\\\">\\r\\n          <mwl-calendar-month-view\\r\\n              *ngSwitchCase=\\\"'month'\\\"\\r\\n              [viewDate]=\\\"viewDate\\\"\\r\\n              [events]=\\\"events\\\"\\r\\n              [refresh]=\\\"refresh\\\"\\r\\n              [activeDayIsOpen]=\\\"activeDayIsOpen\\\"\\r\\n              (dayClicked)=\\\"dayClicked($event.day)\\\"\\r\\n              (eventTimesChanged)=\\\"eventTimesChanged($event)\\\"\\r\\n              (beforeViewRender)=\\\"beforeMonthViewRender($event)\\\">\\r\\n          </mwl-calendar-month-view>\\r\\n          <mwl-calendar-week-view\\r\\n              *ngSwitchCase=\\\"'week'\\\"\\r\\n              [viewDate]=\\\"viewDate\\\"\\r\\n              (viewDateChange)=\\\"selectedDay = {date:$event}\\\"\\r\\n              [events]=\\\"events\\\"\\r\\n              [refresh]=\\\"refresh\\\"\\r\\n              (dayClicked)=\\\"dayClicked($event.day)\\\"\\r\\n              (eventTimesChanged)=\\\"eventTimesChanged($event)\\\">\\r\\n          </mwl-calendar-week-view>\\r\\n          <mwl-calendar-day-view\\r\\n              *ngSwitchCase=\\\"'day'\\\"\\r\\n              [viewDate]=\\\"viewDate\\\"\\r\\n              (viewDateChange)=\\\"selectedDay = {date:$event}\\\"\\r\\n              [events]=\\\"events\\\"\\r\\n              [refresh]=\\\"refresh\\\"\\r\\n              (dayClicked)=\\\"dayClicked($event.day)\\\"\\r\\n              (eventTimesChanged)=\\\"eventTimesChanged($event)\\\">\\r\\n          </mwl-calendar-day-view>\\r\\n      </div>\\r\\n  </div>\\r\\n  <!-- / CONTENT -->\\r\\n</div>\\r\\n\"","module.exports = \"\"","import { ActivatedRoute } from '@angular/router';\r\nimport { CalClientService } from './cal-client.service';\r\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef } from '@angular/material';\r\nimport { Subject } from 'rxjs';\r\nimport { startOfDay, isSameDay, isSameMonth } from 'date-fns';\r\nimport { CalendarEvent, CalendarEventAction, CalendarEventTimesChangedEvent, CalendarMonthViewDay } from 'angular-calendar';\r\n\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport { fuseAnimations } from '@fuse/animations';\r\n\r\nimport { EventDialogComponent } from './event-dialog/event-dialog.component';\r\nimport { CalEventModel } from './cal-event.model';\r\nimport { CalendarClientService } from './calendar-client.service';\r\nimport { ApiLoaderService } from '@fuse/services/api-loader.service';\r\nimport { ToasterService } from '@fuse/services/toaster-service.service';\r\nimport { meetings } from '@fuse/constant'\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-cal-client',\r\n  templateUrl: './cal-client.component.html',\r\n  styleUrls: ['./cal-client.component.scss'],\r\n  animations   : fuseAnimations\r\n})\r\nexport class CalClientComponent implements OnInit {\r\n\r\n    view: string;\r\n    viewDate: Date;\r\n    events: CalendarEvent[];\r\n    public actions: CalendarEventAction[];\r\n    activeDayIsOpen: boolean;\r\n    refresh: Subject<any> = new Subject();\r\n    dialogRef: any;\r\n    confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n    selectedDay: any;\r\n    task: any;\r\n    userId: any;\r\n    meeting: any;\r\n\r\n    constructor(\r\n        private http: HttpClient,\r\n        public dialog: MatDialog,\r\n        public calendarService: CalendarClientService,\r\n        private calService: CalClientService,\r\n        private apiloader: ApiLoaderService,\r\n        private toast: ToasterService,\r\n        private route: ActivatedRoute\r\n    )\r\n    {\r\n        this.view = 'month';\r\n        this.viewDate = new Date();\r\n        this.activeDayIsOpen = true;\r\n        this.selectedDay = {date: startOfDay(new Date())};\r\n\r\n        if (sessionStorage.getItem('role') === 'CLIENT_ADMIN'){\r\n            this.actions = [\r\n                {\r\n                    label  : '<i class=\"material-icons s-16\">edit</i>',\r\n                    onClick: ({event}: { event: CalendarEvent }): void => {\r\n                        this.editEvent('edit', event);\r\n                    }\r\n                },\r\n                {\r\n                    label  : '<i class=\"material-icons s-16\">delete</i>',\r\n                    onClick: ({event}: { event: CalendarEvent }): void => {\r\n                        this.deleteEvent(event);\r\n                    }\r\n                }\r\n            ];\r\n        } else { this.actions = []; }\r\n\r\n        /**\r\n         * Get events from service/server\r\n         */\r\n    }\r\n\r\n    ngOnInit()\r\n    {\r\n\r\n        this.route.params.subscribe(params => {\r\n            this.userId = params['id'];\r\n        });\r\n\r\n        this.getHolidays();\r\n        /**\r\n         * Watch re-render-refresh for updating db\r\n         */\r\n        this.refresh.subscribe(updateDB => {\r\n            // console.warn('REFRESH');\r\n            if ( updateDB )\r\n            {\r\n                // console.warn('UPDATE DB');\r\n                this.calendarService.updateEvents(this.events);\r\n            }\r\n        });\r\n\r\n        this.calendarService.onEventsUpdated.subscribe(events => {\r\n            this.setEvents();\r\n            this.refresh.next();\r\n        });\r\n    }\r\n\r\n    setEvents()\r\n    {\r\n        this.events = this.events.map(item => {\r\n            return new CalEventModel(item);\r\n        });\r\n    }\r\n\r\n    getEvents(id){\r\n        this.apiloader.setLoader(true);\r\n        this.calService.getData('users/' + id).subscribe(response => {\r\n            if (response.data){\r\n                this.apiloader.setLoader(false);\r\n                this.task = response.data.tasks;\r\n                for (let i = 0; i < this.task.length; i++){\r\n                    this.task[i].color = {\r\n                        primary  : '#ad2121',\r\n                        secondary: '#FAE3E3'\r\n                    };\r\n                    this.task[i].start = new Date(this.task[i].start);\r\n                    this.events.push(this.task[i]);\r\n                }\r\n                this.meeting = response.data.meetings;\r\n                for (let i = 0; i < this.meeting.length; i++){\r\n                    this.meeting[i].color = {\r\n                        primary  : '#ad2121',\r\n                        secondary: '#FAE3E3'\r\n                    };\r\n                    this.meeting[i].start = new Date(this.meeting[i].start);\r\n                    this.events.push(this.meeting[i]);\r\n                }\r\n                this.setEvents();\r\n            }\r\n        }, error => {\r\n            this.apiloader.setLoader(false);\r\n            this.toast.showError(error);\r\n        });\r\n    }\r\n\r\n    getHolidays(){\r\n        this.apiloader.setLoader(true);\r\n        this.calService.getData('holidays').subscribe(response => {\r\n            if (response.data){\r\n                this.apiloader.setLoader(false);\r\n                 const events = response.data;\r\n                 for (let i = 0; i < events.length; i++){\r\n                    events[i].title = events[i].details;\r\n                    events[i].start = new Date(events[i].date);\r\n                    events[i].color = {\r\n                        primary  : '#ad2121',\r\n                        secondary: '#FAE3E3'\r\n                    };\r\n                    events[i].isHoliday = true;\r\n                    events[i].actions = [];\r\n                 }\r\n                 this.events = events;\r\n                 this.getEvents(this.userId);\r\n            }\r\n        }, error => {\r\n            this.apiloader.setLoader(false);\r\n            this.toast.showError(error);\r\n        });\r\n    }\r\n\r\n    /* setTask(myTask){\r\n        this.task = myTask;\r\n        this.task.color = {\r\n            primary  : '#ad2121',\r\n            secondary: '#FAE3E3'\r\n        };\r\n        this.task.start = new Date(this.task.start);\r\n        this.events.push(this.task);\r\n        this.setEvents();\r\n    } */\r\n\r\n    /**\r\n     * Before View Renderer\r\n     * @param {any} header\r\n     * @param {any} body\r\n     */\r\n    beforeMonthViewRender({header, body})\r\n    {\r\n        \r\n        body.forEach((day) => {\r\n            const event = day.events;\r\n            if (event.length){\r\n                event.forEach(item => {\r\n                    if ( item.isHoliday ){\r\n                        day.cssClass = 'holiday';\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    /**\r\n     * Day clicked\r\n     * @param {MonthViewDay} day\r\n     */\r\n    dayClicked(day: CalendarMonthViewDay): void\r\n    {\r\n        const date: Date = day.date;\r\n        const events: CalendarEvent[] = day.events;\r\n\r\n        if ( isSameMonth(date, this.viewDate) )\r\n        {\r\n            if ( (isSameDay(this.viewDate, date) && this.activeDayIsOpen === true) || events.length === 0 )\r\n            {\r\n                this.activeDayIsOpen = false;\r\n            }\r\n            else\r\n            {\r\n                this.activeDayIsOpen = true;\r\n                this.viewDate = date;\r\n            }\r\n        }\r\n        this.selectedDay = day;\r\n        this.refresh.next();\r\n    }\r\n\r\n    /**\r\n     * Event times changed\r\n     * Event dropped or resized\r\n     * @param {CalendarEvent} event\r\n     * @param {Date} newStart\r\n     * @param {Date} newEnd\r\n     */\r\n    eventTimesChanged({event, newStart, newEnd}: CalendarEventTimesChangedEvent): void\r\n    {\r\n        event.start = newStart;\r\n        event.end = newEnd;\r\n        // console.warn('Dropped or resized', event);\r\n        this.refresh.next(true);\r\n    }\r\n\r\n    /**\r\n     * Delete Event\r\n     * @param event\r\n     */\r\n    deleteEvent(event)\r\n    {\r\n        console.log(event);\r\n        this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n            disableClose: false\r\n        });\r\n\r\n        this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete?';\r\n\r\n        this.confirmDialogRef.afterClosed().subscribe(result => {\r\n            if ( result )\r\n            {\r\n                const eventIndex = this.events.indexOf(event);\r\n                this.events.splice(eventIndex, 1);\r\n                this.refresh.next(true);\r\n            }\r\n            this.confirmDialogRef = null;\r\n        });\r\n\r\n    }\r\n\r\n    /**\r\n     * Edit Event\r\n     * @param {string} action\r\n     * @param {CalendarEvent} event\r\n     */\r\n    editEvent(action: string, event: CalendarEvent)\r\n    {\r\n        const eventIndex = this.events.indexOf(event);\r\n\r\n        this.dialogRef = this.dialog.open(EventDialogComponent, {\r\n            panelClass: 'event-form-dialog',\r\n            data      : {\r\n                event : event,\r\n                action: action\r\n            }\r\n        });\r\n\r\n        this.dialogRef.afterClosed()\r\n            .subscribe(response => {\r\n                if ( !response )\r\n                {\r\n                    return;\r\n                }\r\n                const actionType: string = response[0];\r\n                const formData: FormGroup = response[1];\r\n                switch ( actionType )\r\n                {\r\n                    /**\r\n                     * Save\r\n                     */\r\n                    case 'save':\r\n\r\n                        this.events[eventIndex] = Object.assign(this.events[eventIndex], formData.getRawValue());\r\n                        this.refresh.next(true);\r\n\r\n                        break;\r\n                    /**\r\n                     * Delete\r\n                     */\r\n                    case 'delete':\r\n\r\n                        this.deleteEvent(event);\r\n\r\n                        break;\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Add Event\r\n     */\r\n    addEvent(): void\r\n    {\r\n        this.dialogRef = this.dialog.open(EventDialogComponent, {\r\n            panelClass: 'event-form-dialog',\r\n            data      : {\r\n                action: 'new',\r\n                date  : this.selectedDay.date\r\n            }\r\n        });\r\n        this.dialogRef.afterClosed()\r\n            .subscribe((response: FormGroup) => {\r\n                if ( !response )\r\n                {\r\n                    return;\r\n                }\r\n                const newEvent = response.getRawValue();\r\n                newEvent.actions = this.actions;\r\n                this.events.push(newEvent);\r\n                this.refresh.next(true);\r\n            });\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\nimport { apiUri } from '@fuse/constant';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CalClientService {\r\n  baseUrl = apiUri;    \r\n  constructor(private http: HttpClient) { }\r\n\r\n  setHeaders(){\r\n    let headers: HttpHeaders = new HttpHeaders();\r\n    headers = headers.set('Accept', 'application/json');\r\n    headers = headers.set('Content-Type', 'application/x-www-form-urlencoded');\r\n    return headers;\r\n  }\r\n\r\n  public postData(url, data, type?: string): Observable<any>{\r\n      let headers = this.setHeaders();\r\n      if (type = 'reset'){\r\n        headers = headers.set('Authorization', 'Bearer 12344' );\r\n      }\r\n      const options = { headers: headers };\r\n      return this.http.post(this.baseUrl + url, data, options).map(this.extractData).catch(this.handleError);\r\n  }\r\n\r\n  public getData(url, data?: any): Observable<any>{\r\n      const headers = this.setHeaders();\r\n      if (data){\r\n        const queryParams =  Object.keys(data).map(key => key + '=' + data[key]).join('&');\r\n        url += '?' + queryParams;\r\n      }\r\n      const options = { headers: headers };\r\n      return this.http.get(this.baseUrl + url, options).map(this.extractData).catch(this.handleError);\r\n  }\r\n\r\n  public deleteData(url): Observable<any>{\r\n    const headers = this.setHeaders();\r\n    const options = { headers: headers };\r\n    return this.http.delete(this.baseUrl + url, options).map(this.extractData).catch(this.handleError);\r\n  }\r\n\r\n  private extractData(res: Response) {\r\n      const body = res;\r\n      return body || {};\r\n  }\r\n\r\n  private handleError(error: any) {\r\n    const errMsg = error.error;\r\n    if (typeof errMsg.message === 'object') {\r\n      const arr = Array.from(Object.keys(errMsg.message), k => errMsg.message[k]);\r\n      return throwError(arr);\r\n    }\r\n    return throwError(errMsg.message);\r\n  }\r\n}\r\n","import { CalendarEventAction } from 'angular-calendar';\r\nimport { startOfDay, endOfDay } from 'date-fns';\r\n\r\nexport class CalEventModel\r\n{\r\n    id?: any;\r\n    start: Date;\r\n    end?: Date;\r\n    title: string;\r\n    color: {\r\n        primary: string;\r\n        secondary: string;\r\n    };\r\n    actions?: CalendarEventAction[];\r\n    allDay?: boolean;\r\n    isHoliday?: boolean;\r\n    cssClass?: string;\r\n    resizable?: {\r\n        beforeStart?: boolean;\r\n        afterEnd?: boolean;\r\n    };\r\n    draggable?: boolean;\r\n    meta?: {\r\n        location: string,\r\n        notes: string\r\n    };\r\n\r\n    constructor(data?)\r\n    {\r\n        data = data || {};\r\n        this.id = data.id || '';\r\n        this.start = new Date(data.start) || startOfDay(new Date());\r\n        this.end = new Date(data.end) || endOfDay(new Date());\r\n        this.title = data.title || '';\r\n        this.color = {\r\n            primary  : data.color && data.color.primary || '#1e90ff',\r\n            secondary: data.color && data.color.secondary || '#D1E8FF'\r\n        };\r\n        this.draggable = data.draggable || true;\r\n        this.resizable = {\r\n            beforeStart: data.resizable && data.resizable.beforeStart || true,\r\n            afterEnd   : data.resizable && data.resizable.afterEnd || true\r\n        };\r\n        this.actions = data.actions || [];\r\n        this.allDay = data.allDay || false;\r\n        this.isHoliday = data.isHoliday || false;\r\n        this.cssClass = data.cssClass || '';\r\n        this.meta = {\r\n            location: data.meta && data.meta.location || '',\r\n            notes   : data.meta && data.meta.notes || ''\r\n        };\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { MatButtonModule, MatDatepickerModule, MatFormFieldModule, MatIconModule, MatInputModule, MatSlideToggleModule, MatToolbarModule } from '@angular/material';\r\n\r\nimport { CalendarModule } from 'angular-calendar';\r\nimport { ColorPickerModule } from 'ngx-color-picker';\r\n\r\nimport { FuseSharedModule } from '@fuse/shared.module';\r\nimport { FuseConfirmDialogModule } from '@fuse/components';\r\n\r\nimport { CalendarClientService } from './calendar-client.service';\r\nimport { CalClientComponent } from './cal-client.component';\r\nimport { EventDialogComponent } from './event-dialog/event-dialog.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n      path     : '',\r\n      component: CalClientComponent,\r\n      resolve  : {\r\n          chat: CalendarClientService\r\n      }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(routes),\r\n    MatButtonModule,\r\n    MatDatepickerModule,\r\n    MatFormFieldModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatSlideToggleModule,\r\n    MatToolbarModule,\r\n\r\n    CalendarModule.forRoot(),\r\n    ColorPickerModule,\r\n\r\n    FuseSharedModule,\r\n    FuseConfirmDialogModule\r\n  ],\r\n  declarations: [CalClientComponent, EventDialogComponent],\r\n  entryComponents: [EventDialogComponent]\r\n})\r\nexport class CalendarClientModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CalendarClientService implements Resolve<any> {\r\n\r\n  events: any;\r\n    onEventsUpdated = new Subject<any>();\r\n\r\n    constructor(private http: HttpClient)\r\n    {\r\n\r\n    }\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            Promise.all([\r\n                this.getEvents()\r\n            ]).then(\r\n                ([events]: [any]) => {\r\n                    resolve();\r\n                },\r\n                reject\r\n            );\r\n        });\r\n    }\r\n\r\n    getEvents()\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            this.http.get('api/calendar-client/events')\r\n                .subscribe((response: any) => {\r\n                    this.events = response.data;\r\n                    this.onEventsUpdated.next(this.events);\r\n                    resolve(this.events);\r\n                }, reject);\r\n        });\r\n    }\r\n\r\n    updateEvents(events)\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            this.http.post('api/calendar-client/events', {\r\n                id  : 'events',\r\n                data: [...events]\r\n            })\r\n                .subscribe((response: any) => {\r\n                    this.getEvents();\r\n                }, reject);\r\n        });\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"dialog-content-wrapper\\\">\\r\\n  <mat-toolbar class=\\\"mat-accent m-0\\\">\\r\\n      <mat-toolbar-row fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n          <span class=\\\"title dialog-title\\\">{{dialogTitle}}</span>\\r\\n          <button mat-icon-button (click)=\\\"dialogRef.close()\\\" aria-label=\\\"Close dialog\\\">\\r\\n              <mat-icon>close</mat-icon>\\r\\n          </button>\\r\\n      </mat-toolbar-row>\\r\\n  </mat-toolbar>\\r\\n\\r\\n  <div mat-dialog-content class=\\\"p-24 m-0\\\" fusePerfectScrollbar>\\r\\n\\r\\n      <form name=\\\"eventForm\\\" [formGroup]=\\\"eventForm\\\" class=\\\"event-form w-100-p\\\" fxLayout=\\\"column\\\" fxFlex>\\r\\n\\r\\n          <mat-form-field class=\\\"w-100-p\\\">\\r\\n              <input matInput\\r\\n                     name=\\\"title\\\"\\r\\n                     formControlName=\\\"title\\\"\\r\\n                     placeholder=\\\"Title\\\"\\r\\n                     required>\\r\\n          </mat-form-field>\\r\\n\\r\\n          <div class=\\\"py-16\\\" fxFlex=\\\"1 0 auto\\\" fxLayout=\\\"row\\\">\\r\\n              <mat-slide-toggle\\r\\n                  name=\\\"allDay\\\"\\r\\n                  formControlName=\\\"allDay\\\"\\r\\n                  class=\\\"mr-24\\\"\\r\\n                  aria-label=\\\"All day\\\">\\r\\n                  All Day\\r\\n              </mat-slide-toggle>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"py-16\\\" fxFlex=\\\"1 0 auto\\\" fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" formGroupName=\\\"color\\\">\\r\\n\\r\\n              <mat-form-field class=\\\"mr-sm-24\\\" fxFlex>\\r\\n                  <input matInput\\r\\n                         class=\\\"primary-color-input\\\"\\r\\n                         name=\\\"primary color\\\"\\r\\n                         formControlName=\\\"primary\\\"\\r\\n                         placeholder=\\\"Primary color\\\"\\r\\n                         [(colorPicker)]=\\\"event.color.primary\\\"\\r\\n                         cpWidth=\\\"290px\\\"\\r\\n                         [cpPresetColors]=\\\"presetColors\\\"\\r\\n                         [style.background]=\\\"event.color.primary\\\"\\r\\n                         (colorPickerChange)=\\\"event.color.primary = $event; eventForm.patchValue({color:{primary:$event}})\\\"/>\\r\\n              </mat-form-field>\\r\\n\\r\\n              <mat-form-field fxFlex>\\r\\n                  <input matInput\\r\\n                         class=\\\"secondary-color-input\\\"\\r\\n                         name=\\\"secondary color\\\"\\r\\n                         formControlName=\\\"secondary\\\"\\r\\n                         placeholder=\\\"Secondary color\\\"\\r\\n                         [(colorPicker)]=\\\"event.color.secondary\\\"\\r\\n                         cpWidth=\\\"290px\\\"\\r\\n                         [cpPresetColors]=\\\"presetColors\\\"\\r\\n                         [style.background]=\\\"event.color.secondary\\\"\\r\\n                         (colorPickerChange)=\\\"event.color.secondary = $event; eventForm.patchValue({color:{secondary:$event}})\\\"/>\\r\\n              </mat-form-field>\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div fxFlex=\\\"1 0 auto\\\" fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\">\\r\\n\\r\\n              <mat-form-field class=\\\"mr-sm-24\\\" fxFlex>\\r\\n                  <input matInput [matDatepicker]=\\\"startDatePicker\\\" placeholder=\\\"Start Date\\\"\\r\\n                         name=\\\"start\\\"\\r\\n                         formControlName=\\\"start\\\">\\r\\n                  <mat-datepicker-toggle matSuffix [for]=\\\"startDatePicker\\\"></mat-datepicker-toggle>\\r\\n                  <mat-datepicker #startDatePicker></mat-datepicker>\\r\\n              </mat-form-field>\\r\\n\\r\\n              <mat-form-field class=\\\"no-errors-spacer\\\" fxFlex mat-no-float>\\r\\n                  <input matInput placeholder=\\\"Start Time\\\">\\r\\n              </mat-form-field>\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div fxFlex=\\\"1 0 auto\\\" fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\">\\r\\n\\r\\n              <mat-form-field class=\\\"mr-sm-24\\\" fxFlex>\\r\\n                  <input matInput [matDatepicker]=\\\"endDatePicker\\\" placeholder=\\\"End Date\\\"\\r\\n                         name=\\\"end\\\"\\r\\n                         formControlName=\\\"end\\\">\\r\\n                  <mat-datepicker-toggle matSuffix [for]=\\\"endDatePicker\\\"></mat-datepicker-toggle>\\r\\n                  <mat-datepicker #endDatePicker></mat-datepicker>\\r\\n              </mat-form-field>\\r\\n\\r\\n              <mat-form-field class=\\\"no-errors-spacer\\\" fxFlex mat-no-float>\\r\\n                  <input matInput placeholder=\\\"End Time\\\">\\r\\n              </mat-form-field>\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <mat-form-field formGroupName=\\\"meta\\\" class=\\\"w-100-p\\\">\\r\\n              <input matInput\\r\\n                     name=\\\"location\\\"\\r\\n                     formControlName=\\\"location\\\"\\r\\n                     placeholder=\\\"Location\\\">\\r\\n          </mat-form-field>\\r\\n\\r\\n          <mat-form-field formGroupName=\\\"meta\\\" class=\\\"w-100-p\\\">\\r\\n\\r\\n              <textarea matInput\\r\\n                        formControlName=\\\"notes\\\"\\r\\n                        placeholder=\\\"Notes\\\"\\r\\n                        mat-maxlength=\\\"250\\\"\\r\\n                        max-rows=\\\"4\\\">\\r\\n              </textarea>\\r\\n          </mat-form-field>\\r\\n\\r\\n      </form>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <div mat-dialog-actions class=\\\"m-0 p-16\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n\\r\\n      <button *ngIf=\\\"action !=='edit'\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"dialogRef.close(eventForm)\\\"\\r\\n              class=\\\"save-button mat-accent\\\"\\r\\n              [disabled]=\\\"eventForm.invalid\\\"\\r\\n              aria-label=\\\"SAVE\\\">\\r\\n          SAVE\\r\\n      </button>\\r\\n\\r\\n      <button *ngIf=\\\"action ==='edit'\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"dialogRef.close(['save',eventForm])\\\"\\r\\n              class=\\\"save-button mat-accent\\\"\\r\\n              [disabled]=\\\"eventForm.invalid\\\"\\r\\n              aria-label=\\\"SAVE\\\">\\r\\n          SAVE\\r\\n      </button>\\r\\n\\r\\n      <button *ngIf=\\\"action ==='edit'\\\"\\r\\n              mat-icon-button\\r\\n              (click)=\\\"dialogRef.close(['delete',eventForm])\\\"\\r\\n              aria-label=\\\"Delete\\\"\\r\\n              matTooltip=\\\"Delete\\\">\\r\\n          <mat-icon>delete</mat-icon>\\r\\n      </button>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n.event-form-dialog {\\n  width: 480px; }\\n@media screen and (max-width: 599px) {\\n    .event-form-dialog {\\n      width: 100%; } }\\n.event-form-dialog .mat-dialog-container {\\n    padding: 0; }\\n.event-form-dialog .dialog-content-wrapper {\\n    max-height: 85vh;\\n    display: -webkit-box;\\n    display: flex;\\n    -webkit-box-orient: vertical;\\n    -webkit-box-direction: normal;\\n            flex-direction: column; }\\n.event-form-dialog .primary-color-input,\\n  .event-form-dialog .secondary-color-input {\\n    padding: 6px 8px; }\\n\"","import { Component, Inject, ViewEncapsulation } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\r\nimport { MatColors } from '@fuse/mat-colors';\r\nimport { CalendarEvent } from 'angular-calendar';\r\nimport { CalEventModel } from '../cal-event.model';\r\n\r\n@Component({\r\n  selector: 'app-event-dialog',\r\n  templateUrl: './event-dialog.component.html',\r\n  styleUrls: ['./event-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class EventDialogComponent {\r\n\r\n    event: CalendarEvent;\r\n    dialogTitle: string;\r\n    eventForm: FormGroup;\r\n    action: string;\r\n    presetColors = MatColors.presets;\r\n\r\n    constructor(\r\n        public dialogRef: MatDialogRef<EventDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) private data: any,\r\n        private formBuilder: FormBuilder\r\n    )\r\n    {\r\n        this.event = data.event;\r\n        this.action = data.action;\r\n\r\n        if ( this.action === 'edit' )\r\n        {\r\n            this.dialogTitle = this.event.title;\r\n        }\r\n        else\r\n        {\r\n            this.dialogTitle = 'New Event';\r\n            this.event = new CalEventModel({\r\n                start: data.date,\r\n                end  : data.date\r\n            });\r\n        }\r\n\r\n        this.eventForm = this.createEventForm();\r\n    }\r\n\r\n    createEventForm()\r\n    {\r\n        return new FormGroup({\r\n            title : new FormControl(this.event.title),\r\n            start : new FormControl(this.event.start),\r\n            end   : new FormControl(this.event.end),\r\n            allDay: new FormControl(this.event.allDay),\r\n            color : this.formBuilder.group({\r\n                primary  : new FormControl(this.event.color.primary),\r\n                secondary: new FormControl(this.event.color.secondary)\r\n            }),\r\n            meta  :\r\n                this.formBuilder.group({\r\n                    location: new FormControl(this.event.meta.location),\r\n                    notes   : new FormControl(this.event.meta.notes)\r\n                })\r\n        });\r\n    }\r\n\r\n}\r\n"],"sourceRoot":""}