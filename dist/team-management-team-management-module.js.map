{"version":3,"sources":["webpack:///./src/app/main/content/apps/team-management/add-team/add-team.component.html","webpack:///./src/app/main/content/apps/team-management/add-team/add-team.component.scss","webpack:///./src/app/main/content/apps/team-management/add-team/add-team.component.ts","webpack:///./src/app/main/content/apps/team-management/manage-team/manage-team.component.html","webpack:///./src/app/main/content/apps/team-management/manage-team/manage-team.component.scss","webpack:///./src/app/main/content/apps/team-management/manage-team/manage-team.component.ts","webpack:///./src/app/main/content/apps/team-management/team-management.module.ts","webpack:///./src/app/main/content/apps/team-management/team-management.service.ts","webpack:///./src/app/main/content/apps/team-management/team.model.ts"],"names":[],"mappings":"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","file":"team-management-team-management-module.js","sourcesContent":["module.exports = \"<div class=\\\"dialog-content-wrapper\\\">\\r\\n    <mat-toolbar matDialogTitle class=\\\"mat-accent m-0\\\">\\r\\n        <mat-toolbar-row fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n            <span class=\\\"title dialog-title\\\">{{dialogTitle}}</span>\\r\\n            <button mat-icon-button (click)=\\\"dialogRef.close()\\\" aria-label=\\\"Close dialog\\\">\\r\\n                <mat-icon>close</mat-icon>\\r\\n            </button>\\r\\n        </mat-toolbar-row>\\r\\n    </mat-toolbar>\\r\\n\\r\\n    <div mat-dialog-content class=\\\"p-24 m-0\\\" fusePerfectScrollbar>\\r\\n\\r\\n        <form [formGroup]=\\\"teamForm\\\">\\r\\n\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n                <mat-form-field fxFlex>\\r\\n                    <input name=\\\"title\\\" formControlName=\\\"title\\\" placeholder=\\\"Title\\\" matInput required>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n                <mat-form-field fxFlex>\\r\\n                    <mat-select formControlName=\\\"managerId\\\" name=\\\"managerId\\\" placeholder=\\\"Manager\\\" required>\\r\\n                      <mat-option *ngFor=\\\"let manager of members\\\" (onSelectionChange)=\\\"onSelectManager($event)\\\" [value]=\\\"manager.id\\\">\\r\\n                        {{manager.first_name}} {{manager.last_name}}\\r\\n                      </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"mb-24\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n                <mat-form-field fxFlex>\\r\\n                    <mat-select formControlName=\\\"employees\\\" multiple name=\\\"employees\\\" placeholder=\\\"Member\\\" required>\\r\\n                        <ng-container *ngFor=\\\"let mem of members\\\">\\r\\n                            <mat-option *ngIf=\\\"this.teamForm.get('managerId').value != mem.id\\\" (onSelectionChange)=\\\"selectedEmployee($event)\\\" [value]=\\\"mem.id\\\">{{mem.first_name}} {{mem.last_name}}</mat-option>\\r\\n                        </ng-container>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n        </form>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div mat-dialog-actions class=\\\"m-0 p-16\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n\\r\\n        <button *ngIf=\\\"action === 'ADD'\\\"\\r\\n                mat-raised-button\\r\\n                (click)=\\\"closeModal(teamForm.value)\\\"\\r\\n                class=\\\"save-button mat-accent\\\"\\r\\n                [disabled]=\\\"teamForm.invalid\\\"\\r\\n                aria-label=\\\"SAVE\\\">\\r\\n            SAVE\\r\\n        </button>\\r\\n\\r\\n        <button *ngIf=\\\"action === 'EDIT'\\\"\\r\\n                mat-raised-button\\r\\n                (click)=\\\"closeModal(teamForm.value)\\\"\\r\\n                class=\\\"save-button mat-accent\\\"\\r\\n                [disabled]=\\\"teamForm.invalid\\\"\\r\\n                aria-label=\\\"Update\\\">\\r\\n            Update\\r\\n        </button>\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n.contact-form-dialog {\\n  width: 400px; }\\n@media screen and (max-width: 599px) {\\n    .contact-form-dialog {\\n      width: 100%; } }\\n.contact-form-dialog .mat-dialog-container {\\n    padding: 0; }\\n.contact-form-dialog .mat-dialog-container .mat-toolbar {\\n      -webkit-box-flex: 1;\\n              flex: 1 0 auto;\\n      min-height: initial; }\\n.contact-form-dialog .mat-dialog-container .toolbar-bottom {\\n      height: auto; }\\n.contact-form-dialog .dialog-content-wrapper {\\n    max-height: 85vh;\\n    display: -webkit-box;\\n    display: flex;\\n    -webkit-box-orient: vertical;\\n    -webkit-box-direction: normal;\\n            flex-direction: column; }\\n\"","import { Component, OnInit, Inject, ViewEncapsulation } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\r\nimport { Team } from '../team.model';\r\nimport { ApiLoaderService } from '@fuse/services/api-loader.service';\r\nimport { ToasterService } from '@fuse/services/toaster-service.service';\r\nimport { TeamManagementService } from '../team-management.service';\r\n\r\n@Component({\r\n  selector: 'app-add-team',\r\n  templateUrl: './add-team.component.html',\r\n  styleUrls: ['./add-team.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class AddTeamComponent{\r\n  \r\n  teamForm: FormGroup;\r\n  dialogTitle: string;\r\n  action: string;\r\n  team: Team;\r\n  members: Array<any> = [];\r\n  teamMembers: Array<any> = [];\r\n  teamId: string;\r\n\r\n  constructor( public dialogRef: MatDialogRef<AddTeamComponent>,\r\n    @Inject(MAT_DIALOG_DATA) private data: any,\r\n    private formBuilder: FormBuilder,    \r\n    private apiloader: ApiLoaderService,\r\n    private toast: ToasterService,\r\n    private teamService: TeamManagementService) {\r\n      this.teamId = '';\r\n      this.action = data.action;\r\n\r\n      if ( this.action === 'EDIT' )\r\n      {\r\n          this.dialogTitle = 'Edit team';\r\n          this.team = data.team_data;\r\n          this.teamId = this.team.id;\r\n          this.teamForm = this.createTeamForm();\r\n          for (let i = 1; i < this.team.members.length; i++){\r\n              this.teamMembers.push(this.team.members[i].id);\r\n          }\r\n          this.teamForm.patchValue({'managerId': this.team.members[0].id});\r\n      }\r\n      else\r\n      {\r\n          this.dialogTitle = 'New team';\r\n          this.team = new Team({});\r\n          this.teamForm = this.createTeamForm();\r\n          this.teamId = '';\r\n      }\r\n      this.getAllUsers();\r\n     }\r\n\r\n    createTeamForm()\r\n    {\r\n        return this.formBuilder.group({\r\n            title    : [this.team.title, Validators.required],\r\n            employees  : [this.teamMembers, Validators.required],\r\n            managerId : ['', Validators.required]\r\n        });\r\n    }\r\n\r\n    getAllUsers(){\r\n      const cli_id = sessionStorage.getItem('client_id');\r\n      this.teamService.getData('users', { 'client_id': cli_id }).subscribe(response => {\r\n          if (response.data){\r\n              const data = response.data;\r\n              for (let i = 0; i < data.length; i++){\r\n                  if (data[i].role !== 'CLIENT_ADMIN'){\r\n                    this.members.push(data[i]);\r\n                  }\r\n              }\r\n          }\r\n      }, error => {\r\n          this.toast.showError(error);\r\n      });\r\n    }\r\n\r\n    onSelectManager(event) {\r\n        /* if (event.isUserInput) {\r\n            console.log(event.source.value);\r\n        } */\r\n    }\r\n\r\n    selectedEmployee(event){\r\n        /* if (event.isUserInput) {\r\n            console.log(event.source.value, event.source.selected);\r\n        } */\r\n    }\r\n\r\n    closeModal(data){\r\n        if (this.teamId !== ''){\r\n          data['id'] = this.teamId;\r\n        }\r\n        this.dialogRef.close(data);\r\n    }\r\n\r\n}\r\n","module.exports = \"<div id=\\\"manage-team\\\" class=\\\"page-layout simple left-sidenav inner-sidenav\\\">\\r\\n    <!-- HEADER -->\\r\\n    <div class=\\\"header mat-accent-bg p-16 p-sm-24\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start start\\\"\\r\\n    fxLayout.gt-xs=\\\"row\\\" fxLayoutAlign.gt-xs=\\\"space-between center\\\">\\r\\n    \\r\\n    <!-- APP TITLE -->\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n      <div class=\\\"logo\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n           <mat-icon class=\\\"logo-icon mr-16\\\">supervisor_account</mat-icon>\\r\\n           <span class=\\\"logo-text h1\\\">Team Management</span>\\r\\n       </div>\\r\\n    \\r\\n    </div>\\r\\n    <!-- / APP TITLE -->\\r\\n    <button mat-fab class=\\\"fab-add\\\" (click)=\\\"openModal('add')\\\" aria-label=\\\"Add event\\\"\\r\\n        *fuseIfOnDom [@animate]=\\\"{value:'*',params:{delay:'300ms',scale:'0.2'}}\\\">\\r\\n    <mat-icon>add</mat-icon>\\r\\n    </button>\\r\\n    </div>\\r\\n    <!-- / HEADER -->\\r\\n\\r\\n    <mat-sidenav-container>\\r\\n\\r\\n            <!-- SIDENAV -->\\r\\n           <!--  <mat-sidenav class=\\\"sidenav\\\" position=\\\"start\\\" opened=\\\"true\\\" mode=\\\"side\\\"\\r\\n                         fuseMatSidenavHelper=\\\"contacts-main-sidenav\\\" mat-is-locked-open=\\\"gt-sm\\\">\\r\\n    \\r\\n                <fuse-contacts-main-sidenav *fuseIfOnDom [@animate]=\\\"{value:'*'}\\\"></fuse-contacts-main-sidenav>\\r\\n    \\r\\n            </mat-sidenav> -->\\r\\n            <!-- / SIDENAV -->\\r\\n    \\r\\n            <!-- CENTER -->\\r\\n            <div class=\\\"center p-24 pb-56 pr-sm-92\\\" fusePerfectScrollbar>\\r\\n    \\r\\n                <!-- CONTENT -->\\r\\n                <div class=\\\"content mat-white-bg mat-elevation-z4\\\">\\r\\n                        <mat-table #table [dataSource]=\\\"dataSource\\\"\\r\\n                                    [@animateStagger]=\\\"{value:'50'}\\\" *ngIf=\\\"dataSource\\\">\\r\\n                            <!-- Id Column -->\\r\\n                            <!-- <ng-container cdkColumnDef=\\\"id\\\">\\r\\n                                <mat-header-cell *cdkHeaderCellDef>Id</mat-header-cell>\\r\\n                                <mat-cell *cdkCellDef=\\\"let element\\\">\\r\\n                                    <p class=\\\"text-truncate font-weight-600\\\">{{element.id}}</p>\\r\\n                                </mat-cell>\\r\\n                            </ng-container> -->\\r\\n\\r\\n                            <ng-container matColumnDef=\\\"index\\\">\\r\\n                                <mat-header-cell *matHeaderCellDef>No.</mat-header-cell>\\r\\n                                <mat-cell *matCellDef=\\\"let element; let i = index;\\\">\\r\\n                                    <p class=\\\"text-truncate font-weight-600\\\">{{i}}</p>\\r\\n                                </mat-cell>\\r\\n                            </ng-container>\\r\\n\\r\\n                            <!-- Name Column -->\\r\\n                            <ng-container cdkColumnDef=\\\"name\\\">\\r\\n                                <mat-header-cell *cdkHeaderCellDef>Team Name</mat-header-cell>\\r\\n                                <mat-cell *cdkCellDef=\\\"let element\\\">\\r\\n                                    <p class=\\\"text-truncate font-weight-600\\\">{{element.title}}</p>\\r\\n                                </mat-cell>\\r\\n                            </ng-container>\\r\\n                        \\r\\n                            <!-- Member Column -->\\r\\n                            <ng-container cdkColumnDef=\\\"member\\\">\\r\\n                                <mat-header-cell *cdkHeaderCellDef fxHide fxShow.gt-sm>Member</mat-header-cell>\\r\\n                                <mat-cell *cdkCellDef=\\\"let element\\\" fxHide fxShow.gt-sm>\\r\\n                                    <p class=\\\"email text-truncate\\\">\\r\\n                                        {{element.employees}}\\r\\n                                    </p>\\r\\n                                </mat-cell>\\r\\n                            </ng-container>\\r\\n                        \\r\\n                            <!-- Manager Column -->\\r\\n                            <ng-container cdkColumnDef=\\\"manager\\\">\\r\\n                                <mat-header-cell *cdkHeaderCellDef>Manager</mat-header-cell>\\r\\n                                <mat-cell *cdkCellDef=\\\"let element\\\">\\r\\n                                    <p class=\\\"manager text-truncate\\\" *ngIf=\\\"element.members.length\\\">\\r\\n                                        {{element.members[0].first_name}} {{element.members[0].last_name}}\\r\\n                                    </p>\\r\\n                                </mat-cell>\\r\\n                            </ng-container>\\r\\n\\r\\n                            <!-- Buttons Column -->\\r\\n                            <ng-container cdkColumnDef=\\\"buttons\\\">\\r\\n                                <mat-header-cell *cdkHeaderCellDef></mat-header-cell>\\r\\n                                <mat-cell *cdkCellDef=\\\"let element\\\">\\r\\n                                    <div fxFlex=\\\"row\\\" fxLayoutAlign=\\\"end center\\\">\\r\\n\\r\\n                                        <button mat-icon-button [matMenuTriggerFor]=\\\"moreMenu\\\" aria-label=\\\"More\\\"\\r\\n                                                (click)=\\\"$event.stopPropagation();\\\">\\r\\n                                            <mat-icon class=\\\"secondary-text\\\">more_vert</mat-icon>\\r\\n                                        </button>\\r\\n                        \\r\\n                                        <mat-menu #moreMenu=\\\"matMenu\\\">\\r\\n                                            <button mat-menu-item aria-label=\\\"edit\\\" (click)=\\\"openModal(element)\\\">\\r\\n                                                <mat-icon>edit</mat-icon>\\r\\n                                                <span>Edit</span>\\r\\n                                            </button>\\r\\n                                            <button mat-menu-item aria-label=\\\"remove\\\" (click)=\\\"deleteTeam(element.id)\\\">\\r\\n                                                <mat-icon>delete</mat-icon>\\r\\n                                                <span>Delete</span>\\r\\n                                            </button>\\r\\n                                        </mat-menu>\\r\\n                                    </div>\\r\\n                        \\r\\n                                </mat-cell>\\r\\n                            </ng-container>\\r\\n                        \\r\\n                            <mat-header-row *cdkHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n                            <mat-row *cdkRowDef=\\\"let element; columns: displayedColumns; let i = index\\\"\\r\\n                                    class=\\\"contact\\\"\\r\\n                                    [@animate]=\\\"{value:'*',params:{y:'100%'}}\\\">\\r\\n                            </mat-row>\\r\\n                        </mat-table>             \\r\\n    \\r\\n                </div>\\r\\n                <!-- / CONTENT -->\\r\\n    \\r\\n            </div>\\r\\n            <!-- / CENTER -->\\r\\n    \\r\\n    </mat-sidenav-container>\\r\\n</div>\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n.content {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-flex: 1;\\n          flex: 1 1 auto;\\n  width: 100%; }\\n.content .mat-table {\\n    width: 100%;\\n    background: transparent;\\n    box-shadow: none; }\\n.content .mat-table .mat-column-checkbox {\\n      -webkit-box-flex: 0;\\n              flex: 0 1 64px;\\n      padding-left: 18px; }\\n.content .mat-table .mat-column-avatar {\\n      -webkit-box-flex: 0;\\n              flex: 0 1 64px; }\\n.content .mat-table .mat-column-buttons {\\n      -webkit-box-flex: 0;\\n              flex: 0 1 80px; }\\n.content .mat-table .mat-header-row {\\n      padding: 8px; }\\n.content .mat-table .mat-row {\\n      position: relative;\\n      cursor: pointer;\\n      padding: 8px; }\\n.content .mat-table .mat-row .mat-cell {\\n        min-width: 0; }\\n.content .mat-table .mat-row .mat-cell.mat-column-detail-button {\\n          -webkit-box-flex: 0;\\n                  flex: 0 1 auto;\\n          padding: 0 24px 0 0; }\\n@media screen and (min-width: 1280px) {\\n            .content .mat-table .mat-row .mat-cell.mat-column-detail-button {\\n              display: none; } }\\n#add-contact-button {\\n  position: absolute;\\n  bottom: 12px;\\n  right: 12px;\\n  padding: 0;\\n  z-index: 99; }\\n/* .manager{\\r\\n    color: #F57D3F;\\r\\n} */\\n\"","import { ApiLoaderService } from '@fuse/services/api-loader.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { MatDialog, MatDialogRef } from '@angular/material';\r\nimport { AddTeamComponent } from '../add-team/add-team.component';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport { ToasterService } from '@fuse/services/toaster-service.service';\r\nimport { TeamManagementService } from '../team-management.service';\r\n\r\n@Component({\r\n  selector: 'app-manage-team',\r\n  templateUrl: './manage-team.component.html',\r\n  styleUrls: ['./manage-team.component.scss'],\r\n  animations   : fuseAnimations\r\n})\r\nexport class ManageTeamComponent implements OnInit {\r\n\r\n  dialogRef: any;\r\n  displayedColumns: string[] = ['index', 'name', 'member', 'manager', 'buttons'];\r\n  dataSource: any;\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n\r\n  constructor(public dialog: MatDialog,\r\n    private apiloader: ApiLoaderService,\r\n    private toast: ToasterService,\r\n    private teamService: TeamManagementService) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.getAllTeams();\r\n  }\r\n\r\n  openModal(type)\r\n  {   \r\n      let data = { };\r\n      if (type === 'add'){\r\n        data = { action: 'ADD' };\r\n      }else{\r\n        data = { team_data: type, action: 'EDIT' };\r\n      }\r\n\r\n      this.dialogRef = this.dialog.open(AddTeamComponent, {\r\n          panelClass: 'contact-form-dialog',\r\n          data : data\r\n      });\r\n\r\n      this.dialogRef.afterClosed()\r\n          .subscribe((response: FormGroup) => {\r\n              if ( !response ){ return; }\r\n              else{\r\n                if (type === 'add'){ this.createTeam(response); }\r\n                else{ this.updateTeam(response); }\r\n              }\r\n          });\r\n\r\n  }\r\n\r\n  getAllTeams(){\r\n    this.teamService.getData('teams').subscribe(response => {\r\n        if (response.data){\r\n            this.dataSource = response.data;\r\n            for (let i = 0; i < this.dataSource.length; i++){\r\n                let mem = [];\r\n                for (let j = 1; j < this.dataSource[i].members.length; j++){\r\n                    mem.push(this.dataSource[i].members[j]);\r\n                }\r\n                const employees = mem.map(e => e.first_name + ' ' + e.last_name).join(',');\r\n                this.dataSource[i]['employees'] = employees;\r\n            }\r\n        }\r\n    }, error => {\r\n        this.toast.showError(error);\r\n    });\r\n  }\r\n\r\n  deleteTeam(id)\r\n  {\r\n      this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n          disableClose: true\r\n      });\r\n\r\n      this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete?';\r\n\r\n      this.confirmDialogRef.afterClosed().subscribe(result => {\r\n          if ( result )\r\n          {\r\n            this.apiloader.setLoader(true);\r\n            this.teamService.deleteData('teams/' + id).subscribe(response => {\r\n                  if (response.status === 'success'){\r\n                    this.apiloader.setLoader(false);\r\n                    this.getAllTeams();\r\n                    this.toast.showSuccess('Team Deleted Successfully!.');\r\n                  }\r\n            }, error => {\r\n                this.apiloader.setLoader(false);\r\n                this.toast.showError(error);\r\n            });\r\n          }\r\n          this.confirmDialogRef = null;\r\n      });\r\n\r\n  }\r\n\r\n  createTeam(formData){\r\n    this.apiloader.setLoader(true);\r\n    const data = {\r\n      title: formData.title,\r\n      managerId: formData.managerId,\r\n      employees: formData.employees\r\n    };\r\n\r\n    this.teamService.postData('teams', data).subscribe(response => {\r\n        if (response.data){\r\n            this.apiloader.setLoader(false);\r\n            this.getAllTeams();\r\n            this.toast.showSuccess('Team Created Successfully!.');\r\n        }\r\n    }, error => {\r\n        this.apiloader.setLoader(false);\r\n        this.toast.showError(error);\r\n    });\r\n  }\r\n\r\n  updateTeam(formData){\r\n    this.apiloader.setLoader(true);\r\n    let id = formData.id;\r\n    delete formData.id;\r\n\r\n    this.teamService.postData('teams/' + id, formData).subscribe(response => {\r\n        if (response.data){\r\n            this.apiloader.setLoader(false);\r\n            this.getAllTeams();\r\n            this.toast.showSuccess('Team Updated Successfully!.');\r\n        }\r\n    }, error => {\r\n        this.apiloader.setLoader(false);\r\n        this.toast.showError(error);\r\n    });\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MatButtonModule, MatCheckboxModule, MatDatepickerModule, MatSelectModule,\r\n           MatFormFieldModule, MatIconModule, MatInputModule, MatMenuModule, MatRippleModule,\r\n           MatSidenavModule, MatTableModule, MatToolbarModule } from '@angular/material';\r\nimport { FuseSharedModule } from '@fuse/shared.module';\r\nimport { FuseConfirmDialogModule } from '@fuse/components';\r\n\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { ManageTeamComponent } from './manage-team/manage-team.component';\r\nimport { AddTeamComponent } from './add-team/add-team.component';\r\nimport { TeamManagementService } from './team-management.service';\r\n\r\nconst routes: Routes = [\r\n  {\r\n      path     : '',\r\n      component: ManageTeamComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    MatDatepickerModule,\r\n    MatFormFieldModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatMenuModule,\r\n    MatRippleModule,\r\n    MatSidenavModule,\r\n    MatTableModule,\r\n    MatSelectModule,\r\n    MatToolbarModule,\r\n    FuseSharedModule,\r\n    CdkTableModule,\r\n    FuseConfirmDialogModule\r\n  ],\r\n  declarations: [ManageTeamComponent, AddTeamComponent],\r\n  entryComponents: [AddTeamComponent],\r\n  providers: [ TeamManagementService ]\r\n})\r\nexport class TeamManagementModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\nimport { apiUri } from '@fuse/constant';\r\n\r\n@Injectable()\r\nexport class TeamManagementService {\r\n  baseUrl = apiUri;    \r\n  constructor(private http: HttpClient) { }\r\n\r\n  setHeaders(){\r\n    let headers: HttpHeaders = new HttpHeaders();\r\n    headers = headers.set('Accept', 'application/json');\r\n    /* headers = headers.set('Content-Type', 'application/x-www-form-urlencoded'); */\r\n    return headers;\r\n  }\r\n\r\n  public postData(url, data, type?: string): Observable<any>{\r\n      let headers = this.setHeaders();\r\n      headers.set('Content-Type', 'application/json');\r\n      if (type = 'reset'){\r\n        headers = headers.set('Authorization', 'Bearer 12344' );\r\n      }\r\n      const options = { headers: headers };\r\n      return this.http.post(this.baseUrl + url, data, options).map(this.extractData).catch(this.handleError);\r\n  }\r\n\r\n  public getData(url, data?: any): Observable<any>{\r\n      const headers = this.setHeaders();\r\n      if (data){\r\n        const queryParams =  Object.keys(data).map(key => key + '=' + data[key]).join('&');\r\n        url += '?' + queryParams;\r\n      }\r\n      const options = { headers: headers };\r\n      return this.http.get(this.baseUrl + url, options).map(this.extractData).catch(this.handleError);\r\n  }\r\n\r\n  public deleteData(url): Observable<any>{\r\n    const headers = this.setHeaders();\r\n    const options = { headers: headers };\r\n    return this.http.delete(this.baseUrl + url, options).map(this.extractData).catch(this.handleError);\r\n  }\r\n\r\n  private extractData(res: Response) {\r\n      const body = res;\r\n      return body || {};\r\n  }\r\n\r\n  private handleError(error: any) {\r\n    const errMsg = error.error;\r\n    if (typeof errMsg.message === 'object') {\r\n      const arr = Array.from(Object.keys(errMsg.message), k => errMsg.message[k]);\r\n      return throwError(arr);\r\n    }\r\n    return throwError(errMsg.message);\r\n  }\r\n  \r\n}\r\n","export class Team\r\n{\r\n    id: string;\r\n    title: string;\r\n    members: Array<any>;\r\n    manager: string;\r\n\r\n    constructor( team )\r\n    {\r\n        {\r\n            this.id = team.id || '' ;\r\n            this.title = team.title || '';\r\n            this.members = team.members || [];\r\n            this.manager = team.manager || '';\r\n        }\r\n    }\r\n}\r\n"],"sourceRoot":""}