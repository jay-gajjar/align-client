{"version":3,"sources":["webpack:///./src/app/main/content/apps/company-contacts/company-contacts.service.ts","webpack:///./src/app/main/content/apps/company-contacts/contact-form/contact-form.component.html","webpack:///./src/app/main/content/apps/company-contacts/contact-form/contact-form.component.scss","webpack:///./src/app/main/content/apps/company-contacts/contact-form/contact-form.component.ts","webpack:///./src/app/main/content/apps/company-contacts/contact-list/contact-list.component.html","webpack:///./src/app/main/content/apps/company-contacts/contact-list/contact-list.component.scss","webpack:///./src/app/main/content/apps/company-contacts/contact-list/contact-list.component.ts","webpack:///./src/app/main/content/apps/company-contacts/contact.model.ts","webpack:///./src/app/main/content/apps/company-contacts/contacts.component.html","webpack:///./src/app/main/content/apps/company-contacts/contacts.component.scss","webpack:///./src/app/main/content/apps/company-contacts/contacts.component.ts","webpack:///./src/app/main/content/apps/company-contacts/contacts.module.ts","webpack:///./src/app/main/content/apps/company-contacts/contacts.service.ts","webpack:///./src/app/main/content/apps/company-contacts/img-cropper/img-cropper.component.html","webpack:///./src/app/main/content/apps/company-contacts/img-cropper/img-cropper.component.scss","webpack:///./src/app/main/content/apps/company-contacts/img-cropper/img-cropper.component.ts","webpack:///./src/app/main/content/apps/company-contacts/selected-bar/selected-bar.component.html","webpack:///./src/app/main/content/apps/company-contacts/selected-bar/selected-bar.component.scss","webpack:///./src/app/main/content/apps/company-contacts/selected-bar/selected-bar.component.ts","webpack:///./src/app/main/content/apps/company-contacts/sidenavs/main/main.component.html","webpack:///./src/app/main/content/apps/company-contacts/sidenavs/main/main.component.scss","webpack:///./src/app/main/content/apps/company-contacts/sidenavs/main/main.component.ts"],"names":[],"mappings":"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","file":"company-contacts-contacts-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\nimport { apiUri } from '@fuse/constant';\r\n\r\n@Injectable()\r\nexport class CompanyContactsService {\r\n      baseUrl = apiUri;    \r\n      constructor(private http: HttpClient) { }\r\n\r\n      setHeaders(){\r\n        let headers: HttpHeaders = new HttpHeaders();\r\n        headers = headers.set('Accept', 'application/json');\r\n        headers = headers.set('Content-Type', 'application/x-www-form-urlencoded');\r\n        return headers;\r\n      }\r\n\r\n      public postData(url, data, type?: string): Observable<any>{\r\n          let headers = this.setHeaders();\r\n          if (type = 'reset'){\r\n            headers = headers.set('Authorization', 'Bearer 12344' );\r\n          }\r\n          const options = { headers: headers };\r\n          return this.http.post(this.baseUrl + url, data, options).map(this.extractData).catch(this.handleError);\r\n      }\r\n\r\n      public getData(url, data?: any): Observable<any>{\r\n          const headers = this.setHeaders();\r\n          if(data){\r\n            const queryParams =  Object.keys(data).map(key => key + '=' + data[key]).join('&');\r\n            url += '?' + queryParams;\r\n          }\r\n          const options = { headers: headers };\r\n          return this.http.get(this.baseUrl + url, options).map(this.extractData).catch(this.handleError);\r\n      }\r\n\r\n      public deleteData(url): Observable<any>{\r\n        const headers = this.setHeaders();\r\n        const options = { headers: headers };\r\n        return this.http.delete(this.baseUrl + url, options).map(this.extractData).catch(this.handleError);\r\n      }\r\n\r\n      private extractData(res: Response) {\r\n          const body = res;\r\n          return body || {};\r\n      }\r\n\r\n      private handleError(error: any) {\r\n        const errMsg = error.error;\r\n        if (typeof errMsg.message === 'object') {\r\n          const arr = Array.from(Object.keys(errMsg.message), k => errMsg.message[k]);\r\n          return throwError(arr);\r\n        }\r\n        return throwError(errMsg.message);\r\n      }\r\n}\r\n","module.exports = \"<div class=\\\"dialog-content-wrapper\\\">\\r\\n    <form [formGroup]=\\\"contactForm\\\">\\r\\n    <mat-toolbar matDialogTitle class=\\\"mat-accent m-0\\\">\\r\\n        <mat-toolbar-row fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n            <span class=\\\"title dialog-title\\\">{{dialogTitle}}</span>\\r\\n            <button mat-icon-button (click)=\\\"dialogRef.close()\\\" aria-label=\\\"Close dialog\\\">\\r\\n                <mat-icon>close</mat-icon>\\r\\n            </button>\\r\\n        </mat-toolbar-row>\\r\\n\\r\\n        <mat-toolbar-row class=\\\"toolbar-bottom py-16\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n            <div class=\\\"logo\\\">\\r\\n                <label for=\\\"upload-image\\\">\\r\\n                    <img src=\\\"assets/images/circle.png\\\"  *ngIf=\\\"croppedImage == ''\\\">\\r\\n                    <img [src]=\\\"croppedImage\\\" width=\\\"200\\\" class=\\\"cropped-image\\\" *ngIf=\\\"croppedImage !== ''\\\" />\\r\\n                </label>\\r\\n                <input type=\\\"file\\\" id=\\\"upload-image\\\" ng2FileSelect [uploader]=\\\"uploader\\\" formControlName=\\\"company_logo\\\" (change)=\\\"fileChangeEvent($event)\\\"\\r\\n                (onFileSelected)=\\\"onFileSelected($event)\\\" accept=\\\"image/png, image/jpeg\\\" style=\\\"display:none\\\" />\\r\\n            </div>\\r\\n        </mat-toolbar-row>\\r\\n    </mat-toolbar>\\r\\n\\r\\n    <div mat-dialog-content class=\\\"p-24 m-0\\\" fusePerfectScrollbar>\\r\\n\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n                <mat-form-field fxFlex>\\r\\n                    <input name=\\\"company_name\\\" formControlName=\\\"company_name\\\" placeholder=\\\"Company Name\\\" matInput required>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n                <mat-form-field fxFlex>\\r\\n                    <input name=\\\"email\\\" formControlName=\\\"email\\\" matInput type=\\\"email\\\" placeholder=\\\"Email\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n                <mat-form-field fxFlex>\\r\\n                    <input formControlName=\\\"phone\\\" matInput placeholder=\\\"Phone number\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            \\r\\n            <mat-radio-group formControlName=\\\"subscription\\\" aria-label=\\\"Select an option\\\">\\r\\n                <h3>Subscription : </h3>\\r\\n                <mat-radio-button value=\\\"free\\\">Free</mat-radio-button>\\r\\n                <mat-radio-button value=\\\"paid\\\">Paid</mat-radio-button>\\r\\n            </mat-radio-group>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div mat-dialog-actions class=\\\"m-0 p-16\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n\\r\\n        <button mat-raised-button\\r\\n                (click)=\\\"dialogRef.close(contactForm)\\\"\\r\\n                class=\\\"save-button mat-accent\\\"\\r\\n                [disabled]=\\\"contactForm.invalid\\\"\\r\\n                aria-label=\\\"SAVE\\\">\\r\\n            SAVE\\r\\n        </button>\\r\\n\\r\\n    </div>\\r\\n\\r\\n</form>\\r\\n</div>\\r\\n\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n.contact-form-dialog {\\n  width: 400px; }\\n@media screen and (max-width: 599px) {\\n    .contact-form-dialog {\\n      width: 100%; } }\\n.contact-form-dialog .mat-dialog-container {\\n    padding: 0; }\\n.contact-form-dialog .mat-dialog-container .mat-toolbar {\\n      -webkit-box-flex: 1;\\n              flex: 1 0 auto;\\n      min-height: initial; }\\n.contact-form-dialog .mat-dialog-container .toolbar-bottom {\\n      height: auto; }\\n.contact-form-dialog .dialog-content-wrapper {\\n    max-height: 85vh;\\n    display: -webkit-box;\\n    display: flex;\\n    -webkit-box-orient: vertical;\\n    -webkit-box-direction: normal;\\n            flex-direction: column; }\\n.contact-form-dialog mat-radio-group mat-radio-button {\\n  padding-right: 10px; }\\n.contact-form-dialog mat-radio-group h3 {\\n  display: inline-block;\\n  padding-right: 10px;\\n  font-weight: 500; }\\n.logo {\\n  width: 128px; }\\n.cropped-image {\\n  border-radius: 100%; }\\n\"","import { Component, Inject, ViewEncapsulation, EventEmitter } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from '@angular/material';\r\nimport { FileUploader, FileItem } from 'ng2-file-upload';\r\nimport { ImgCropperComponent } from '../img-cropper/img-cropper.component';\r\nimport { CalendarEvent } from 'angular-calendar';\r\n\r\nimport { Contact } from '../contact.model';\r\n\r\n@Component({\r\n    selector     : 'fuse-contacts-contact-form-dialog',\r\n    templateUrl  : './contact-form.component.html',\r\n    styleUrls    : ['./contact-form.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class FuseContactsContactFormDialogComponent\r\n{\r\n    event: CalendarEvent;\r\n    dialogTitle: string;\r\n    contactForm: FormGroup;\r\n    action: string;\r\n    contact: Contact;\r\n\r\n    public uploader: FileUploader;\r\n    imageChangedEvent: any = '';\r\n    croppedImage: any = '';\r\n    cropDialog: any;\r\n\r\n    constructor(\r\n        public dialogRef: MatDialogRef<FuseContactsContactFormDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) private data: any,\r\n        private formBuilder: FormBuilder, \r\n        public dialog: MatDialog\r\n    )\r\n    {\r\n\r\n        this.uploader.onBeforeUploadItem = (fileItem: any) => {\r\n            console.log(fileItem);\r\n        };\r\n        \r\n        this.action = data.action;\r\n\r\n        if ( this.action === 'edit' )\r\n        {\r\n            this.dialogTitle = 'Edit Contact';\r\n            this.contact = data.contact;\r\n        }\r\n        else\r\n        {\r\n            this.dialogTitle = 'New Contact';\r\n            this.contact = new Contact({});\r\n        }\r\n\r\n        this.contactForm = this.createContactForm();\r\n    }\r\n\r\n    createContactForm()\r\n    {\r\n        return this.formBuilder.group({\r\n            company_logo    : [''],\r\n            company_name    : [''],\r\n            email   : [''],\r\n            phone   : [''],\r\n            subscription : [''],\r\n        });\r\n    }\r\n\r\n    fileChangeEvent(event: any): void {\r\n        this.imageChangedEvent = event;\r\n        this.cropDialog = this.dialog.open(ImgCropperComponent, {\r\n            panelClass: 'contact-form-dialog',\r\n            data      : {\r\n                action: event,\r\n                height: '400px'\r\n            }\r\n        });\r\n\r\n        this.cropDialog.afterClosed()\r\n            .subscribe(response => {\r\n                if ( !response )\r\n                {\r\n                    return '';\r\n                }else{\r\n                    this.croppedImage = response;\r\n                }\r\n            });\r\n    }\r\n\r\n    public onFileSelected(event: EventEmitter<File[]>) {\r\n        const file: File = event[0];\r\n    }\r\n}\r\n","module.exports = \"<mat-table #table [dataSource]=\\\"dataSource\\\"\\r\\n           [@animateStagger]=\\\"{value:'50'}\\\" *ngIf=\\\"dataSource\\\">\\r\\n\\r\\n    <!-- Avatar Column -->\\r\\n    <ng-container cdkColumnDef=\\\"avatar\\\">\\r\\n        <mat-header-cell *cdkHeaderCellDef></mat-header-cell>\\r\\n        <mat-cell *cdkCellDef=\\\"let contact\\\">\\r\\n            <img class=\\\"avatar\\\" *ngIf=\\\"contact.avatar\\\" [alt]=\\\"contact.name\\\"\\r\\n                 [src]=\\\"contact.avatar\\\"/>\\r\\n        </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Name Column -->\\r\\n    <ng-container cdkColumnDef=\\\"name\\\">\\r\\n        <mat-header-cell *cdkHeaderCellDef>Name</mat-header-cell>\\r\\n        <mat-cell *cdkCellDef=\\\"let contact\\\" (click)=\\\"getDetails(contact.id)\\\">\\r\\n            <p class=\\\"text-truncate font-weight-600\\\">{{contact.name}}</p>\\r\\n        </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Email Column -->\\r\\n    <ng-container cdkColumnDef=\\\"email\\\">\\r\\n        <mat-header-cell *cdkHeaderCellDef fxHide fxShow.gt-sm>Email</mat-header-cell>\\r\\n        <mat-cell *cdkCellDef=\\\"let contact\\\" fxHide fxShow.gt-sm>\\r\\n            <p class=\\\"email text-truncate\\\">\\r\\n                {{contact.email}}\\r\\n            </p>\\r\\n        </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Phone Column -->\\r\\n    <ng-container cdkColumnDef=\\\"phone\\\">\\r\\n        <mat-header-cell *cdkHeaderCellDef fxHide fxShow.gt-md>Phone</mat-header-cell>\\r\\n        <mat-cell *cdkCellDef=\\\"let contact\\\" fxHide fxShow.gt-sm>\\r\\n            <p class=\\\"phone text-truncate\\\">\\r\\n                {{contact.contact_number}}\\r\\n            </p>\\r\\n        </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Phone Column -->\\r\\n    <ng-container cdkColumnDef=\\\"subscription\\\">\\r\\n        <mat-header-cell *cdkHeaderCellDef fxHide fxShow.gt-md>Subscription</mat-header-cell>\\r\\n        <mat-cell *cdkCellDef=\\\"let contact\\\" fxHide fxShow.gt-md>\\r\\n            <p class=\\\"subscription text-truncate\\\">\\r\\n                free\\r\\n            </p>\\r\\n        </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Buttons Column -->\\r\\n    <ng-container cdkColumnDef=\\\"buttons\\\">\\r\\n        <mat-header-cell *cdkHeaderCellDef></mat-header-cell>\\r\\n        <mat-cell *cdkCellDef=\\\"let contact\\\">\\r\\n            <div fxFlex=\\\"row\\\" fxLayoutAlign=\\\"end center\\\">\\r\\n                <!-- <button mat-icon-button (click)=\\\"$event.stopPropagation();toggleStar(contact.id)\\\" aria-label=\\\"Toggle star\\\">\\r\\n                    <mat-icon class=\\\"amber-fg\\\" *ngIf=\\\"user.starred.includes(contact.id)\\\">star</mat-icon>\\r\\n                    <mat-icon class=\\\"secondary-text\\\">calendar_today</mat-icon>\\r\\n                </button> -->\\r\\n\\r\\n                <button mat-icon-button [matMenuTriggerFor]=\\\"moreMenu\\\" aria-label=\\\"More\\\"\\r\\n                        (click)=\\\"$event.stopPropagation();\\\">\\r\\n                    <mat-icon class=\\\"secondary-text\\\">more_vert</mat-icon>\\r\\n                </button>\\r\\n\\r\\n                <mat-menu #moreMenu=\\\"matMenu\\\">\\r\\n                    <button mat-menu-item aria-label=\\\"remove\\\" (click)=\\\"deleteContact(contact.id)\\\">\\r\\n                        <mat-icon>delete</mat-icon>\\r\\n                        <span>Remove</span>\\r\\n                    </button>\\r\\n                </mat-menu>\\r\\n            </div>\\r\\n\\r\\n        </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <mat-header-row *cdkHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n    <mat-row *cdkRowDef=\\\"let contact; columns: displayedColumns;\\\"\\r\\n             class=\\\"contact\\\"\\r\\n             [@animate]=\\\"{value:'*',params:{y:'100%'}}\\\">\\r\\n    </mat-row>\\r\\n</mat-table>\\r\\n\\r\\n\\r\\n\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\nfuse-contacts-contact-list {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-flex: 1;\\n          flex: 1 1 auto;\\n  width: 100%; }\\nfuse-contacts-contact-list .mat-table {\\n    width: 100%;\\n    background: transparent;\\n    box-shadow: none; }\\nfuse-contacts-contact-list .mat-table .mat-column-checkbox {\\n      -webkit-box-flex: 0;\\n              flex: 0 1 64px;\\n      padding-left: 18px; }\\nfuse-contacts-contact-list .mat-table .mat-column-avatar {\\n      -webkit-box-flex: 0;\\n              flex: 0 1 64px; }\\nfuse-contacts-contact-list .mat-table .mat-column-buttons {\\n      -webkit-box-flex: 0;\\n              flex: 0 1 80px; }\\nfuse-contacts-contact-list .mat-table mat-cell:first-child {\\n      padding-left: 15px !important; }\\nfuse-contacts-contact-list .mat-table .mat-row {\\n      position: relative;\\n      cursor: pointer;\\n      padding: 8px; }\\nfuse-contacts-contact-list .mat-table .mat-row .mat-cell {\\n        min-width: 0; }\\nfuse-contacts-contact-list .mat-table .mat-row .mat-cell.mat-column-detail-button {\\n          -webkit-box-flex: 0;\\n                  flex: 0 1 auto;\\n          padding: 0 24px 0 0; }\\n@media screen and (min-width: 1280px) {\\n            fuse-contacts-contact-list .mat-table .mat-row .mat-cell.mat-column-detail-button {\\n              display: none; } }\\n#add-contact-button {\\n  position: absolute;\\n  bottom: 12px;\\n  right: 12px;\\n  padding: 0;\\n  z-index: 99; }\\n\"","import { Component, OnDestroy, OnInit, TemplateRef, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material';\r\nimport { Router } from '@angular/router';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport { ContactsService } from '../contacts.service';\r\nimport { CompanyContactsService } from '../company-contacts.service';\r\nimport { ApiLoaderService } from '@fuse/services/api-loader.service';\r\nimport { ToasterService } from '@fuse/services/toaster-service.service';\r\n\r\n@Component({\r\n    selector     : 'fuse-contacts-contact-list',\r\n    templateUrl  : './contact-list.component.html',\r\n    styleUrls    : ['./contact-list.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations   : fuseAnimations,\r\n    providers: [ CompanyContactsService]\r\n})\r\nexport class FuseContactsContactListComponent implements OnInit\r\n{\r\n    @ViewChild('dialogContent') dialogContent: TemplateRef<any>;\r\n\r\n    contacts: any;\r\n    user: any;\r\n    dataSource: any;\r\n    displayedColumns = [ 'avatar', 'name', 'email', 'phone', 'subscription', 'buttons'];\r\n    selectedContacts: any[];\r\n    dialogRef: any;\r\n    confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n\r\n    constructor(\r\n        public dialog: MatDialog,\r\n        private router: Router,        \r\n        private companyService: CompanyContactsService,\r\n        private apiloader: ApiLoaderService,\r\n        private toast: ToasterService){}\r\n\r\n    ngOnInit()\r\n    {\r\n        this.getAllClients();\r\n    }\r\n\r\n    getAllClients(){\r\n        this.companyService.getData('clients').subscribe(response => {\r\n            if (response.data){\r\n                this.dataSource = response.data;\r\n            }\r\n        }, error => {\r\n            this.toast.showError(error);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Delete Contact\r\n     */\r\n    deleteContact(id)\r\n    {\r\n        this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n            disableClose: true\r\n        });\r\n\r\n        this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete?';\r\n\r\n        this.confirmDialogRef.afterClosed().subscribe(result => {\r\n            if ( result )\r\n            {\r\n                this.apiloader.setLoader(true);\r\n                this.companyService.deleteData('clients/' + id).subscribe(response => {\r\n                    if (response.status === 'success'){\r\n                        this.apiloader.setLoader(false);\r\n                        this.toast.showSuccess('Client Deleted Successfully!.');\r\n                    }\r\n                }, error => {\r\n                    this.apiloader.setLoader(false);\r\n                    this.toast.showError(error);\r\n                });\r\n            }\r\n            this.confirmDialogRef = null;\r\n        });\r\n\r\n    }\r\n\r\n    getDetails(id){\r\n        this.router.navigate(['/apps/company-details', id]);\r\n    }\r\n}\r\n","import { Subscription } from 'rxjs';\r\nimport { FuseUtils } from '@fuse/utils';\r\n\r\nexport class Contact\r\n{\r\n    id: string;\r\n    name: string;\r\n    lastName: string;\r\n    avatar: string;\r\n    nickname: string;\r\n    company: string;\r\n    jobTitle: string;\r\n    email: string;\r\n    phone: string;\r\n    address: string;\r\n    birthday: string;\r\n    notes: string;\r\n    subscription: string;\r\n\r\n    constructor(contact)\r\n    {\r\n        {\r\n            this.id = contact.id || FuseUtils.generateGUID();\r\n            this.name = contact.name || '';\r\n            this.lastName = contact.lastName || '';\r\n            this.avatar = contact.avatar || 'assets/images/avatars/profile.jpg';\r\n            this.nickname = contact.nickname || '';\r\n            this.company = contact.company || '';\r\n            this.jobTitle = contact.jobTitle || '';\r\n            this.email = contact.email || '';\r\n            this.phone = contact.phone || '';\r\n            this.address = contact.address || '';\r\n            this.birthday = contact.birhday || '';\r\n            this.notes = contact.notes || '';\r\n            this.subscription = contact.subscription || '';\r\n        }\r\n    }\r\n}\r\n","module.exports = \"<div id=\\\"contacts\\\" class=\\\"page-layout simple left-sidenav inner-sidenav\\\">\\r\\n\\r\\n    <!-- HEADER -->\\r\\n    <div class=\\\"header mat-accent-bg p-16 p-sm-24\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start start\\\"\\r\\n         fxLayout.gt-xs=\\\"row\\\" fxLayoutAlign.gt-xs=\\\"space-between center\\\">\\r\\n\\r\\n        <!-- APP TITLE -->\\r\\n        <div class=\\\"title\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n\\r\\n            <button mat-icon-button class=\\\"sidenav-toggle mr-12\\\"\\r\\n                    fuseMatSidenavToggler=\\\"contacts-main-sidenav\\\"\\r\\n                    fxHide.gt-md>\\r\\n                <mat-icon>menu</mat-icon>\\r\\n            </button>\\r\\n\\r\\n            <div class=\\\"logo\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n                <mat-icon class=\\\"logo-icon mr-16\\\" *fuseIfOnDom [@animate]=\\\"{value:'*',params:{delay:'50ms',scale:'0.2'}}\\\">account_box</mat-icon>\\r\\n                <span class=\\\"logo-text h1\\\" *fuseIfOnDom [@animate]=\\\"{value:'*',params:{delay:'100ms',x:'-25px'}}\\\">Clients</span>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n        <!-- / APP TITLE -->\\r\\n\\r\\n        <!-- SEARCH -->\\r\\n        <!-- <div class=\\\"search-input-wrapper mt-16 ml-8 m-sm-0\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n            <label for=\\\"search\\\" class=\\\"mr-8\\\">\\r\\n                <mat-icon>search</mat-icon>\\r\\n            </label>\\r\\n            <mat-form-field mat-no-float class=\\\"m-0\\\" floatLabel=\\\"never\\\">\\r\\n                <input matInput [formControl]=\\\"searchInput\\\" id=\\\"search\\\" placeholder=\\\"Search for anything\\\">\\r\\n            </mat-form-field>\\r\\n        </div> -->\\r\\n        <!-- / SEARCH -->\\r\\n\\r\\n        <!-- <button mat-fab class=\\\"fab-add\\\" (click)=\\\"openModal()\\\" aria-label=\\\"Add event\\\"\\r\\n            *fuseIfOnDom [@animate]=\\\"{value:'*',params:{delay:'300ms',scale:'0.2'}}\\\">\\r\\n            <mat-icon>add</mat-icon>\\r\\n        </button> -->\\r\\n\\r\\n    </div>\\r\\n    <!-- / HEADER -->\\r\\n\\r\\n    <!-- SELECTED BAR -->\\r\\n    <fuse-selected-bar class=\\\"mat-accent-600-bg\\\" *ngIf=\\\"hasSelectedContacts\\\" [@slideInTop]></fuse-selected-bar>\\r\\n    <!-- / SELECTED BAR -->\\r\\n\\r\\n    <mat-sidenav-container>\\r\\n\\r\\n        <!-- SIDENAV -->\\r\\n       <!--  <mat-sidenav class=\\\"sidenav\\\" position=\\\"start\\\" opened=\\\"true\\\" mode=\\\"side\\\"\\r\\n                     fuseMatSidenavHelper=\\\"contacts-main-sidenav\\\" mat-is-locked-open=\\\"gt-sm\\\">\\r\\n\\r\\n            <fuse-contacts-main-sidenav *fuseIfOnDom [@animate]=\\\"{value:'*'}\\\"></fuse-contacts-main-sidenav>\\r\\n\\r\\n        </mat-sidenav> -->\\r\\n        <!-- / SIDENAV -->\\r\\n\\r\\n        <!-- CENTER -->\\r\\n        <div class=\\\"center p-24 pb-56 pr-sm-92\\\" fusePerfectScrollbar>\\r\\n\\r\\n            <!-- CONTENT -->\\r\\n            <div class=\\\"content mat-white-bg mat-elevation-z4\\\">\\r\\n\\r\\n                <fuse-contacts-contact-list></fuse-contacts-contact-list>\\r\\n\\r\\n            </div>\\r\\n            <!-- / CONTENT -->\\r\\n\\r\\n        </div>\\r\\n        <!-- / CENTER -->\\r\\n\\r\\n    </mat-sidenav-container>\\r\\n\\r\\n</div>\\r\\n\"","module.exports = \"#contacts .content {\\n  overflow: hidden; }\\n\\n.title {\\n  -webkit-box-flex: 1;\\n          flex: 1; }\\n\"","import { ApiLoaderService } from '@fuse/services/api-loader.service';\r\nimport { CompanyContactsService } from './company-contacts.service';\r\nimport { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material';\r\n\r\nimport { Subscription } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\r\n\r\nimport { fuseAnimations } from '@fuse/animations';\r\n\r\nimport { FuseContactsContactFormDialogComponent } from './contact-form/contact-form.component';\r\nimport { ContactsService } from './contacts.service';\r\nimport { ToasterService } from '@fuse/services/toaster-service.service';\r\n\r\n@Component({\r\n    selector     : 'fuse-contacts',\r\n    templateUrl  : './contacts.component.html',\r\n    styleUrls    : ['./contacts.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations   : fuseAnimations\r\n})\r\nexport class FuseContactsComponent implements OnInit, OnDestroy\r\n{\r\n    hasSelectedContacts: boolean;\r\n    searchInput: FormControl;\r\n    dialogRef: any;\r\n    onSelectedContactsChangedSubscription: Subscription;\r\n\r\n    constructor(\r\n        private contactsService: ContactsService,\r\n        public dialog: MatDialog,       \r\n        private companyService: CompanyContactsService,\r\n        private apiloader: ApiLoaderService,\r\n        private toast: ToasterService\r\n    )\r\n    {\r\n        this.searchInput = new FormControl('');\r\n    }\r\n\r\n    ngOnInit()\r\n    {\r\n        this.onSelectedContactsChangedSubscription =\r\n            this.contactsService.onSelectedContactsChanged\r\n                .subscribe(selectedContacts => {\r\n                    this.hasSelectedContacts = selectedContacts.length > 0;\r\n                });\r\n\r\n        this.searchInput.valueChanges\r\n            .pipe(\r\n                debounceTime(300),\r\n                distinctUntilChanged()\r\n            )\r\n            .subscribe(searchText => {\r\n                this.contactsService.onSearchTextChanged.next(searchText);\r\n            });\r\n    }\r\n\r\n    openModal()\r\n    {\r\n        this.dialogRef = this.dialog.open(FuseContactsContactFormDialogComponent, {\r\n            panelClass: 'contact-form-dialog',\r\n            data: { action: 'ADD' }\r\n        });\r\n\r\n        this.dialogRef.afterClosed()\r\n            .subscribe(response => {\r\n                if ( !response ){ return; }\r\n                else{\r\n                    console.log(response);\r\n                    /* this.createClient(response); */\r\n                }\r\n            });\r\n    }\r\n\r\n    createClient(formData){\r\n        this.apiloader.setLoader(true);\r\n        const body = new URLSearchParams();\r\n        body.set('name', formData.name);\r\n        body.set('email', formData.email);\r\n        body.set('phone', formData.phone);\r\n\r\n        this.companyService.postData('clients/register', body.toString()).subscribe(response => {\r\n            if (response.data){\r\n                this.apiloader.setLoader(false);\r\n                this.toast.showSuccess('Client Created Successfully!.');\r\n            }\r\n        }, error => {\r\n            this.apiloader.setLoader(false);\r\n            this.toast.showError(error);\r\n        });\r\n    }\r\n\r\n    ngOnDestroy()\r\n    {\r\n        this.onSelectedContactsChangedSubscription.unsubscribe();\r\n    }\r\n}\r\n","import { CompanyContactsService } from './company-contacts.service';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\n\r\nimport { MatButtonModule, MatRadioModule, MatCheckboxModule,\r\n         MatDatepickerModule, MatFormFieldModule, MatIconModule,\r\n         MatInputModule, MatMenuModule, MatRippleModule, MatSidenavModule, MatTableModule, MatToolbarModule } from '@angular/material';\r\n\r\nimport { FuseSharedModule } from '@fuse/shared.module';\r\nimport { FuseConfirmDialogModule } from '@fuse/components';\r\nimport { FileUploadModule } from 'ng2-file-upload';\r\n\r\nimport { ImageCropperModule } from 'ngx-image-cropper';\r\nimport { FuseContactsMainSidenavComponent } from './sidenavs/main/main.component';\r\nimport { FuseContactsComponent } from './contacts.component';\r\nimport { ContactsService } from './contacts.service';\r\nimport { FuseContactsContactListComponent } from './contact-list/contact-list.component';\r\nimport { FuseContactsSelectedBarComponent } from './selected-bar/selected-bar.component';\r\nimport { FuseContactsContactFormDialogComponent } from './contact-form/contact-form.component';\r\nimport { ImgCropperComponent } from './img-cropper/img-cropper.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path     : '**',\r\n        component: FuseContactsComponent,\r\n        resolve  : {\r\n            contacts: ContactsService\r\n        }\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    declarations   : [\r\n        FuseContactsComponent,\r\n        ImgCropperComponent,\r\n        FuseContactsContactListComponent,\r\n        FuseContactsSelectedBarComponent,\r\n        FuseContactsMainSidenavComponent,\r\n        FuseContactsContactFormDialogComponent\r\n    ],\r\n    imports        : [\r\n        RouterModule.forChild(routes),\r\n        CdkTableModule,\r\n\r\n        MatButtonModule,\r\n        MatCheckboxModule,\r\n        MatDatepickerModule,\r\n        MatFormFieldModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatMenuModule,\r\n        MatRippleModule,\r\n        MatSidenavModule,\r\n        MatTableModule,\r\n        MatToolbarModule,\r\n        MatRadioModule,\r\n        FuseSharedModule,\r\n        FuseConfirmDialogModule,\r\n        FileUploadModule,\r\n        ImageCropperModule\r\n    ],\r\n    providers      : [\r\n        ContactsService,\r\n        CompanyContactsService\r\n    ],\r\n    entryComponents: [FuseContactsContactFormDialogComponent, ImgCropperComponent]\r\n})\r\nexport class CompanyContactsModule\r\n{\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\r\n\r\nimport { FuseUtils } from '@fuse/utils';\r\n\r\nimport { Contact } from './contact.model';\r\n\r\n@Injectable()\r\nexport class ContactsService implements Resolve<any>\r\n{\r\n    onContactsChanged: BehaviorSubject<any> = new BehaviorSubject([]);\r\n    onSelectedContactsChanged: BehaviorSubject<any> = new BehaviorSubject([]);\r\n    onUserDataChanged: BehaviorSubject<any> = new BehaviorSubject([]);\r\n    onSearchTextChanged: Subject<any> = new Subject();\r\n    onFilterChanged: Subject<any> = new Subject();\r\n\r\n    contacts: Contact[];\r\n    user: any;\r\n    selectedContacts: string[] = [];\r\n\r\n    searchText: string;\r\n    filterBy: string;\r\n\r\n    constructor(private http: HttpClient)\r\n    {\r\n    }\r\n\r\n    /**\r\n     * The Contacts App Main Resolver\r\n     * @param {ActivatedRouteSnapshot} route\r\n     * @param {RouterStateSnapshot} state\r\n     * @returns {Observable<any> | Promise<any> | any}\r\n     */\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            Promise.all([\r\n                this.getContacts(),\r\n                this.getUserData()\r\n            ]).then(\r\n                ([files]) => {\r\n\r\n                    this.onSearchTextChanged.subscribe(searchText => {\r\n                        this.searchText = searchText;\r\n                        this.getContacts();\r\n                    });\r\n\r\n                    this.onFilterChanged.subscribe(filter => {\r\n                        this.filterBy = filter;\r\n                        this.getContacts();\r\n                    });\r\n\r\n                    resolve();\r\n\r\n                },\r\n                reject\r\n            );\r\n        });\r\n    }\r\n\r\n    getContacts(): Promise<any>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n                this.http.get('api/contacts-contacts')\r\n                    .subscribe((response: any) => {\r\n\r\n                        this.contacts = response;\r\n\r\n                        if ( this.filterBy === 'starred' )\r\n                        {\r\n                            this.contacts = this.contacts.filter(_contact => {\r\n                                return this.user.starred.includes(_contact.id);\r\n                            });\r\n                        }\r\n\r\n                        if ( this.filterBy === 'frequent' )\r\n                        {\r\n                            this.contacts = this.contacts.filter(_contact => {\r\n                                return this.user.frequentContacts.includes(_contact.id);\r\n                            });\r\n                        }\r\n\r\n                        if ( this.searchText && this.searchText !== '' )\r\n                        {\r\n                            this.contacts = FuseUtils.filterArrayByString(this.contacts, this.searchText);\r\n                        }\r\n\r\n                        this.contacts = this.contacts.map(contact => {\r\n                            return new Contact(contact);\r\n                        });\r\n\r\n                        this.onContactsChanged.next(this.contacts);\r\n                        resolve(this.contacts);\r\n                    }, reject);\r\n            }\r\n        );\r\n    }\r\n\r\n    getUserData(): Promise<any>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n                this.http.get('api/contacts-user/5725a6802d10e277a0f35724')\r\n                    .subscribe((response: any) => {\r\n                        this.user = response;\r\n                        this.onUserDataChanged.next(this.user);\r\n                        resolve(this.user);\r\n                    }, reject);\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Toggle selected contact by id\r\n     * @param id\r\n     */\r\n    toggleSelectedContact(id)\r\n    {\r\n        // First, check if we already have that contact as selected...\r\n        if ( this.selectedContacts.length > 0 )\r\n        {\r\n            const index = this.selectedContacts.indexOf(id);\r\n\r\n            if ( index !== -1 )\r\n            {\r\n                this.selectedContacts.splice(index, 1);\r\n\r\n                // Trigger the next event\r\n                this.onSelectedContactsChanged.next(this.selectedContacts);\r\n\r\n                // Return\r\n                return;\r\n            }\r\n        }\r\n\r\n        // If we don't have it, push as selected\r\n        this.selectedContacts.push(id);\r\n\r\n        // Trigger the next event\r\n        this.onSelectedContactsChanged.next(this.selectedContacts);\r\n    }\r\n\r\n    /**\r\n     * Toggle select all\r\n     */\r\n    toggleSelectAll()\r\n    {\r\n        if ( this.selectedContacts.length > 0 )\r\n        {\r\n            this.deselectContacts();\r\n        }\r\n        else\r\n        {\r\n            this.selectContacts();\r\n        }\r\n    }\r\n\r\n    selectContacts(filterParameter?, filterValue?)\r\n    {\r\n        this.selectedContacts = [];\r\n\r\n        // If there is no filter, select all todos\r\n        if ( filterParameter === undefined || filterValue === undefined )\r\n        {\r\n            this.selectedContacts = [];\r\n            this.contacts.map(contact => {\r\n                this.selectedContacts.push(contact.id);\r\n            });\r\n        }\r\n        else\r\n        {\r\n            /* this.selectedContacts.push(...\r\n                 this.contacts.filter(todo => {\r\n                     return todo[filterParameter] === filterValue;\r\n                 })\r\n             );*/\r\n        }\r\n\r\n        // Trigger the next event\r\n        this.onSelectedContactsChanged.next(this.selectedContacts);\r\n    }\r\n\r\n    updateContact(contact)\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            this.http.post('api/contacts-contacts/' + contact.id, {...contact})\r\n                .subscribe(response => {\r\n                    this.getContacts();\r\n                    resolve(response);\r\n                });\r\n        });\r\n    }\r\n\r\n    updateUserData(userData)\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            this.http.post('api/contacts-user/' + this.user.id, {...userData})\r\n                .subscribe(response => {\r\n                    this.getUserData();\r\n                    this.getContacts();\r\n                    resolve(response);\r\n                });\r\n        });\r\n    }\r\n\r\n    deselectContacts()\r\n    {\r\n        this.selectedContacts = [];\r\n\r\n        // Trigger the next event\r\n        this.onSelectedContactsChanged.next(this.selectedContacts);\r\n    }\r\n\r\n    deleteContact(contact)\r\n    {\r\n        const contactIndex = this.contacts.indexOf(contact);\r\n        this.contacts.splice(contactIndex, 1);\r\n        this.onContactsChanged.next(this.contacts);\r\n    }\r\n\r\n    deleteSelectedContacts()\r\n    {\r\n        for ( const contactId of this.selectedContacts )\r\n        {\r\n            const contact = this.contacts.find(_contact => {\r\n                return _contact.id === contactId;\r\n            });\r\n            const contactIndex = this.contacts.indexOf(contact);\r\n            this.contacts.splice(contactIndex, 1);\r\n        }\r\n        this.onContactsChanged.next(this.contacts);\r\n        this.deselectContacts();\r\n    }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"dialog-content-wrapper\\\">\\r\\n    <mat-toolbar matDialogTitle class=\\\"mat-accent m-0\\\">\\r\\n        <mat-toolbar-row fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n            <span class=\\\"title dialog-title\\\">Image Cropper</span>\\r\\n            <button mat-icon-button (click)=\\\"dialogRef.close()\\\" aria-label=\\\"Close dialog\\\">\\r\\n                <mat-icon>close</mat-icon>\\r\\n            </button>\\r\\n        </mat-toolbar-row>\\r\\n    </mat-toolbar>\\r\\n\\r\\n    <div mat-dialog-content class=\\\"p-16 m-0\\\" fusePerfectScrollbar>\\r\\n\\r\\n        <image-cropper\\r\\n            [imageChangedEvent]=\\\"imageChangedEvent\\\"\\r\\n            [maintainAspectRatio]=\\\"true\\\"\\r\\n            [aspectRatio]=\\\"3/ 3\\\"\\r\\n            [resizeToWidth]=\\\"128\\\"\\r\\n            [cropperMinWidth]=\\\"128\\\"\\r\\n            [onlyScaleDown]=\\\"true\\\"\\r\\n            [roundCropper]=\\\"true\\\"\\r\\n            format=\\\"png\\\"\\r\\n            outputType=\\\"base64\\\"\\r\\n            (imageCropped)=\\\"imageCropped($event)\\\"\\r\\n            (imageLoaded)=\\\"imageLoaded()\\\"\\r\\n            (cropperReady)=\\\"cropperReady()\\\"\\r\\n            (loadImageFailed)=\\\"loadImageFailed()\\\"\\r\\n            [style.display]=\\\"true\\\"\\r\\n        ></image-cropper>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div mat-dialog-actions class=\\\"m-0 p-16\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n\\r\\n        <button mat-raised-button\\r\\n                (click)=\\\"onCloseDialog()\\\"\\r\\n                class=\\\"save-button mat-accent\\\"\\r\\n                aria-label=\\\"SAVE\\\">\\r\\n            SAVE\\r\\n        </button>\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n.mat-form-field {\\n  padding-right: 10px; }\\n.contact-form-dialog {\\n  width: 400px; }\\n@media screen and (max-width: 599px) {\\n    .contact-form-dialog {\\n      width: 100%; } }\\n.contact-form-dialog .mat-dialog-container {\\n    padding: 0; }\\n.contact-form-dialog .mat-dialog-container .mat-toolbar {\\n      -webkit-box-flex: 1;\\n              flex: 1 0 auto;\\n      min-height: initial; }\\n.contact-form-dialog .mat-dialog-container .toolbar-bottom {\\n      height: auto; }\\n.contact-form-dialog .dialog-content-wrapper {\\n    max-height: 85vh;\\n    display: -webkit-box;\\n    display: flex;\\n    -webkit-box-orient: vertical;\\n    -webkit-box-direction: normal;\\n            flex-direction: column; }\\n\"","import { Component, Inject, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { ImageCroppedEvent } from 'ngx-image-cropper';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-img-cropper',\r\n  templateUrl: './img-cropper.component.html',\r\n  styleUrls: ['./img-cropper.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ImgCropperComponent implements OnInit {\r\n  \r\n  imageChangedEvent: any = '';\r\n  croppedImage: any;\r\n  constructor(public dialogRef: MatDialogRef<ImgCropperComponent>,\r\n    @Inject(MAT_DIALOG_DATA) private data: any) {\r\n      this.imageChangedEvent = data.action;\r\n     }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  imageCropped(event: ImageCroppedEvent) {\r\n      this.croppedImage = event.base64;\r\n  }\r\n \r\n  onCloseDialog(){\r\n    /* let crop = this.dataURItoBlob(this.croppedImage); */\r\n    this.dialogRef.close(this.croppedImage);\r\n  }\r\n\r\n  imageLoaded() {\r\n     console.log('Image loaded')\r\n  }\r\n  cropperReady() {\r\n    console.log('Cropper ready')\r\n  }\r\n  loadImageFailed () {\r\n    console.log('Load failed');\r\n  }\r\n\r\n  dataURItoBlob(dataURI) {\r\n    const binary = atob(dataURI.split(',')[1]);\r\n    const array = [];\r\n    for (let i = 0; i < binary.length; i++) {\r\n      array.push(binary.charCodeAt(i));\r\n    }\r\n    return new Blob([new Uint8Array(array)], {\r\n      type: 'image/png'\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"<div fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"p-24\\\">\\r\\n\\r\\n    <div class=\\\"close-button-wrapper\\\" fxFlex=\\\"0 1 auto\\\" fxFlex.gt-sm=\\\"220px\\\" (click)=\\\"deselectAll()\\\">\\r\\n        <button class=\\\"p-8\\\" mat-button fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n            <mat-icon class=\\\"mr-8\\\">arrow_back</mat-icon>\\r\\n            <span class=\\\"text-uppercase\\\">Back</span>\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <div fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" fxLayoutAlign.gt-sm=\\\"space-between center\\\">\\r\\n\\r\\n        <div>\\r\\n            <span class=\\\"selected-contacts-count\\\">\\r\\n                <span class=\\\"mr-4\\\">{{selectedContacts.length}}</span>\\r\\n                <span>selected</span>\\r\\n            </span>\\r\\n\\r\\n            <button mat-icon-button [matMenuTriggerFor]=\\\"selectMenu\\\">\\r\\n                <mat-icon>arrow_drop_down</mat-icon>\\r\\n            </button>\\r\\n            <mat-menu #selectMenu=\\\"matMenu\\\">\\r\\n                <button mat-menu-item (click)=\\\"selectAll()\\\">Select all</button>\\r\\n                <button mat-menu-item (click)=\\\"deselectAll()\\\">Deselect all</button>\\r\\n            </mat-menu>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"multi-select-actions\\\">\\r\\n            <button mat-icon-button (click)=\\\"deleteSelectedContacts()\\\" aria-label=\\\"delete selected\\\">\\r\\n                <mat-icon>delete</mat-icon>\\r\\n            </button>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n:host {\\n  -webkit-box-flex: 1;\\n          flex: 1;\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  left: 0;\\n  height: 120px;\\n  z-index: 99; }\\n\"","import { Component } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material';\r\n\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\n\r\nimport { ContactsService } from '../contacts.service';\r\n\r\n@Component({\r\n    selector   : 'fuse-selected-bar',\r\n    templateUrl: './selected-bar.component.html',\r\n    styleUrls  : ['./selected-bar.component.scss']\r\n})\r\nexport class FuseContactsSelectedBarComponent\r\n{\r\n    selectedContacts: string[];\r\n    hasSelectedContacts: boolean;\r\n    isIndeterminate: boolean;\r\n    confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n\r\n    constructor(\r\n        private contactsService: ContactsService,\r\n        public dialog: MatDialog\r\n    )\r\n    {\r\n        this.contactsService.onSelectedContactsChanged\r\n            .subscribe(selectedContacts => {\r\n                this.selectedContacts = selectedContacts;\r\n                setTimeout(() => {\r\n                    this.hasSelectedContacts = selectedContacts.length > 0;\r\n                    this.isIndeterminate = (selectedContacts.length !== this.contactsService.contacts.length && selectedContacts.length > 0);\r\n                }, 0);\r\n            });\r\n\r\n    }\r\n\r\n    selectAll()\r\n    {\r\n        this.contactsService.selectContacts();\r\n    }\r\n\r\n    deselectAll()\r\n    {\r\n        this.contactsService.deselectContacts();\r\n    }\r\n\r\n    deleteSelectedContacts()\r\n    {\r\n        this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n            disableClose: false\r\n        });\r\n\r\n        this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete all selected contacts?';\r\n\r\n        this.confirmDialogRef.afterClosed().subscribe(result => {\r\n            if ( result )\r\n            {\r\n                this.contactsService.deleteSelectedContacts();\r\n            }\r\n            this.confirmDialogRef = null;\r\n        });\r\n    }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"sidenav-content\\\">\\r\\n\\r\\n    <div class=\\\"card mat-white-bg\\\">\\r\\n        <!-- SIDENAV HEADER -->\\r\\n        <div class=\\\"header p-24\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n\\r\\n            <!-- USER -->\\r\\n            <img [src]=\\\"user.avatar\\\" class=\\\"avatar mr-16\\\" [alt]=\\\"user.name\\\"/>\\r\\n            <span class=\\\"h5\\\">{{user.name}}</span>\\r\\n            <!-- / USER -->\\r\\n\\r\\n        </div>\\r\\n        <!-- / SIDENAV HEADER -->\\r\\n\\r\\n        <!-- SIDENAV CONTENT -->\\r\\n        <div class=\\\"content py-16\\\" fusePerfectScrollbar>\\r\\n\\r\\n            <div class=\\\"nav\\\">\\r\\n\\r\\n                <div class=\\\"nav-item\\\" aria-label=\\\"inbox\\\">\\r\\n                    <a class=\\\"nav-link\\\" matRipple (click)=\\\"changeFilter('all')\\\" [ngClass]=\\\"{'active':filterBy ==='all'}\\\">\\r\\n                        <span class=\\\"title\\\">All Contacts</span>\\r\\n                    </a>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"nav-item\\\" aria-label=\\\"frequently contacted\\\" (click)=\\\"changeFilter('frequent')\\\">\\r\\n                    <a class=\\\"nav-link\\\" matRipple [ngClass]=\\\"{'active':filterBy ==='frequent'}\\\">\\r\\n                        <div class=\\\"title\\\">Freequently contacted</div>\\r\\n                    </a>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"nav-item\\\" aria-label=\\\"starred\\\" (click)=\\\"changeFilter('starred')\\\">\\r\\n                    <a class=\\\"nav-link\\\" matRipple [ngClass]=\\\"{'active':filterBy ==='starred'}\\\">\\r\\n                        <div class=\\\"title\\\">Starred Contacts</div>\\r\\n                    </a>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<!-- / SIDENAV CONTENT -->\\r\\n\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n:host {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  -webkit-box-flex: 1;\\n          flex: 1 0 auto;\\n  height: 100%; }\\n:host .sidenav-content {\\n    display: -webkit-box;\\n    display: flex;\\n    -webkit-box-orient: vertical;\\n    -webkit-box-direction: normal;\\n            flex-direction: column;\\n    padding: 0; }\\n@media screen and (min-width: 960px) {\\n      :host .sidenav-content {\\n        padding: 24px 4px 24px 24px; } }\\n:host .sidenav-content .card {\\n      display: -webkit-box;\\n      display: flex;\\n      -webkit-box-orient: vertical;\\n      -webkit-box-direction: normal;\\n              flex-direction: column;\\n      -webkit-box-flex: 0;\\n              flex: 0 1 auto;\\n      padding: 0; }\\n@media screen and (min-width: 960px) {\\n        :host .sidenav-content .card {\\n          box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); } }\\n:host .sidenav-content .card > .header {\\n        -webkit-box-flex: 0;\\n                flex: 0 1 auto;\\n        border-bottom: 1px solid rgba(0, 0, 0, 0.12); }\\n:host .sidenav-content .card > .content {\\n        -webkit-box-flex: 0;\\n                flex: 0 1 auto; }\\n\"","import { Component, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { ContactsService } from '../../contacts.service';\r\n\r\n@Component({\r\n    selector   : 'fuse-contacts-main-sidenav',\r\n    templateUrl: './main.component.html',\r\n    styleUrls  : ['./main.component.scss']\r\n})\r\nexport class FuseContactsMainSidenavComponent implements OnDestroy\r\n{\r\n    user: any;\r\n    filterBy: string;\r\n    \r\n    onUserDataChangedSubscription: Subscription;\r\n\r\n    constructor(private contactsService: ContactsService)\r\n    {\r\n        this.filterBy = this.contactsService.filterBy || 'all';\r\n        this.onUserDataChangedSubscription =\r\n            this.contactsService.onUserDataChanged.subscribe(user => {\r\n                this.user = user;\r\n            });\r\n    }\r\n\r\n    changeFilter(filter)\r\n    {\r\n        this.filterBy = filter;\r\n        this.contactsService.onFilterChanged.next(this.filterBy);\r\n    }\r\n\r\n    ngOnDestroy()\r\n    {\r\n        this.onUserDataChangedSubscription.unsubscribe();\r\n    }\r\n}\r\n"],"sourceRoot":""}