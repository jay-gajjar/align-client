{"version":3,"sources":["webpack:///./src/app/main/content/apps/performance/employee-performance/employee-performance.component.html","webpack:///./src/app/main/content/apps/performance/employee-performance/employee-performance.component.scss","webpack:///./src/app/main/content/apps/performance/employee-performance/employee-performance.component.ts","webpack:///./src/app/main/content/apps/performance/form-library/editpopup/editpopup.component.html","webpack:///./src/app/main/content/apps/performance/form-library/editpopup/editpopup.component.scss","webpack:///./src/app/main/content/apps/performance/form-library/editpopup/editpopup.component.ts","webpack:///./src/app/main/content/apps/performance/form-library/form-library.component.html","webpack:///./src/app/main/content/apps/performance/form-library/form-library.component.scss","webpack:///./src/app/main/content/apps/performance/form-library/form-library.component.ts","webpack:///./src/app/main/content/apps/performance/performance-evaluation/edit-evaluation/edit-evaluation.component.html","webpack:///./src/app/main/content/apps/performance/performance-evaluation/edit-evaluation/edit-evaluation.component.scss","webpack:///./src/app/main/content/apps/performance/performance-evaluation/edit-evaluation/edit-evaluation.component.ts","webpack:///./src/app/main/content/apps/performance/performance-evaluation/edit-evaluation/evaluation-pop/evaluation-pop.component.html","webpack:///./src/app/main/content/apps/performance/performance-evaluation/edit-evaluation/evaluation-pop/evaluation-pop.component.scss","webpack:///./src/app/main/content/apps/performance/performance-evaluation/edit-evaluation/evaluation-pop/evaluation-pop.component.ts","webpack:///./src/app/main/content/apps/performance/performance-evaluation/performance-evaluation.component.html","webpack:///./src/app/main/content/apps/performance/performance-evaluation/performance-evaluation.component.scss","webpack:///./src/app/main/content/apps/performance/performance-evaluation/performance-evaluation.component.ts","webpack:///./src/app/main/content/apps/performance/performance-management/performance-management.component.html","webpack:///./src/app/main/content/apps/performance/performance-management/performance-management.component.scss","webpack:///./src/app/main/content/apps/performance/performance-management/performance-management.component.ts","webpack:///./src/app/main/content/apps/performance/performance-setting/performance-setting.component.html","webpack:///./src/app/main/content/apps/performance/performance-setting/performance-setting.component.scss","webpack:///./src/app/main/content/apps/performance/performance-setting/performance-setting.component.ts","webpack:///./src/app/main/content/apps/performance/performance.component.html","webpack:///./src/app/main/content/apps/performance/performance.component.scss","webpack:///./src/app/main/content/apps/performance/performance.component.ts","webpack:///./src/app/main/content/apps/performance/performance.module.ts"],"names":[],"mappings":"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","file":"performance-performance-module.js","sourcesContent":["module.exports = \"<!-- HEADER -->\\r\\n<div class=\\\"header mat-accent-bg p-16 p-sm-24\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start start\\\" fxLayout.gt-xs=\\\"row\\\"\\r\\n  fxLayoutAlign.gt-xs=\\\"space-between center\\\">\\r\\n\\r\\n  <!-- APP TITLE -->\\r\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n    <div class=\\\"logo\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n      <!-- <mat-icon class=\\\"logo-icon mr-16\\\">settings</mat-icon> -->\\r\\n      <span class=\\\"logo-text h1\\\">Employee Performance</span>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"search\\\">\\r\\n    <mat-form-field appearance=\\\"legacy\\\">\\r\\n      <mat-label>Search here...</mat-label>\\r\\n      <input matInput [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"query\\\">\\r\\n      <mat-icon matPrefix>search</mat-icon>\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <!-- / APP TITLE -->\\r\\n</div>\\r\\n<!-- / HEADER -->\\r\\n\\r\\n<div class=\\\"performance m-16\\\">\\r\\n  <div class=\\\"free\\\">\\r\\n\\r\\n    <!-- ============================================================== -->\\r\\n    <!-- Card Grid-->\\r\\n    <!-- ============================================================== -->\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex.gt-sm=\\\"100\\\" fxFlex=\\\"100\\\">\\r\\n        <table mat-table [dataSource]=\\\"dataSource1 | searchFilter: 'employee-performance' : query\\\" class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n          <!--- Note that these columns can be defined in any order.\\r\\n            The actual rendered columns are set as a property on the row definition\\\" -->\\r\\n\\r\\n          <!-- Position Column -->\\r\\n          <!-- <ng-container matColumnDef=\\\"position\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> No. </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.position}} </td>\\r\\n      </ng-container> -->\\r\\n\\r\\n          <!-- Name Column -->\\r\\n          <ng-container matColumnDef=\\\"name\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Name </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n              <img class=\\\"img_s\\\" src=\\\"assets/images/profile.png\\\"> {{element.first_name}} {{element.last_name}}\\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <!-- Weight Column -->\\r\\n          <ng-container matColumnDef=\\\"email\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Email </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.email}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <!-- Symbol Column -->\\r\\n          <ng-container matColumnDef=\\\"job_role\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef fxHide fxShow.gt-sm> Job Role </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\" fxHide fxShow.gt-sm> {{element.job_role}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <!-- Symbol Column -->\\r\\n          <ng-container matColumnDef=\\\"department\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef fxHide fxShow.gt-sm> Department </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\" fxHide fxShow.gt-sm> {{element.department}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <!-- Buttons Column -->\\r\\n          <ng-container matColumnDef=\\\"buttons\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef>Actions</th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n              <button class=\\\"new_btn mr-lef\\\" (click)=\\\"redirect(element.id)\\\">\\r\\n                <mat-icon>visibility</mat-icon>\\r\\n              </button>\\r\\n            </td>\\r\\n          </ng-container>\\r\\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns1\\\"></tr>\\r\\n          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns1;\\\"></tr>\\r\\n        </table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n@media screen and (max-width: 599px) {\\n  :host .header {\\n    padding: 16px; } }\\n:host .header .search {\\n  position: relative;\\n  max-width: 780px; }\\n:host .header .search .search-icon {\\n    margin: 0 -24px 0 0; }\\n:host .header .search .search-input {\\n    padding: 0 0 0 48px;\\n    background: none;\\n    font-size: 24px;\\n    line-height: 48px;\\n    height: 48px;\\n    color: #FFFFFF;\\n    border-bottom: 2px solid rgba(255, 255, 255, 0.3);\\n    -webkit-transition: border-color 300ms ease;\\n    transition: border-color 300ms ease; }\\n:host .header .search .search-input:focus {\\n      border-color: white; }\\n:host .header .search .search-input::-webkit-input-placeholder {\\n      color: #FFFFFF; }\\n:host .content .result-info {\\n  padding-bottom: 16px;\\n  border-bottom: 1px solid rgba(0, 0, 0, 0.12); }\\n:host .content .result-info .mat-title {\\n    padding-right: 8px; }\\n@media screen and (max-width: 599px) {\\n    :host .content .result-info .pager {\\n      margin-top: 16px; } }\\n:host .content .result-info .pager .page-info {\\n    font-weight: 500;\\n    margin: 0 8px 0 0; }\\n:host .content .simple-pagination {\\n  margin: 32px 0; }\\ntable.mat-elevation-z8 {\\n  width: 95%;\\n  margin: 10px 2%; }\\n.page-layout.blank {\\n  min-height: 50%; }\\n.new_btn {\\n  height: 24px;\\n  width: 24px;\\n  background-color: #f49f14;\\n  border-radius: 50px;\\n  padding-top: 4px;\\n  cursor: pointer; }\\n.mr-lef {\\n  margin-right: 10px; }\\n.new_btn .mat-icon {\\n  height: 20px;\\n  width: 20px;\\n  font-size: 17px; }\\n.img_s {\\n  height: 25px;\\n  width: 25px;\\n  background-color: #f49f14;\\n  border-radius: 50px;\\n  margin-right: 6px; }\\n.search {\\n  position: relative;\\n  top: 20px; }\\n.search ::ng-deep .mat-form-field-flex {\\n    -webkit-box-align: center;\\n            align-items: center; }\\n.search ::ng-deep .mat-form-field-flex .mat-form-field-infix {\\n      border-top: 0; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ApiLoaderService } from '@fuse/services/api-loader.service';\r\nimport { ApiService } from '@fuse/services/api.service';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n\r\nexport interface PeriodicElement {\r\n  name: string;\r\n  email: string;\r\n  job_role: string;\r\n  department: string;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  {name: 'John D', email: 'demo@gmail.com', job_role: 'Team Leader',department:'Sales Manager'},\r\n  {name: 'John D', email: 'demo@gmail.com', job_role: 'Team Leader',department:'Research Manager'},\r\n  {name: 'John D', email: 'demo@gmail.com', job_role: 'Team Leader',department:'Research Manager'},\r\n  {name: 'Beryllium', email: 'demo@gmail.com', job_role: 'Team Leader',department:'Research Manager'},\r\n  {name: 'Boron', email: 'demo@gmail.com', job_role: 'Team Leader',department:'Research Manager'},\r\n  {name: 'Carbon', email: 'demo@gmail.com', job_role: 'Team Leader',department:'Research Manager'},\r\n  {name: 'Nitrogen', email: 'demo@gmail.com', job_role: 'Team Leader',department:'Research Manager'},\r\n  {name: 'Oxygen', email: 'demo@gmail.com', job_role: 'Team Leader',department:'Research Manager'},\r\n  {name: 'Fluorine', email: 'demo@gmail.com', job_role: 'Team Leader',department:'Research Manager'},\r\n  {name: 'Neon', email: 'demo@gmail.com', job_role: 'Team Leader',department:'Research Manager'},\r\n];\r\n\r\n@Component({\r\n  selector: 'app-employee-performance',\r\n  templateUrl: './employee-performance.component.html',\r\n  styleUrls: ['./employee-performance.component.scss']\r\n})\r\nexport class EmployeePerformanceComponent implements OnInit {\r\n  query: string;\r\n  displayedColumns1: string[] = ['name', 'email', 'job_role','department','buttons'];\r\n  dataSource1;\r\n\r\n  constructor(private router: Router, private apiService: ApiService, private apiloader: ApiLoaderService) { }\r\n\r\n  ngOnInit() {\r\n    this.getAllUsers();\r\n  }\r\n\r\n  redirect(id) {\r\n    this.router.navigate(['/apps/user-contacts/edit-employee', id]);\r\n  }\r\n\r\n  getAllUsers(){\r\n    this.apiloader.setLoader(true);\r\n    const id = sessionStorage.getItem('client_id');        \r\n        this.apiService.getData('users', { 'client_id': id } ).subscribe(response => {\r\n            if (response.data){                \r\n                this.apiloader.setLoader(false);\r\n                let data = response.data;\r\n                let users = [];\r\n                for (let i = 0; i < data.length; i++){\r\n                    data[i].job_role = 'Manager';\r\n                  //  data[i].department = 'Sales Manager';\r\n                    if (data[i].role !== 'CLIENT_ADMIN'){\r\n                        users.push(data[i]);\r\n                    }\r\n                }\r\n                this.dataSource1 = users;\r\n            }\r\n        }, error => {\r\n          this.apiloader.setLoader(false);\r\n        });\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"content mat-white-bg mat-elevation-z4\\\">\\r\\n    <div class=\\\"dialog-content-wrapper\\\">\\r\\n        <mat-toolbar matDialogTitle class=\\\"mat-accent m-0\\\">\\r\\n            <mat-toolbar-row fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n                <span class=\\\"title dialog-title\\\">{{dialogTitle}}</span>\\r\\n                <button mat-icon-button (click)=\\\"dialogRef.close()\\\" aria-label=\\\"Close dialog\\\">\\r\\n                    <mat-icon>close</mat-icon>\\r\\n                </button>\\r\\n            </mat-toolbar-row>\\r\\n        </mat-toolbar>\\r\\n    \\r\\n        <div mat-dialog-content class=\\\"p-16 m-0\\\" fusePerfectScrollbar>\\r\\n            <form [formGroup]=\\\"myForm\\\">\\r\\n\\r\\n                <ng-container *ngIf=\\\"data.modalType == 'goal' || data.modalType == 'cvalue'\\\">\\r\\n                    <div fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\" fxLayout=\\\"column\\\" *ngIf=\\\"data.modalType == 'goal'\\\">\\r\\n                        <mat-label class=\\\"label\\\">Category</mat-label>\\r\\n                        <mat-form-field appearance=\\\"outline\\\" fxFlex>\\r\\n                            <input formControlName=\\\"category\\\" matInput placeholder=\\\"Category\\\">\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\" fxLayout=\\\"column\\\">\\r\\n                        <mat-label class=\\\"label\\\">Name</mat-label>\\r\\n                        <mat-form-field appearance=\\\"outline\\\" fxFlex>\\r\\n                            <input formControlName=\\\"name\\\" matInput placeholder=\\\"Name\\\">\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\" fxLayout=\\\"column\\\">\\r\\n                        <mat-label class=\\\"label\\\">Description</mat-label>\\r\\n                        <mat-form-field appearance=\\\"outline\\\" fxFlex>\\r\\n                            <textarea  formControlName=\\\"description\\\" matInput placeholder=\\\"Description\\\" matAutosizeMinRows=5 matAutosizeMaxRows=10></textarea>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\" fxLayout=\\\"column\\\">\\r\\n                        <mat-label class=\\\"label\\\">Measurement</mat-label>\\r\\n                        <mat-form-field appearance=\\\"outline\\\" fxFlex>\\r\\n                            <mat-select formControlName=\\\"measurement\\\"  placeholder=\\\"Measurement\\\" required>\\r\\n                                <mat-option value=\\\"$\\\">$</mat-option>\\r\\n                                <mat-option value=\\\"%\\\">%</mat-option>\\r\\n                                <mat-option value=\\\"number\\\">Number</mat-option>\\r\\n                            </mat-select>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\" fxLayout=\\\"column\\\">\\r\\n                        <mat-label class=\\\"label\\\">Weightage</mat-label>\\r\\n                        <mat-form-field appearance=\\\"outline\\\" fxFlex>\\r\\n                            <input type=\\\"text\\\" formControlName=\\\"weightage\\\" matInput placeholder=\\\"Weightage\\\">\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container *ngIf=\\\"data.modalType == 'tskill' || data.modalType == 'gskill'\\\">\\r\\n                    <div fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\" fxLayout=\\\"column\\\">\\r\\n                        <mat-label class=\\\"label\\\">Name</mat-label>\\r\\n                        <mat-form-field appearance=\\\"outline\\\" fxFlex>\\r\\n                            <input formControlName=\\\"name\\\" matInput placeholder=\\\"Name\\\">\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\" fxLayout=\\\"column\\\">\\r\\n                        <mat-label class=\\\"label\\\">Description</mat-label>\\r\\n                        <mat-form-field appearance=\\\"outline\\\" fxFlex>\\r\\n                            <textarea  formControlName=\\\"description\\\" matInput placeholder=\\\"Description\\\" matAutosizeMinRows=5 matAutosizeMaxRows=10></textarea>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\" fxLayout=\\\"column\\\">\\r\\n                        <mat-label class=\\\"label\\\">Type</mat-label>                        \\r\\n                        <mat-form-field appearance=\\\"outline\\\" fxFlex>\\r\\n                            <input formControlName=\\\"type\\\" matInput placeholder=\\\"Type\\\" readonly>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\" fxLayout=\\\"column\\\">\\r\\n                        <mat-label class=\\\"label\\\">Expected Proficiency Level</mat-label>\\r\\n                        <mat-form-field appearance=\\\"outline\\\" fxFlex>\\r\\n                            <input formControlName=\\\"expected_proficiency_level\\\" matInput placeholder=\\\"Expected Proficiency Level\\\">\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\" fxLayout=\\\"column\\\">\\r\\n                        <mat-label class=\\\"label\\\">Weightage</mat-label>\\r\\n                        <mat-form-field appearance=\\\"outline\\\" fxFlex>\\r\\n                            <input type=\\\"text\\\" formControlName=\\\"weightage\\\" matInput placeholder=\\\"Weightage\\\">\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n\\r\\n            </form>    \\r\\n        </div>\\r\\n    \\r\\n        <div mat-dialog-actions class=\\\"m-0 p-16\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n            <button \\r\\n                  mat-raised-button\\r\\n                  [disabled]=\\\"myForm.invalid\\\"\\r\\n                  (click)=\\\"response(myForm.value)\\\"\\r\\n                  class=\\\"save-button mat-accent\\\"\\r\\n                  aria-label=\\\"SAVE\\\">\\r\\n              Submit\\r\\n          </button>    \\r\\n        </div>\\r\\n    </div>\\r\\n    </div>\"","module.exports = \".label {\\n  font-weight: 500px; }\\n\"","import { Component, OnInit,Inject, ViewEncapsulation } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-editpopup',\r\n  templateUrl: './editpopup.component.html',\r\n  styleUrls: ['./editpopup.component.scss']\r\n})\r\nexport class EditpopupComponent implements OnInit {\r\n  dialogTitle: string;\r\n  myForm: FormGroup;\r\n  editcontForm: FormGroup;\r\n  editworkForm: FormGroup;\r\n  action: string;\r\n  id: string;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<EditpopupComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private formBuilder: FormBuilder\r\n  ) {\r\n    if(data.modalType == \"goal\") {\r\n      this.dialogTitle = \"Goals\";\r\n      this.myForm = this.goalForm();\r\n      if (data.details) {\r\n        let formData = data.details;\r\n        this.id = formData.id;\r\n        this.myForm.patchValue({ category: formData.category, name: formData.name, description: formData.description,\r\n           measurement: formData.measurement, weightage: formData.weightage });\r\n      }\r\n    } else if(data.modalType == \"cvalue\") {\r\n      this.dialogTitle = \"Corporate Value\";\r\n      this.myForm = this.corValForm();\r\n      if (data.details) {\r\n        let formData = data.details;\r\n        this.id = formData.id;\r\n        this.myForm.patchValue({ name: formData.name, description: formData.description,\r\n           measurement: formData.measurement, weightage: formData.weightage });\r\n      }\r\n    } else if(data.modalType == \"tskill\") {\r\n      this.dialogTitle = \"Technical Skill\";\r\n      this.myForm = this.skillsForm();\r\n      this.myForm.patchValue({type: 'technical'});\r\n      if (data.details) {\r\n        let formData = data.details;\r\n        this.id = formData.id;\r\n        this.myForm.patchValue({ name: formData.name, description: formData.description,\r\n          expected_proficiency_level: formData.expected_proficiency_level });\r\n      }\r\n    } else {\r\n      this.dialogTitle = \"Generic Skill\";\r\n      this.myForm = this.skillsForm();\r\n      this.myForm.patchValue({type: 'generic'});\r\n      if (data.details) {\r\n        let formData = data.details;\r\n        this.id = formData.id;\r\n        this.myForm.patchValue({ name: formData.name, description: formData.description,\r\n          expected_proficiency_level: formData.expected_proficiency_level });\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n    goalForm() {\r\n      return this.formBuilder.group({\r\n        category        : ['', Validators.required],\r\n        name        : ['', Validators.required],\r\n        description : ['', Validators.required],\r\n        measurement : ['', Validators.required],\r\n        weightage   : ['', Validators.required]\r\n      });\r\n    }\r\n\r\n    corValForm() {\r\n      return this.formBuilder.group({\r\n        name        : ['', Validators.required],\r\n        description : ['', Validators.required],\r\n        measurement : ['', Validators.required],\r\n        weightage   : ['', Validators.required]\r\n      });\r\n    }\r\n\r\n    skillsForm() {\r\n      return this.formBuilder.group({\r\n        name        : ['', Validators.required],\r\n        description : ['', Validators.required],\r\n        type        : [''],\r\n        weightage   : ['', Validators.required],\r\n        expected_proficiency_level : ['', Validators.required],\r\n      });\r\n    }\r\n\r\n    response(data){\r\n      if (this.id) {\r\n        data.id = this.id;\r\n      }\r\n      this.dialogRef.close(data);\r\n    }\r\n\r\n}\r\n","module.exports = \" <!-- HEADER -->\\r\\n <div class=\\\"header mat-accent-bg p-16 p-sm-24\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start start\\\"\\r\\n fxLayout.gt-xs=\\\"row\\\" fxLayoutAlign.gt-xs=\\\"space-between center\\\">\\r\\n \\r\\n <!-- APP TITLE -->\\r\\n <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n   <div class=\\\"logo\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n        <!-- <mat-icon class=\\\"logo-icon mr-16\\\">settings</mat-icon> -->\\r\\n        <span class=\\\"logo-text h1\\\">Performance Form Library</span>\\r\\n    </div>\\r\\n \\r\\n </div>\\r\\n <!-- / APP TITLE -->\\r\\n </div>\\r\\n <!-- / HEADER -->\\r\\n\\r\\n <div class=\\\"performance m-16\\\">\\r\\n   <div class=\\\"free\\\">\\r\\n       \\r\\n          <!-- ============================================================== -->\\r\\n<!-- Card Grid-->\\r\\n<!-- ============================================================== -->\\r\\n<div fxLayout=\\\"row wrap\\\">\\r\\n   <div fxFlex.gt-sm=\\\"100\\\" fxFlex=\\\"100\\\">\\r\\n     <!-- <mat-card> -->\\r\\n       \\r\\n<mat-accordion class=\\\"example-headers-align\\\">\\r\\n       \\r\\n      <mat-expansion-panel [expanded]=\\\"step === 2\\\" (opened)=\\\"setStep(2)\\\" hideToggle>\\r\\n         <mat-expansion-panel-header>\\r\\n           <mat-panel-title class=\\\"ch_color\\\">Performance Evaluation Form</mat-panel-title>\\r\\n           <mat-panel-description>\\r\\n             <mat-icon class=\\\"change_c\\\">arrow_drop_down</mat-icon>\\r\\n           </mat-panel-description>\\r\\n         </mat-expansion-panel-header>\\r\\n               \\r\\n         <form [formGroup]=\\\"firstFormGroup\\\">\\r\\n            <div fxLayout=\\\"row wrap\\\">\\r\\n                  <div fxFlex.gt-md=\\\"50\\\" fxFlex=\\\"100\\\" class=\\\"mr_tp change_height\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                        <mat-label>Performance Evaluation Form</mat-label>\\r\\n                      <input matInput formControlName=\\\"name\\\" placeholder=\\\"( For i.e. Annual Review 2019 )\\\">\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                  <div fxFlex.gt-md=\\\"23\\\" fxFlex=\\\"100\\\" class=\\\"mr_tp change_height\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                      <mat-label>Industry</mat-label>\\r\\n                      <mat-select placeholder=\\\"Department\\\" formControlName=\\\"industry_id\\\">\\r\\n                          <mat-option *ngFor=\\\"let opt of industries\\\" [value]=\\\"opt.id\\\">{{opt.name}}</mat-option>\\r\\n                      </mat-select>\\r\\n                  </mat-form-field>\\r\\n                  </div>\\r\\n                  <div fxFlex.gt-md=\\\"23\\\" fxFlex=\\\"100\\\" class=\\\"mr_last change_height\\\">\\r\\n                      <mat-form-field appearance=\\\"outline\\\">\\r\\n                          <mat-label>Job Role</mat-label>\\r\\n                          <mat-select placeholder=\\\"Job Role\\\" formControlName=\\\"job_role_id\\\">\\r\\n                              <mat-option *ngFor=\\\"let opt of jobRoles\\\" [value]=\\\"opt.id\\\">{{opt.name}}</mat-option>\\r\\n                            </mat-select>\\r\\n                      </mat-form-field>\\r\\n                  </div>\\r\\n                  \\r\\n               <!-- Start Goals Section -->   \\r\\n               <div fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\" class=\\\"sect_ion\\\"> \\r\\n                  <div fxLayout=\\\"row wrap\\\"> \\r\\n                  <div fxFlex.gt-md=\\\"70\\\" fxFlex=\\\"100\\\">\\r\\n                      <mat-label class=\\\"lbl_cs\\\"><b>Section A : Goals</b></mat-label>\\r\\n                  </div>\\r\\n\\r\\n                  <div fxFlex.gt-md=\\\"30\\\" fxFlex=\\\"100\\\">\\r\\n                      <mat-label class=\\\"lbl_cs\\\">Total Section A Weightage : </mat-label>\\r\\n                      <input class=\\\"inp_change\\\" matInput [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"goal_weightage\\\"\\r\\n                       value=\\\"\\\"> %\\r\\n                  </div>\\r\\n                </div> </div> \\r\\n                  <div fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\" class=\\\"set_height\\\">\\r\\n                      <table mat-table [dataSource]=\\\"goalDataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n                          <!-- goals Column -->\\r\\n                          <ng-container matColumnDef=\\\"category\\\">\\r\\n                              <th mat-header-cell *matHeaderCellDef> Category </th>\\r\\n                              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.category}} </td>\\r\\n                          </ng-container>\\r\\n                        \\r\\n                          <!-- goals Column -->\\r\\n                          <ng-container matColumnDef=\\\"name\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef> Goal Name </th>\\r\\n                            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\r\\n                          </ng-container>\\r\\n                        \\r\\n                          <!-- goals_description Column -->\\r\\n                          <ng-container matColumnDef=\\\"description\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef fxHide fxShow.gt-sm> Goals Description </th>\\r\\n                            <td mat-cell *matCellDef=\\\"let element\\\" fxHide fxShow.gt-sm> {{element.description}} </td>\\r\\n                          </ng-container>\\r\\n                    \\r\\n                          <!-- mearsu_weight Column -->\\r\\n                          <ng-container matColumnDef=\\\"mearsu_weight\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef fxHide fxShow.gt-sm> Measurement/Weightage </th>\\r\\n                            <td mat-cell *matCellDef=\\\"let element\\\" fxHide fxShow.gt-sm> {{element.measurement}}/{{element.weightage}} </td>\\r\\n                          </ng-container>\\r\\n                    \\r\\n                    \\r\\n                          <!-- Buttons Column -->\\r\\n                          <ng-container matColumnDef=\\\"buttons\\\">\\r\\n                              <th mat-header-cell *matHeaderCellDef>Actions</th>\\r\\n                              <td mat-cell *matCellDef=\\\"let element\\\"> \\r\\n                                 \\r\\n                               <button class=\\\"new_btn mr-lef\\\" (click)=\\\"editpopup('goal', element, 'goals')\\\"><mat-icon>visibility</mat-icon></button>\\r\\n                               <button class=\\\"new_btn\\\" (click)=\\\"deleteItem('goal', element.id, 'goals')\\\"><mat-icon>delete</mat-icon></button>\\r\\n                               \\r\\n                               \\r\\n                                \\r\\n                              </td>\\r\\n                            </ng-container>\\r\\n                    \\r\\n                    \\r\\n                         \\r\\n                        \\r\\n                          <tr mat-header-row *matHeaderRowDef=\\\"goalColumns\\\"></tr>\\r\\n                          <tr mat-row *matRowDef=\\\"let row; columns: goalColumns;\\\"></tr>\\r\\n                        </table>\\r\\n                  </div>\\r\\n\\r\\n                  <div fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\">\\r\\n                      <button mat-raised-button [matMenuTriggerFor]=\\\"goalMenu\\\" color=\\\"primary\\\" class=\\\"btn_new\\\">+   Select from Library Goals</button>\\r\\n                      <mat-menu #goalMenu=\\\"matMenu\\\" class=\\\"mm_menu\\\" xPosition=\\\"after\\\" [overlapTrigger]=\\\"false\\\">\\r\\n                        <h4 class=\\\"bg_cc\\\" mat-menu-item>Library Of Goals</h4>\\r\\n                        <div class=\\\"search\\\" (keydown.tab)=\\\"$event.stopPropagation()\\\" (click)=\\\"$event.stopPropagation(); false;\\\">\\r\\n                            <input class=\\\"search-txt\\\" (click)=\\\"$event.stopPropagation(); false;\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"query\\\" placeholder=\\\"Type here....\\\">\\r\\n                            <button class=\\\"btn-srch\\\"><mat-icon>search</mat-icon></button>\\r\\n                        </div>\\r\\n                        <div class=\\\"search-content\\\" (keydown.tab)=\\\"$event.stopPropagation()\\\">\\r\\n                            <form [formGroup]=\\\"goalListForm\\\">\\r\\n                              <div *ngFor=\\\"let data of goals | searchFilter: 'form-library' : query\\\">\\r\\n                                <mat-checkbox [checked]=\\\"goalListForm.value.goalsArray.indexOf(data.id) != -1\\\" (change)=\\\"onChange('goal', data.id, $event.checked)\\\">{{data.name}}</mat-checkbox>\\r\\n                              </div>\\r\\n                            </form>\\r\\n                        </div>\\r\\n                      </mat-menu>\\r\\n                      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"openModal('goal', 'goals')\\\" class=\\\"btn_new\\\">+   Create New Goal (Free Text)</button>\\r\\n                  </div>\\r\\n\\r\\n\\r\\n                   <!-- Start Generic Skills Section -->  \\r\\n                   <div fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\" class=\\\"sect_ion\\\"> \\r\\n                      <div fxLayout=\\\"row wrap\\\"> \\r\\n                        <div fxFlex.gt-md=\\\"70\\\" fxFlex=\\\"100\\\">\\r\\n                            <mat-label class=\\\"lbl_cs\\\"><b>Section B : Generic Skills</b></mat-label>\\r\\n                        </div>\\r\\n                       <div fxFlex.gt-md=\\\"30\\\" fxFlex=\\\"100\\\">\\r\\n                          <mat-label class=\\\"lbl_cs\\\">Total Section A Weightage : </mat-label>\\r\\n                          <input class=\\\"inp_change\\\" matInput [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"generic_weightage\\\"\\r\\n                            value=\\\"\\\"> %\\r\\n                      </div>\\r\\n                  </div>\\r\\n                </div> \\r\\n\\r\\n                  <div fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\" class=\\\"set_height\\\">\\r\\n                      <table mat-table [dataSource]=\\\"genericDataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n                         <!-- title Column -->\\r\\n                          <ng-container matColumnDef=\\\"name\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef> Title </th>\\r\\n                            <td mat-cell *matCellDef=\\\"let element\\\">{{element.name}}</td>\\r\\n                          </ng-container>\\r\\n                        \\r\\n                          \\r\\n                        \\r\\n                          <!-- skills_description Column -->\\r\\n                          <ng-container matColumnDef=\\\"description\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef> Description Of Skills </th>\\r\\n                            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.description}} </td>\\r\\n                          </ng-container>\\r\\n                    \\r\\n                          <!-- level Column -->\\r\\n                          <ng-container matColumnDef=\\\"level\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef fxHide fxShow.gt-sm> Expected Proficiency Level </th>\\r\\n                            <td mat-cell *matCellDef=\\\"let element\\\" fxHide fxShow.gt-sm> {{element.expected_proficiency_level}} </td>\\r\\n                          </ng-container>\\r\\n                    \\r\\n                    \\r\\n                          <!-- Buttons Column -->\\r\\n                          <ng-container matColumnDef=\\\"buttons\\\">\\r\\n                              <th mat-header-cell *matHeaderCellDef>Actions</th>\\r\\n                              <td mat-cell *matCellDef=\\\"let element\\\"> \\r\\n                                 \\r\\n                               <button class=\\\"new_btn mr-lef\\\" (click)=\\\"editpopup('gskill', element, 'skills')\\\"><mat-icon>visibility</mat-icon></button>\\r\\n                               <button class=\\\"new_btn\\\" (click)=\\\"deleteItem('gskill', element.id, 'skills')\\\"><mat-icon>delete</mat-icon></button>\\r\\n                               \\r\\n                               \\r\\n                                \\r\\n                              </td>\\r\\n                            </ng-container>\\r\\n                    \\r\\n                    \\r\\n                         \\r\\n                        \\r\\n                          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns3\\\"></tr>\\r\\n                          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns3;\\\"></tr>\\r\\n                        </table>\\r\\n                  </div>\\r\\n\\r\\n\\r\\n                  <div fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\">\\r\\n                      <button mat-raised-button [matMenuTriggerFor]=\\\"genericMenu\\\" color=\\\"primary\\\" class=\\\"btn_new\\\">+   Select from Library Of Generic Skill</button>\\r\\n                      <mat-menu #genericMenu=\\\"matMenu\\\" class=\\\"mm_menu\\\" xPosition=\\\"after\\\" [overlapTrigger]=\\\"false\\\">\\r\\n                          <h4 class=\\\"bg_cc\\\" mat-menu-item>Library Of Generic Skills</h4>\\r\\n                          <div class=\\\"search\\\" (keydown.tab)=\\\"$event.stopPropagation()\\\" (click)=\\\"$event.stopPropagation(); false;\\\">\\r\\n                              <input class=\\\"search-txt\\\" (click)=\\\"$event.stopPropagation(); false;\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"query\\\" placeholder=\\\"Type here....\\\">\\r\\n                              <button class=\\\"btn-srch\\\"><mat-icon>search</mat-icon></button>\\r\\n                          </div>\\r\\n                          <div class=\\\"search-content\\\">\\r\\n                            <form [formGroup]=\\\"genericListForm\\\">\\r\\n                              <div *ngFor=\\\"let data of genericList | searchFilter: 'form-library' : query\\\">\\r\\n                                <mat-checkbox [checked]=\\\"genericListForm.value.genericsArray.indexOf(data.id) != -1\\\" (change)=\\\"onChange('generic', data.id, $event.checked)\\\">{{data.name}}</mat-checkbox>\\r\\n                              </div>\\r\\n                            </form>                        \\r\\n                          </div>\\r\\n                        </mat-menu>\\r\\n                      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"openModal('gskill', 'skills')\\\" class=\\\"btn_new\\\">+   Create New Generic Skill (Free Text)</button>\\r\\n                  </div>\\r\\n\\r\\n\\r\\n                   <!-- Start Technical Skill Section --> \\r\\n                   <div fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\" class=\\\"sect_ion\\\"> \\r\\n                      <div fxLayout=\\\"row wrap\\\">       \\r\\n                          <div fxFlex.gt-md=\\\"70\\\" fxFlex=\\\"100\\\">\\r\\n                              <mat-label class=\\\"lbl_cs\\\"><b>Section C : Technical Skills</b></mat-label>\\r\\n                          </div>\\r\\n\\r\\n                          <div fxFlex.gt-md=\\\"30\\\" fxFlex=\\\"100\\\">\\r\\n                              <mat-label class=\\\"lbl_cs\\\">Total Section A Weightage : </mat-label>\\r\\n                              <input class=\\\"inp_change\\\" matInput [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"technical_weightage\\\"\\r\\n                                value=\\\"\\\"> %\\r\\n                          </div>\\r\\n                      </div>\\r\\n                    </div>  \\r\\n\\r\\n                  <div fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\" class=\\\"set_height\\\">\\r\\n                      <table mat-table [dataSource]=\\\"techDataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n                         <!-- title Column -->\\r\\n                          <ng-container matColumnDef=\\\"name\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef> Title </th>\\r\\n                            <td mat-cell *matCellDef=\\\"let element\\\">{{element.name}}</td>\\r\\n                          </ng-container>\\r\\n                        \\r\\n                          \\r\\n                        \\r\\n                          <!-- skills_description Column -->\\r\\n                          <ng-container matColumnDef=\\\"description\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef> Description Of Skills </th>\\r\\n                            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.description}} </td>\\r\\n                          </ng-container>\\r\\n                    \\r\\n                          <!-- level Column -->\\r\\n                          <ng-container matColumnDef=\\\"level\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef fxHide fxShow.gt-sm> Expected Proficiency Level </th>\\r\\n                            <td mat-cell *matCellDef=\\\"let element\\\" fxHide fxShow.gt-sm> {{element.expected_proficiency_level}} </td>\\r\\n                          </ng-container>\\r\\n                    \\r\\n                    \\r\\n                          <!-- Buttons Column -->\\r\\n                          <ng-container matColumnDef=\\\"buttons\\\">\\r\\n                              <th mat-header-cell *matHeaderCellDef>Actions</th>\\r\\n                              <td mat-cell *matCellDef=\\\"let element\\\"> \\r\\n                                 \\r\\n                               <button class=\\\"new_btn mr-lef\\\" (click)=\\\"editpopup('tskill', element, 'skills')\\\"><mat-icon>visibility</mat-icon></button>\\r\\n                               <button class=\\\"new_btn\\\" (click)=\\\"deleteItem('tskill', element.id, 'skills')\\\"><mat-icon>delete</mat-icon></button>\\r\\n                               \\r\\n                               \\r\\n                                \\r\\n                              </td>\\r\\n                            </ng-container>\\r\\n                    \\r\\n                    \\r\\n                         \\r\\n                        \\r\\n                          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns3\\\"></tr>\\r\\n                          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns3;\\\"></tr>\\r\\n                        </table>\\r\\n                  </div>\\r\\n\\r\\n                  <div fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\">\\r\\n                      <button mat-raised-button [matMenuTriggerFor]=\\\"menu\\\" color=\\\"primary\\\" class=\\\"btn_new \\\">+   Select from Library Technical Skill</button>\\r\\n                      <mat-menu #menu=\\\"matMenu\\\" class=\\\"mm_menu\\\" xPosition=\\\"after\\\" [overlapTrigger]=\\\"false\\\">\\r\\n                        <h4 class=\\\"bg_cc\\\" mat-menu-item>Library Of Technical Skills</h4>\\r\\n                        <div class=\\\"search\\\" (keydown.tab)=\\\"$event.stopPropagation()\\\" (click)=\\\"$event.stopPropagation(); false;\\\">\\r\\n                            <input class=\\\"search-txt\\\" (click)=\\\"$event.stopPropagation(); false;\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"query\\\" placeholder=\\\"Type here....\\\">\\r\\n                            <button class=\\\"btn-srch\\\"><mat-icon>search</mat-icon></button>\\r\\n                        </div>\\r\\n                        <div class=\\\"search-content\\\">\\r\\n                          <form [formGroup]=\\\"techListForm\\\">\\r\\n                            <div *ngFor=\\\"let data of techList | searchFilter: 'form-library' : query\\\">\\r\\n                              <mat-checkbox [checked]=\\\"techListForm.value.techArray.indexOf(data.id) != -1\\\" (change)=\\\"onChange('tech', data.id, $event.checked)\\\">{{data.name}}</mat-checkbox>\\r\\n                            </div>\\r\\n                          </form>                      \\r\\n                        </div>\\r\\n                      </mat-menu>\\r\\n                      <!-- <button mat-raised-button color=\\\"primary\\\" class=\\\"btn_new\\\">+   Select from Library Technical Skill</button> -->\\r\\n                      <button mat-raised-button color=\\\"primary\\\"  (click)=\\\"openModal('tskill', 'skills')\\\" class=\\\"btn_new\\\">+   Create New Technical Skill (Free Text)</button>\\r\\n                  </div>\\r\\n\\r\\n\\r\\n\\r\\n                   <!-- Start Corporate Values Section -->\\r\\n                   <div fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\" class=\\\"sect_ion\\\"> \\r\\n                      <div fxLayout=\\\"row wrap\\\"> \\r\\n                        <div fxFlex.gt-md=\\\"70\\\" fxFlex=\\\"100\\\">\\r\\n                            <mat-label class=\\\"lbl_cs\\\"><b>Section D : Corporate Values</b></mat-label>\\r\\n                        </div>\\r\\n                        <div fxFlex.gt-md=\\\"30\\\" fxFlex=\\\"100\\\">\\r\\n                            <mat-label class=\\\"lbl_cs\\\">Total Section D Weightage : </mat-label>\\r\\n                            <input class=\\\"inp_change\\\" matInput [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"corporate_weightage\\\"\\r\\n                                value=\\\"\\\"> %\\r\\n                        </div>\\r\\n                      </div>\\r\\n                   </div>\\r\\n\\r\\n                  <div fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\" class=\\\"set_height\\\">\\r\\n                      <table mat-table [dataSource]=\\\"corValDataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n                         <!-- category Column -->\\r\\n                          <ng-container matColumnDef=\\\"name\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef> Title </th>\\r\\n                            <td mat-cell *matCellDef=\\\"let element\\\">{{element.name}}</td>\\r\\n                          </ng-container>\\r\\n                        \\r\\n                          <!-- goals_description Column -->\\r\\n                          <ng-container matColumnDef=\\\"description\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef> Description </th>\\r\\n                            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.description}} </td>\\r\\n                          </ng-container>\\r\\n                    \\r\\n                          <!-- mearsu_weight Column -->\\r\\n                          <ng-container matColumnDef=\\\"mearsu_weight\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef fxHide fxShow.gt-sm> Mearsurement/Weightage </th>\\r\\n                            <td mat-cell *matCellDef=\\\"let element\\\" fxHide fxShow.gt-sm> {{element.measurement}}/{{element.weightage}} </td>\\r\\n                          </ng-container>\\r\\n                    \\r\\n                    \\r\\n                          <!-- Buttons Column -->\\r\\n                          <ng-container matColumnDef=\\\"buttons\\\">\\r\\n                              <th mat-header-cell *matHeaderCellDef>Actions</th>\\r\\n                              <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                                 \\r\\n                               <button class=\\\"new_btn mr-lef\\\" (click)=\\\"editpopup('cvalue', element, 'corporate-values')\\\"><mat-icon>visibility</mat-icon></button>\\r\\n                               <button class=\\\"new_btn\\\" (click)=\\\"deleteItem('cvalue', element.id, 'corporate-values')\\\"><mat-icon>delete</mat-icon></button>                                                             \\r\\n                                \\r\\n                              </td>\\r\\n                            </ng-container>\\r\\n                    \\r\\n                    \\r\\n                         \\r\\n                        \\r\\n                          <tr mat-header-row *matHeaderRowDef=\\\"calValColumns\\\"></tr>\\r\\n                          <tr mat-row *matRowDef=\\\"let row; columns: calValColumns;\\\"></tr>\\r\\n                        </table>\\r\\n                  </div>\\r\\n\\r\\n                  <div fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\">\\r\\n                      <button mat-raised-button [matMenuTriggerFor]=\\\"corporateMenu\\\" color=\\\"primary\\\" class=\\\"btn_new\\\">+   Select from Library Corporate Values</button>\\r\\n                      <mat-menu #corporateMenu=\\\"matMenu\\\" class=\\\"mm_menu\\\" xPosition=\\\"after\\\" [overlapTrigger]=\\\"false\\\">\\r\\n                          <h4 class=\\\"bg_cc\\\" mat-menu-item>Library Of Corporate Values</h4>\\r\\n                          <div class=\\\"search\\\" (keydown.tab)=\\\"$event.stopPropagation()\\\" (click)=\\\"$event.stopPropagation(); false;\\\">\\r\\n                              <input class=\\\"search-txt\\\" (click)=\\\"$event.stopPropagation(); false;\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"query\\\" placeholder=\\\"Type here....\\\">\\r\\n                              <button class=\\\"btn-srch\\\"><mat-icon>search</mat-icon></button>\\r\\n                          </div>\\r\\n                          <div class=\\\"search-content\\\">\\r\\n                            <form [formGroup]=\\\"cvalListForm\\\">\\r\\n                              <div *ngFor=\\\"let data of cvalList | searchFilter: 'form-library' : query\\\">\\r\\n                                <mat-checkbox [checked]=\\\"cvalListForm.value.cvalArray.indexOf(data.id) != -1\\\" (change)=\\\"onChange('cval', data.id, $event.checked)\\\">{{data.name}}</mat-checkbox>\\r\\n                              </div>\\r\\n                            </form>\\r\\n                          </div>\\r\\n                      </mat-menu>\\r\\n                      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"openModal('cvalue', 'corporate-values')\\\" class=\\\"btn_new\\\">+   Create New Corporate Values(Free Text)</button>\\r\\n                  </div>\\r\\n                  \\r\\n\\r\\n              </div>\\r\\n            </form>\\r\\n       \\r\\n     \\r\\n         <mat-action-row>\\r\\n          \\r\\n         </mat-action-row>\\r\\n       </mat-expansion-panel>\\r\\n\\r\\n\\r\\n       <mat-expansion-panel class=\\\"bg_c\\\" [expanded]=\\\"step === 0\\\" (opened)=\\\"setStep(0)\\\" hideToggle>\\r\\n          <mat-expansion-panel-header>\\r\\n            <mat-panel-title class=\\\"ch_color\\\">Set Performance Appraisal Cycle</mat-panel-title>\\r\\n            <mat-panel-description>\\r\\n              <mat-icon class=\\\"change_c\\\">arrow_drop_down</mat-icon>\\r\\n            </mat-panel-description>\\r\\n          </mat-expansion-panel-header>\\r\\n          <form [formGroup]=\\\"firstFormGroup\\\">\\r\\n      <div fxLayout=\\\"row wrap\\\">\\r\\n         \\r\\n        <div fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\" class=\\\"change_height\\\">\\r\\n          <div class=\\\"top-btns\\\">\\r\\n            <button class=\\\"first\\\" mat-raised-button>\\r\\n              <mat-icon>add</mat-icon> Select from Library\\r\\n            </button>\\r\\n            <button class=\\\"second\\\" mat-raised-button>\\r\\n              <mat-icon>add</mat-icon> Create New Performance Management Cycle\\r\\n            </button>\\r\\n          </div>\\r\\n          <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Name Of Cycle</mat-label>\\r\\n            <input matInput placeholder=\\\"( For i.e. Annual Review 2019 )\\\">\\r\\n          </mat-form-field>\\r\\n          </div>\\r\\n         \\r\\n          <div fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\" class=\\\"change_height\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Description</mat-label>\\r\\n              <input matInput placeholder=\\\"Description\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\">\\r\\n              <mat-label class=\\\"lbl_cs\\\"><b>Performance Management Period(for entire appraisal cycle)</b></mat-label>\\r\\n          </div>\\r\\n \\r\\n          <div fxFlex.gt-md=\\\"25\\\" fxFlex=\\\"100\\\" class=\\\"mr_tp change_height\\\">\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                  <mat-label>Start Date</mat-label>\\r\\n                  <input matInput placeholder=\\\"Date\\\" [matDatepicker]=\\\"picker\\\" (focus)=\\\"picker.open()\\\" placeholder=\\\"Start Date\\\">\\r\\n                  <mat-icon class=\\\"mt_i\\\" matSuffix>calendar_today</mat-icon>\\r\\n              </mat-form-field>\\r\\n              <mat-datepicker #picker></mat-datepicker>\\r\\n              \\r\\n          </div>\\r\\n \\r\\n          <div fxFlex.gt-md=\\\"25\\\" fxFlex=\\\"100\\\" class=\\\"mr_tp change_height\\\">\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                  <mat-label>End Date</mat-label>\\r\\n                  <input matInput placeholder=\\\"Date\\\" [matDatepicker]=\\\"picker1\\\" (focus)=\\\"picker1.open()\\\" placeholder=\\\"End Date\\\">\\r\\n                  <mat-icon class=\\\"mt_i\\\" matSuffix>calendar_today</mat-icon>\\r\\n              </mat-form-field>\\r\\n              <mat-datepicker #picker1></mat-datepicker>\\r\\n          </div>\\r\\n \\r\\n          <div fxFlex.gt-md=\\\"47\\\" fxFlex=\\\"100\\\" class=\\\"mr_last change_height\\\">\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                  <mat-label>Time Zone</mat-label>\\r\\n                <mat-select placeholder=\\\"Time Zone\\\">\\r\\n                  <mat-option value=\\\"option\\\">Option</mat-option>\\r\\n                  <mat-option value=\\\"option\\\">Option2</mat-option>\\r\\n                  <mat-option value=\\\"option\\\">Option3</mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n \\r\\n            <div fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\">\\r\\n                <mat-label class=\\\"lbl_cs\\\"><b>Performance Evaluation Period-User(for user to submit form)</b></mat-label>\\r\\n            </div>\\r\\n  \\r\\n            <div fxFlex.gt-md=\\\"22\\\" fxFlex=\\\"100\\\" class=\\\"mr_tp change_height\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>Start Date</mat-label>\\r\\n                    <input matInput placeholder=\\\"Date\\\" [matDatepicker]=\\\"picker2\\\" (focus)=\\\"picker2.open()\\\" placeholder=\\\"Start Date\\\">\\r\\n                    <mat-icon class=\\\"mt_i\\\" matSuffix>calendar_today</mat-icon>\\r\\n                </mat-form-field>\\r\\n                <mat-datepicker #picker2></mat-datepicker>\\r\\n                \\r\\n            </div>\\r\\n  \\r\\n            <div fxFlex.gt-md=\\\"22\\\" fxFlex=\\\"100\\\" class=\\\"mr_tp change_height\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>End Date</mat-label>\\r\\n                    <input matInput placeholder=\\\"Date\\\" [matDatepicker]=\\\"picker3\\\" (focus)=\\\"picker3.open()\\\" placeholder=\\\"End Date\\\">\\r\\n                    <mat-icon class=\\\"mt_i\\\" matSuffix>calendar_today</mat-icon>\\r\\n                </mat-form-field>\\r\\n                <mat-datepicker #picker3></mat-datepicker>\\r\\n            </div>\\r\\n  \\r\\n            <div fxFlex.gt-md=\\\"26\\\" fxFlex=\\\"100\\\" class=\\\"mr_tp change_height\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>Time Zone</mat-label>\\r\\n                  <mat-select placeholder=\\\"Time Zone\\\">\\r\\n                    <mat-option value=\\\"option\\\">Option</mat-option>\\r\\n                    <mat-option value=\\\"option\\\">Option2</mat-option>\\r\\n                    <mat-option value=\\\"option\\\">Option3</mat-option>\\r\\n                  </mat-select>\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n \\r\\n              <div fxFlex.gt-md=\\\"26\\\" fxFlex=\\\"100\\\" class=\\\"mr_last change_height\\\">\\r\\n                  <mat-form-field appearance=\\\"outline\\\">\\r\\n                      <mat-label>Reminder</mat-label>\\r\\n                    <mat-select placeholder=\\\"Reminder\\\">\\r\\n                        <mat-option value=\\\"1\\\">1 day before</mat-option>\\r\\n                        <mat-option value=\\\"2\\\">2 day before</mat-option>\\r\\n                        <mat-option value=\\\"3\\\">3 day before</mat-option>\\r\\n                        <mat-option value=\\\"7\\\">week</mat-option>\\r\\n                    </mat-select>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n \\r\\n                <div fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\">\\r\\n                <mat-label class=\\\"lbl_cs\\\"><b>Performance Evaluation Period-Manager Low(to review User's Form)</b></mat-label>\\r\\n                </div>\\r\\n      \\r\\n                <div fxFlex.gt-md=\\\"22\\\" fxFlex=\\\"100\\\" class=\\\"mr_tp change_height\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                        <mat-label>Start Date</mat-label>\\r\\n                        <input matInput placeholder=\\\"Date\\\" [matDatepicker]=\\\"picker4\\\" (focus)=\\\"picker4.open()\\\" placeholder=\\\"Start Date\\\">\\r\\n                        <mat-icon class=\\\"mt_i\\\" matSuffix>calendar_today</mat-icon>\\r\\n                    </mat-form-field>\\r\\n                    <mat-datepicker #picker4></mat-datepicker>\\r\\n                    \\r\\n                </div>\\r\\n      \\r\\n                <div fxFlex.gt-md=\\\"22\\\" fxFlex=\\\"100\\\" class=\\\"mr_tp change_height\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                        <mat-label>End Date</mat-label>\\r\\n                        <input matInput placeholder=\\\"Date\\\" [matDatepicker]=\\\"picker5\\\" (focus)=\\\"picker5.open()\\\" placeholder=\\\"End Date\\\">\\r\\n                        <mat-icon class=\\\"mt_i\\\" matSuffix>calendar_today</mat-icon>\\r\\n                    </mat-form-field>\\r\\n                    <mat-datepicker #picker5></mat-datepicker>\\r\\n                </div>\\r\\n      \\r\\n                <div fxFlex.gt-md=\\\"26\\\" fxFlex=\\\"100\\\" class=\\\"mr_tp change_height\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                        <mat-label>Time Zone</mat-label>\\r\\n                      <mat-select placeholder=\\\"Time Zone\\\">\\r\\n                        <mat-option value=\\\"option\\\">Option</mat-option>\\r\\n                        <mat-option value=\\\"option\\\">Option2</mat-option>\\r\\n                        <mat-option value=\\\"option\\\">Option3</mat-option>\\r\\n                      </mat-select>\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n    \\r\\n                  <div fxFlex.gt-md=\\\"26\\\" fxFlex=\\\"100\\\" class=\\\"mr_last change_height\\\">\\r\\n                      <mat-form-field appearance=\\\"outline\\\">\\r\\n                          <mat-label>Reminder</mat-label>\\r\\n                        <mat-select placeholder=\\\"Reminder\\\">\\r\\n                          <mat-option value=\\\"1\\\">1 day before</mat-option>\\r\\n                          <mat-option value=\\\"2\\\">2 day before</mat-option>\\r\\n                          <mat-option value=\\\"3\\\">3 day before</mat-option>\\r\\n                          <mat-option value=\\\"7\\\">week</mat-option>\\r\\n                       </mat-select>\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\">\\r\\n                        <mat-label class=\\\"lbl_cs\\\"><b>Performance Evaluation Period- Manager High(to review User's Form with Manager Low's input)</b></mat-label>\\r\\n                        </div>\\r\\n              \\r\\n                        <div fxFlex.gt-md=\\\"22\\\" fxFlex=\\\"100\\\" class=\\\"mr_tp change_height\\\">\\r\\n                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                                <mat-label>Start Date</mat-label>\\r\\n                                <input matInput placeholder=\\\"Date\\\" [matDatepicker]=\\\"picker6\\\" (focus)=\\\"picker6.open()\\\" placeholder=\\\"Start Date\\\">\\r\\n                                <mat-icon class=\\\"mt_i\\\" matSuffix>calendar_today</mat-icon>\\r\\n                            </mat-form-field>\\r\\n                            <mat-datepicker #picker6></mat-datepicker>\\r\\n                            \\r\\n                        </div>\\r\\n              \\r\\n                        <div fxFlex.gt-md=\\\"22\\\" fxFlex=\\\"100\\\" class=\\\"mr_tp change_height\\\">\\r\\n                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                                <mat-label>End Date</mat-label>\\r\\n                                <input matInput placeholder=\\\"Date\\\" [matDatepicker]=\\\"picker7\\\" (focus)=\\\"picker7.open()\\\" placeholder=\\\"End Date\\\">\\r\\n                                <mat-icon class=\\\"mt_i\\\" matSuffix>calendar_today</mat-icon>\\r\\n                            </mat-form-field>\\r\\n                            <mat-datepicker #picker7></mat-datepicker>\\r\\n                        </div>\\r\\n              \\r\\n                        <div fxFlex.gt-md=\\\"26\\\" fxFlex=\\\"100\\\" class=\\\"mr_tp change_height\\\">\\r\\n                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                                <mat-label>Time Zone</mat-label>\\r\\n                              <mat-select placeholder=\\\"Time Zone\\\">\\r\\n                                <mat-option value=\\\"option\\\">Option</mat-option>\\r\\n                                <mat-option value=\\\"option\\\">Option2</mat-option>\\r\\n                                <mat-option value=\\\"option\\\">Option3</mat-option>\\r\\n                              </mat-select>\\r\\n                            </mat-form-field>\\r\\n                          </div>\\r\\n            \\r\\n                          <div fxFlex.gt-md=\\\"26\\\" fxFlex=\\\"100\\\" class=\\\"mr_last change_height\\\">\\r\\n                              <mat-form-field appearance=\\\"outline\\\">\\r\\n                                  <mat-label>Reminder</mat-label>\\r\\n                                <mat-select placeholder=\\\"Reminder\\\">\\r\\n                                  <mat-option value=\\\"1\\\">1 day before</mat-option>\\r\\n                                  <mat-option value=\\\"2\\\">2 day before</mat-option>\\r\\n                                  <mat-option value=\\\"3\\\">3 day before</mat-option>\\r\\n                                  <mat-option value=\\\"7\\\">week</mat-option>\\r\\n                               </mat-select>\\r\\n                              </mat-form-field>\\r\\n                            </div>\\r\\n       \\r\\n          </div>\\r\\n          </form>\\r\\n        </mat-expansion-panel>\\r\\n     \\r\\n     </mat-accordion>\\r\\n     <!-- </mat-card> -->\\r\\n     <div fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\" class=\\\"example-button-row\\\">                        \\r\\n        <button mat-raised-button *ngIf=\\\"formId\\\" (click)=\\\"deleteform()\\\" color=\\\"warn\\\">Delete</button>\\r\\n        <button mat-raised-button color=\\\"accent\\\">Save as Draft</button>\\r\\n        <button mat-raised-button (click)=\\\"onSubmit(firstFormGroup.value)\\\">Save & Confirm</button>\\r\\n      </div>\\r\\n   </div>\\r\\n </div>\\r\\n\\r\\n \\r\\n\\r\\n \\r\\n             \\r\\n       \\r\\n   </div>\\r\\n </div>\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n#editemp {\\n  width: 384px;\\n  max-width: 384px;\\n  padding: 0px;\\n  text-align: center;\\n  background: #FFFFFF;\\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12); }\\n@media screen and (max-width: 599px) {\\n    #editemp {\\n      padding: 0px;\\n      width: 100%; } }\\n#editemp .logo {\\n    width: 128px;\\n    margin: 32px auto; }\\n#editemp .title {\\n    font-size: 12px;\\n    color: #ccc;\\n    margin: 16px 32px 32px 30px; }\\n#editemp form {\\n    width: 100%;\\n    text-align: left; }\\n#editemp form mat-form-field {\\n      width: 100%; }\\n#editemp form .submit-button {\\n      width: 220px;\\n      margin: 16px auto;\\n      display: block; }\\n@media screen and (max-width: 599px) {\\n        #editemp form .submit-button {\\n          width: 90%; } }\\n#editemp .login {\\n    margin: 32px auto 24px auto;\\n    width: 250px;\\n    font-weight: 500; }\\n#editemp .login .text {\\n      margin-right: 8px; }\\n.reset {\\n  display: block;\\n  width: 100%;\\n  left: 30%;\\n  float: left;\\n  position: relative; }\\n.editemp .mat-card {\\n  border: 1px solid #fa7915;\\n  border-radius: 10px; }\\n.editemp .mat-card-header {\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  background: #f2ab13;\\n  padding: 14px 0 0 0;\\n  border-radius: 10px;\\n  border-bottom-left-radius: 0px;\\n  border-bottom-right-radius: 0px; }\\n.editemp .mat-card-title {\\n  font-size: 20px;\\n  font-weight: 500; }\\n.editemp .mat-card-subtitle {\\n  font-size: 20px;\\n  color: #000; }\\n.editemp .mat-card-title, .editemp .mat-card-subtitle {\\n  margin-bottom: 5px; }\\n.editemp .mat-card-content {\\n  text-align: left;\\n  padding: 20px; }\\n.editemp .mat-card-content ul {\\n  list-style: none;\\n  margin: 0; }\\n.editemp .mat-card-content ul li {\\n  font-size: 18px;\\n  padding: 5px 0px; }\\n.editemp .mat-card-content ul li:before {\\n  font-weight: 100;\\n  margin-left: -1em;\\n  background-color: #fb7215;\\n  border-radius: 50%;\\n  content: \\\"\\\";\\n  display: inline-block;\\n  margin-right: 10px;\\n  margin-bottom: 2px;\\n  height: 8px;\\n  width: 8px; }\\n.editemp .free {\\n  width: 100%;\\n  display: block;\\n  float: left;\\n  padding: 20px; }\\n.editemp .paid {\\n  width: 60%;\\n  display: block;\\n  float: left;\\n  padding: 20px; }\\n.editemp .paid .left, .editemp .paid .right {\\n    width: 50%;\\n    display: block;\\n    float: left; }\\n.new_r {\\n  float: left;\\n  margin-left: 20px;\\n  margin-top: 20px !important; }\\ndiv.mat-horizontal-stepper-header-container {\\n  display: none !important; }\\n.rr_right {\\n  float: right; }\\n@media only screen and (max-width: 767px) {\\n  .editemp {\\n    margin: 0px !important; }\\n    .editemp .free, .editemp .paid, .editemp .left, .editemp .right {\\n      width: 100% !important; }\\n    .editemp .free .mat-card-content {\\n      height: 230px; }\\n    .editemp .paid .mat-card-content {\\n      height: 600px; } }\\n.example-headers-align .mat-expansion-panel-header-description {\\n  -webkit-box-pack: end;\\n          justify-content: flex-end;\\n  -webkit-box-align: center;\\n          align-items: center; }\\nmat-form-field {\\n  display: block !important; }\\n.mt_i {\\n  font-size: 24px !important; }\\n.mat-expansion-panel-header {\\n  background-color: black !important;\\n  margin-bottom: 10px;\\n  border-radius: 11px; }\\n.mat-expansion-panel-content {\\n  background-color: white !important; }\\n.mat-expansion-panel:not([class*=mat-elevation-z]) {\\n  box-shadow: none !important; }\\n.mat-expansion-panel-header-title {\\n  color: white !important; }\\n.change_c {\\n  color: white !important;\\n  font-size: 36px;\\n  height: 36px;\\n  width: 36px; }\\n.lbl_cs {\\n  float: left; }\\n.mr_tp {\\n  margin-top: 15px;\\n  margin-right: 10px; }\\n.mr_last {\\n  margin-top: 15px; }\\n.example-button-row button,\\n.example-button-row a {\\n  margin-right: 8px; }\\n.example-button-row button:last-child {\\n  margin-top: 10px; }\\n.example-button-row {\\n  text-align: center;\\n  margin-top: 10px; }\\n.ch_color {\\n  padding-top: 7px; }\\n.mat-form-field-appearance-outline .mat-form-field-infix {\\n  padding: 10px 0 10px 0 !important;\\n  margin-top: -10px !important; }\\n.sect_ion {\\n  margin-top: 20px;\\n  background-color: antiquewhite;\\n  padding: 13px;\\n  border-radius: 12px; }\\n.inp_change {\\n  height: 25px;\\n  width: 33px;\\n  background-color: white;\\n  margin-left: 20px;\\n  padding: 5px; }\\ntable {\\n  width: 100%; }\\n.page-layout.blank {\\n  min-height: 50%; }\\n.new_btn {\\n  height: 24px;\\n  width: 24px;\\n  background-color: #f49f14;\\n  border-radius: 50px;\\n  padding-top: 4px; }\\n.mr-lef {\\n  margin-right: 10px; }\\n.new_btn .mat-icon {\\n  height: 20px;\\n  width: 20px;\\n  font-size: 17px; }\\n.mr_ch {\\n  margin-top: 50px;\\n  height: 37px; }\\n.img_s {\\n  height: 25px;\\n  width: 25px;\\n  background-color: #f49f14;\\n  border-radius: 50px;\\n  margin-right: 6px; }\\n.set_height {\\n  max-height: 300px;\\n  overflow-y: scroll;\\n  margin-top: 10px; }\\n.mat-header-cell {\\n  font-size: 14px;\\n  font-weight: 500; }\\n.btn_new {\\n  background-color: #000;\\n  color: #FFFFFF;\\n  margin-left: 20px;\\n  margin-top: 20px;\\n  border-radius: 50px; }\\n.bg_cc {\\n  background-color: #000;\\n  color: #FFFFFF;\\n  margin-top: -6px;\\n  margin-bottom: 0px; }\\n.change_se {\\n  margin: 13px;\\n  border-radius: 20px;\\n  padding: 6px;\\n  border: 1px ridge gray;\\n  height: 49px; }\\n.search {\\n  padding: 15px 10px 10px 10px;\\n  display: -webkit-box;\\n  display: flex; }\\n.search .search-txt {\\n    padding: 10px;\\n    font-size: 17px;\\n    border: 1px solid black;\\n    float: left;\\n    width: 80%;\\n    border-right: none;\\n    background: #ffffff;\\n    border-top-left-radius: 20px;\\n    border-bottom-left-radius: 20px; }\\n.search .btn-srch {\\n    border: 1px solid;\\n    border-left: none;\\n    padding: 5px;\\n    width: 20%;\\n    border-bottom-right-radius: 20px;\\n    border-top-right-radius: 20px;\\n    cursor: pointer; }\\n.search-content {\\n  padding: 0px 10px; }\\n.search-content .mat-radio-group {\\n    display: -webkit-box;\\n    display: flex;\\n    -webkit-box-orient: vertical;\\n    -webkit-box-direction: normal;\\n            flex-direction: column; }\\n.search-content .mat-radio-group .srchrdio {\\n      padding: 10px 5px; }\\n.top-btns {\\n  display: -webkit-box;\\n  display: flex;\\n  padding: 10px 0px 30px 0px; }\\n.top-btns .first {\\n    background-color: #f49f14;\\n    width: 300px;\\n    text-align: left; }\\n.top-btns .second {\\n    background-color: #ccc; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormArray, FormControl } from '@angular/forms';\r\nimport { EditpopupComponent } from './editpopup/editpopup.component';\r\nimport { MatDialog } from '@angular/material';\r\nimport { ApiService } from '@fuse/services/api.service';\r\nimport { ApiLoaderService } from '@fuse/services/api-loader.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToasterService } from '@fuse/services/toaster-service.service';\r\n\r\n@Component({\r\n  selector: 'app-form-library',\r\n  templateUrl: './form-library.component.html',\r\n  styleUrls: ['./form-library.component.scss']\r\n})\r\n\r\nexport class FormLibraryComponent implements OnInit {\r\n  query: string;\r\n  goalListForm: FormGroup;\r\n  genericListForm: FormGroup;\r\n  techListForm: FormGroup;\r\n  cvalListForm: FormGroup;\r\n\r\n  goalColumns: string[] = ['category', 'name', 'description','mearsu_weight','buttons'];\r\n  calValColumns: string[] = [ 'name', 'description','mearsu_weight','buttons'];\r\n  displayedColumns3: string[] = ['name','description','level','buttons'];\r\n\r\n  goals;\r\n  goalDataSource;\r\n\r\n  genericList;\r\n  genericDataSource;\r\n\r\n  techList;\r\n  techDataSource;\r\n\r\n  cvalList;\r\n  corValDataSource;\r\n\r\n  goal_weightage;\r\n  generic_weightage;\r\n  technical_weightage;\r\n  corporate_weightage;\r\n\r\n  industries;\r\n  jobRoles;\r\n  isLinear = false;\r\n  firstFormGroup: FormGroup;\r\n  secondFormGroup: FormGroup;\r\n  options: FormGroup;\r\n  formId;\r\n  dialogRef: any;\r\n\r\n  \r\n  constructor(private toast: ToasterService, private fb: FormBuilder, private apiService: ApiService, public dialog: MatDialog\r\n    , private apiloader: ApiLoaderService, private route: ActivatedRoute, private router: Router) {\r\n      this.route.params.subscribe(params => {\r\n        this.formId = params['formId'];\r\n      });\r\n    this.options = fb.group({\r\n      hideRequired: false,\r\n      floatLabel: 'auto'\r\n    });\r\n  }\r\n\r\n  hide = false;\r\n   \r\n  step = 1;\r\n\r\n  setStep(index: number) {\r\n    this.step = index;\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.firstFormGroup = this.fb.group({\r\n      name: ['', Validators.required],\r\n      industry_id: ['', Validators.required],\r\n      job_role_id: ['', Validators.required]\r\n    });\r\n\r\n    this.goalListForm = this.fb.group({\r\n      goalsArray: this.fb.array([])\r\n    });\r\n\r\n    this.genericListForm = this.fb.group({\r\n      genericsArray: this.fb.array([])\r\n    });\r\n\r\n    this.techListForm = this.fb.group({\r\n      techArray: this.fb.array([])\r\n    });\r\n\r\n    this.cvalListForm = this.fb.group({\r\n      cvalArray: this.fb.array([])\r\n    });\r\n    if (this.formId) {\r\n      this.getGoalForm(this.formId);\r\n    }\r\n    this.getIndustries();\r\n    this.getJobRoles();\r\n    this.getGoals();\r\n    this.getCorVals();\r\n    this.getSkills();\r\n  }\r\n\r\n  onChange(type, id: any, isChecked: boolean) {\r\n    if (type =='goal') {\r\n\r\n      const goalFormArray = <FormArray>this.goalListForm.controls.goalsArray;\r\n      if (isChecked) {\r\n        goalFormArray.push(new FormControl(id));\r\n      } else {\r\n        let index = goalFormArray.controls.findIndex(x => x.value == id)\r\n        goalFormArray.removeAt(index);\r\n      }\r\n      let data = [];\r\n      for (let itm of this.goals){\r\n        for (let j of this.goalListForm.value.goalsArray) {\r\n          if (j == itm.id) {\r\n            data.push(itm);\r\n          }\r\n        }\r\n      }    \r\n      this.goalDataSource = data;\r\n\r\n    } else if (type == 'generic') {\r\n\r\n      const genericFormArray = <FormArray>this.genericListForm.controls.genericsArray;\r\n      if (isChecked) {\r\n        genericFormArray.push(new FormControl(id));\r\n      } else {\r\n        let index = genericFormArray.controls.findIndex(x => x.value == id)\r\n        genericFormArray.removeAt(index);\r\n      }\r\n      let data = [];\r\n      for (let itm of this.genericList){\r\n        for (let j of this.genericListForm.value.genericsArray) {\r\n          if (j == itm.id) {\r\n            data.push(itm);\r\n          }\r\n        }\r\n      }    \r\n      this.genericDataSource = data;\r\n\r\n    } else if(type == 'tech') {\r\n\r\n      const techFormArray = <FormArray>this.techListForm.controls.techArray;\r\n      if (isChecked) {\r\n        techFormArray.push(new FormControl(id));\r\n      } else {\r\n        let index = techFormArray.controls.findIndex(x => x.value == id)\r\n        techFormArray.removeAt(index);\r\n      }\r\n      let data = [];\r\n      for (let itm of this.techList){\r\n        for (let j of this.techListForm.value.techArray) {\r\n          if (j == itm.id) {\r\n            data.push(itm);\r\n          }\r\n        }\r\n      }    \r\n      this.techDataSource = data;\r\n\r\n    } else {\r\n      \r\n      const cvalFormArray = <FormArray>this.cvalListForm.controls.cvalArray;\r\n      if (isChecked) {\r\n        cvalFormArray.push(new FormControl(id));\r\n      } else {\r\n        let index = cvalFormArray.controls.findIndex(x => x.value == id)\r\n        cvalFormArray.removeAt(index);\r\n      }\r\n      let data = [];\r\n      for (let itm of this.cvalList){\r\n        for (let j of this.cvalListForm.value.cvalArray) {\r\n          if (j == itm.id) {\r\n            data.push(itm);\r\n          }\r\n        }\r\n      }    \r\n      this.corValDataSource = data;\r\n    }\r\n  }\r\n\r\n  getGoalForm(id) { \r\n    this.apiService.getData('goal-setting-form/' + id).subscribe(response => {\r\n        if (response.status == 'success') {\r\n          let data = response.data;\r\n          this.firstFormGroup.patchValue({name: data.name, industry_id: data.industry, job_role_id: data.job_role });\r\n          this.goal_weightage = data.goal_weightage;\r\n          this.generic_weightage = data.generic_weightage;\r\n          this.technical_weightage = data.technical_weightage;\r\n          this.corporate_weightage = data.corporate_weightage;\r\n          for (let goal of data.goals){\r\n            const goalFormArray = <FormArray>this.goalListForm.controls.goalsArray;\r\n            goalFormArray.push(new FormControl(goal.id));\r\n          }\r\n          for (let cval of data.corporateValues){\r\n            const cvalFormArray = <FormArray>this.cvalListForm.controls.cvalArray;\r\n            cvalFormArray.push(new FormControl(cval.id));\r\n          }\r\n          for (let gskill of data.skills.genericSkills){\r\n            const genericFormArray = <FormArray>this.genericListForm.controls.genericsArray;\r\n            genericFormArray.push(new FormControl(gskill.id));\r\n          }\r\n          for (let tskill of data.skills.technicalSkill){\r\n            const techFormArray = <FormArray>this.techListForm.controls.techArray;\r\n            techFormArray.push(new FormControl(tskill.id));\r\n          }\r\n          this.goalDataSource = data.goals;\r\n          this.genericDataSource = data.skills.genericSkills;\r\n          this.techDataSource = data.skills.technicalSkill;\r\n          this.corValDataSource = data.corporateValues;\r\n        }\r\n    });\r\n  }\r\n\r\n  getIndustries() {\r\n    this.apiService.getData('industry').subscribe(response => {\r\n        if (response.status == 'success') {\r\n          this.industries = response.data;\r\n        }\r\n    });\r\n  }\r\n\r\n  getJobRoles() {\r\n    this.apiService.getData('job-roles').subscribe(response => {\r\n        if (response.status == 'success') {\r\n          this.jobRoles = response.data;\r\n        }\r\n    });\r\n  }\r\n\r\n  openModal(type, url) {\r\n    this.dialogRef = this.dialog.open(EditpopupComponent, {\r\n        panelClass : 'edit-perform-dialog',\r\n        data       : { modalType: type }\r\n    });\r\n\r\n    this.dialogRef.afterClosed().subscribe((response) => {\r\n        if ( !response ) {\r\n            return;\r\n        } else {\r\n          this.apiloader.setLoader(true);\r\n          this.apiService.postData(url, response).subscribe(res => {\r\n              if (res.status == 'success') {\r\n                this.apiloader.setLoader(false);\r\n                if (type == 'goal') {\r\n                  this.getGoals();\r\n                  this.toast.showSuccess('Goal added Successfully!.');\r\n                }\r\n                else if(type == 'cvalue') {\r\n                  this.getCorVals();\r\n                  this.toast.showSuccess('Corporate value added Successfully!.');\r\n                }\r\n                else {\r\n                  this.getSkills();\r\n                  this.toast.showSuccess('Skill added Successfully!.');\r\n                }\r\n              }\r\n          }, error => {\r\n            this.apiloader.setLoader(false);\r\n            this.toast.showError(error);\r\n          });\r\n        }\r\n    });\r\n  }\r\n\r\n  editpopup(type, row, url) {\r\n      this.dialogRef = this.dialog.open(EditpopupComponent, {\r\n          panelClass : 'edit-perform-dialog',\r\n          data       : { modalType: type, details: row}\r\n      });\r\n\r\n      this.dialogRef.afterClosed().subscribe((response) => {\r\n          if ( !response ) {\r\n              return;\r\n          } else {\r\n            this.apiloader.setLoader(true);\r\n            let id = response.id;\r\n            delete response.id;\r\n            this.apiService.postData(url + '/' + id, response).subscribe(res => {\r\n                if (res.status == 'success') {\r\n                  this.apiloader.setLoader(false);\r\n                  if (type == 'goal') {\r\n                    this.getGoals();\r\n                    this.toast.showSuccess('Goal updated Successfully!.');\r\n                  }\r\n                  else if(type == 'cvalue') {\r\n                    this.getCorVals();\r\n                    this.toast.showSuccess('Corporate value updated Successfully!.');\r\n                  }\r\n                  else {\r\n                    this.getSkills();\r\n                    this.toast.showSuccess('Skill updated Successfully!.');\r\n                  }\r\n                }\r\n            }, error => {\r\n              this.apiloader.setLoader(false);\r\n              this.toast.showError(error);\r\n            });\r\n          }\r\n      });\r\n  }\r\n\r\n  getGoals() {\r\n    this.apiService.getData('goals').subscribe(response => {\r\n        if (response.status == 'success') {\r\n          this.goals = response.data;\r\n        }\r\n    });\r\n  }\r\n\r\n  getSkills() {\r\n    this.genericDataSource = [];\r\n    this.techDataSource = [];\r\n    this.apiService.getData('skills').subscribe(response => {\r\n      if (response.status == 'success') {\r\n        let gdata = [];\r\n        let tdata = [];\r\n        for (let item of response.data) {\r\n          if (item.type == 'generic') {\r\n            gdata.push(item);\r\n          } else {\r\n            tdata.push(item);\r\n          }\r\n        }\r\n        this.genericList = gdata;\r\n        this.techList = tdata;\r\n      }\r\n    });\r\n  }\r\n\r\n  getCorVals() {\r\n    this.corValDataSource = [];\r\n    this.apiService.getData('corporate-values').subscribe(response => {\r\n      if (response.status == 'success') {\r\n        this.cvalList = response.data;\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteItem(type, id, url) {\r\n    this.apiloader.setLoader(true);\r\n    this.apiService.deleteData(url + '/' + id).subscribe(response => {\r\n      if (response.status == 'success') {\r\n        this.apiloader.setLoader(false);\r\n        if (type == 'goal') {\r\n          this.getGoals();\r\n          this.toast.showSuccess('Goal deleted Successfully!.');\r\n        }\r\n        else if(type == 'cvalue') {\r\n          this.getCorVals();\r\n          this.toast.showSuccess('Corporate value deleted Successfully!.');\r\n        }\r\n        else {\r\n          this.getSkills();\r\n          this.toast.showSuccess('Skill deleted Successfully!.');\r\n        }\r\n      }\r\n    }, error => {\r\n      this.apiloader.setLoader(false);\r\n      this.toast.showError(error);\r\n    });\r\n  }\r\n\r\n  deleteform() {\r\n    this.apiloader.setLoader(true);\r\n    this.apiService.deleteData('goal-setting-form/' + this.formId).subscribe(response => {\r\n      if (response.status == 'success') {\r\n        this.apiloader.setLoader(false);\r\n        this.toast.showSuccess('Goal Setting form deleted Successfully!.');\r\n        this.router.navigate(['/apps/performance/performance-management']);\r\n      }\r\n    }, error => {\r\n      this.apiloader.setLoader(false);\r\n      this.toast.showError(error);\r\n    });\r\n  }\r\n\r\n  onSubmit(formData) {\r\n    if (this.firstFormGroup.valid) {\r\n      formData.client_id = sessionStorage.getItem('client_id');\r\n      formData.goal_weightage = this.goal_weightage;\r\n      formData.generic_weightage = this.generic_weightage;\r\n      formData.technical_weightage = this.technical_weightage;\r\n      formData.corporate_weightage = this.corporate_weightage;\r\n      formData.goals_from_library = this.goalListForm.value.goalsArray;\r\n      formData.generic_skills_from_library = this.genericListForm.value.genericsArray;\r\n      formData.technical_skills_from_library = this.techListForm.value.techArray;\r\n      formData.corporate_values_from_library = this.cvalListForm.value.cvalArray;\r\n\r\n      if (!this.formId) {\r\n        this.apiloader.setLoader(true);\r\n        this.apiService.postData('goal-setting-form', formData).subscribe(response => {\r\n            if (response.data){\r\n                this.apiloader.setLoader(false);\r\n                this.toast.showSuccess('Goal Setting form added Successfully!.');\r\n                this.router.navigate(['/apps/performance/performance-management']);\r\n            }\r\n        }, error => {\r\n          this.apiloader.setLoader(false);\r\n          this.toast.showError(error);\r\n        });\r\n      } else {\r\n        formData.appraisal_cycle_id = 'gdh335X';\r\n        this.apiloader.setLoader(true);\r\n        this.apiService.postData('goal-setting-form/' + this.formId, formData).subscribe(response => {\r\n            if (response.data){\r\n                this.apiloader.setLoader(false);\r\n                this.toast.showSuccess('Goal Setting form updated Successfully!.');\r\n                this.router.navigate(['/apps/performance/performance-management']);\r\n            }\r\n        },  error => {\r\n          this.apiloader.setLoader(false);\r\n          this.toast.showError(error);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \" <!-- HEADER -->\\r\\n <div class=\\\"header mat-accent-bg p-16 p-sm-24\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start start\\\"\\r\\n fxLayout.gt-xs=\\\"row\\\" fxLayoutAlign.gt-xs=\\\"space-between center\\\">\\r\\n \\r\\n <!-- APP TITLE -->\\r\\n <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n   <div class=\\\"logo\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n        <!-- <mat-icon class=\\\"logo-icon mr-16\\\">settings</mat-icon> -->\\r\\n        <span class=\\\"logo-text h1\\\" *ngIf=\\\"userFormData\\\">{{userFormData.goal_setting_form_name}}</span>\\r\\n    </div>\\r\\n \\r\\n </div>\\r\\n <!-- / APP TITLE -->\\r\\n </div>\\r\\n <!-- / HEADER -->\\r\\n\\r\\n <div class=\\\"performance m-16\\\">\\r\\n   <div class=\\\"free\\\">\\r\\n       \\r\\n          <!-- ============================================================== -->\\r\\n<!-- Card Grid-->\\r\\n<!-- ============================================================== -->\\r\\n<div fxLayout=\\\"row wrap\\\" *ngIf=\\\"userFormData\\\">\\r\\n   <div fxFlex.gt-sm=\\\"100\\\" fxFlex=\\\"100\\\">\\r\\n     <!-- <mat-card> -->\\r\\n          \\r\\n        <form [formGroup]=\\\"firstFormGroup\\\">\\r\\n            <div fxLayout=\\\"row wrap\\\">\\r\\n                <div fxFlex.gt-md=\\\"100\\\" fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\" class=\\\"h_editEv\\\">\\r\\n                    <div fxLayout=\\\"row wrap\\\"> \\r\\n                        <div fxFlex.gt-md=\\\"25\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\r\\n                            <mat-label><b>User: </b>Employee</mat-label>\\r\\n                        </div>\\r\\n                        <div fxFlex.gt-md=\\\"25\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\r\\n                            <mat-label><b>Job Role:</b> {{userFormData.job_role.name}}</mat-label>\\r\\n                        </div>\\r\\n                        <div fxFlex.gt-md=\\\"25\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\r\\n                            <mat-label><b>Department:</b> {{userFormData.industry.name}}</mat-label>\\r\\n                        </div>\\r\\n                        <div fxFlex.gt-md=\\\"25\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\r\\n                            <mat-label><b>Period: </b>{{start}} To {{end}}</mat-label>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                </div>\\r\\n               <!-- Start Goals Section -->   \\r\\n               <div fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\" class=\\\"sect_ion\\\"> \\r\\n                 <div fxLayout=\\\"row wrap\\\"> \\r\\n                  <div fxFlex.gt-md=\\\"70\\\" fxFlex=\\\"100\\\">\\r\\n                      <mat-label class=\\\"lbl_cs\\\"><b>Section A : Goals</b></mat-label>\\r\\n                  </div>\\r\\n\\r\\n                  <div fxFlex.gt-md=\\\"30\\\" fxFlex=\\\"100\\\">\\r\\n                      <mat-label class=\\\"lbl_cs\\\">Total Section A Weightage : </mat-label>\\r\\n                      <input class=\\\"inp_change\\\" matInput [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"goal_weightage\\\"\\r\\n                       value=\\\"\\\" readonly> %\\r\\n                  </div>\\r\\n                 </div> \\r\\n               </div> \\r\\n                  <div fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\" class=\\\"set_height\\\">\\r\\n                      <table mat-table [dataSource]=\\\"goalDataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n                         <!-- category Column -->\\r\\n                          <ng-container matColumnDef=\\\"category\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef> Category </th>\\r\\n                            <td mat-cell *matCellDef=\\\"let element\\\">{{element.category}}</td>\\r\\n                          </ng-container>\\r\\n                        \\r\\n                          <!-- goals Column -->\\r\\n                          <ng-container matColumnDef=\\\"name\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef> Goal Name </th>\\r\\n                            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\r\\n                          </ng-container>\\r\\n                        \\r\\n                          <!-- goals_description Column -->\\r\\n                          <ng-container matColumnDef=\\\"description\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef fxHide fxShow.gt-sm> Goals Description </th>\\r\\n                            <td mat-cell *matCellDef=\\\"let element\\\" fxHide fxShow.gt-sm> {{element.description}} </td>\\r\\n                          </ng-container>\\r\\n                    \\r\\n                          <!-- mearsu_weight Column -->\\r\\n                          <ng-container matColumnDef=\\\"mearsu_weight\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef fxHide fxShow.gt-sm> Mearsurement/Weightage </th>\\r\\n                            <td mat-cell *matCellDef=\\\"let element\\\" fxHide fxShow.gt-sm> {{element.measurement}}/{{element.weightage}} </td>\\r\\n                          </ng-container>\\r\\n                    \\r\\n                    \\r\\n                          <!-- Buttons Column -->\\r\\n                          <ng-container matColumnDef=\\\"buttons\\\">\\r\\n                              <th mat-header-cell *matHeaderCellDef>Actions</th>\\r\\n                              <td mat-cell *matCellDef=\\\"let element\\\"> \\r\\n                                 \\r\\n                               <button class=\\\"new_btn mr-lef\\\" (click)=\\\"editpopup('goal', element, 'assigned-appraisal-cycle/goals/')\\\"><mat-icon>feedback</mat-icon></button>\\r\\n                               <button class=\\\"new_btn\\\" (click)=\\\"deleteItem('goal', element.id, 'assigned-appraisal-cycle/goals/')\\\"><mat-icon>delete</mat-icon></button>\\r\\n                               \\r\\n                               \\r\\n                                \\r\\n                              </td>\\r\\n                            </ng-container>\\r\\n                    \\r\\n                    \\r\\n                         \\r\\n                        \\r\\n                          <tr mat-header-row *matHeaderRowDef=\\\"goalColumns\\\"></tr>\\r\\n                          <tr mat-row *matRowDef=\\\"let row; columns: goalColumns;\\\"></tr>\\r\\n                        </table>\\r\\n                  </div>\\r\\n\\r\\n                  \\r\\n\\r\\n\\r\\n                   <!-- Start Generic Skills Section -->  \\r\\n                   <div fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\" class=\\\"sect_ion\\\"> \\r\\n                      <div fxLayout=\\\"row wrap\\\"> \\r\\n                        <div fxFlex.gt-md=\\\"70\\\" fxFlex=\\\"100\\\">\\r\\n                            <mat-label class=\\\"lbl_cs\\\"><b>Section B : Generic Skills</b></mat-label>\\r\\n                        </div>\\r\\n                       <div fxFlex.gt-md=\\\"30\\\" fxFlex=\\\"100\\\">\\r\\n                          <mat-label class=\\\"lbl_cs\\\">Total Section A Weightage : </mat-label>\\r\\n                          <input class=\\\"inp_change\\\" matInput [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"generic_weightage\\\"\\r\\n                            value=\\\"\\\" readonly> %\\r\\n                      </div>\\r\\n                  </div>\\r\\n                </div> \\r\\n\\r\\n                  <div fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\" class=\\\"set_height\\\">\\r\\n                      <table mat-table [dataSource]=\\\"genericDataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n                         <!-- title Column -->\\r\\n                          <ng-container matColumnDef=\\\"name\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef> Title </th>\\r\\n                            <td mat-cell *matCellDef=\\\"let element\\\">{{element.name}}</td>\\r\\n                          </ng-container>\\r\\n                        \\r\\n                          \\r\\n                        \\r\\n                          <!-- skills_description Column -->\\r\\n                          <ng-container matColumnDef=\\\"description\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef> Description Of Skills </th>\\r\\n                            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.description}} </td>\\r\\n                          </ng-container>\\r\\n                    \\r\\n                          <!-- level Column -->\\r\\n                          <ng-container matColumnDef=\\\"level\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef fxHide fxShow.gt-sm> Expected Proficiency Level </th>\\r\\n                            <td mat-cell *matCellDef=\\\"let element\\\" fxHide fxShow.gt-sm> {{element.expected_proficiency_level}} </td>\\r\\n                          </ng-container>\\r\\n                    \\r\\n                    \\r\\n                          <!-- Buttons Column -->\\r\\n                          <ng-container matColumnDef=\\\"buttons\\\">\\r\\n                              <th mat-header-cell *matHeaderCellDef>Actions</th>\\r\\n                              <td mat-cell *matCellDef=\\\"let element\\\"> \\r\\n                                 \\r\\n                               <button class=\\\"new_btn mr-lef\\\" (click)=\\\"editpopup('gskill', element, 'assigned-appraisal-cycle/skills/')\\\"><mat-icon>feedback</mat-icon></button>\\r\\n                               <button class=\\\"new_btn\\\" (click)=\\\"deleteItem('gskill', element.id, 'assigned-appraisal-cycle/skills/')\\\"><mat-icon>delete</mat-icon></button>\\r\\n                               \\r\\n                               \\r\\n                                \\r\\n                              </td>\\r\\n                            </ng-container>\\r\\n                    \\r\\n                    \\r\\n                         \\r\\n                        \\r\\n                          <tr mat-header-row *matHeaderRowDef=\\\"skillColums\\\"></tr>\\r\\n                          <tr mat-row *matRowDef=\\\"let row; columns: skillColums;\\\"></tr>\\r\\n                        </table>\\r\\n                  </div>\\r\\n\\r\\n\\r\\n                 \\r\\n\\r\\n\\r\\n                   <!-- Start Technical Skill Section --> \\r\\n                   <div fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\" class=\\\"sect_ion\\\"> \\r\\n                      <div fxLayout=\\\"row wrap\\\">       \\r\\n                          <div fxFlex.gt-md=\\\"70\\\" fxFlex=\\\"100\\\">\\r\\n                              <mat-label class=\\\"lbl_cs\\\"><b>Section C : Technical Skills</b></mat-label>\\r\\n                          </div>\\r\\n\\r\\n                          <div fxFlex.gt-md=\\\"30\\\" fxFlex=\\\"100\\\">\\r\\n                              <mat-label class=\\\"lbl_cs\\\">Total Section A Weightage : </mat-label>\\r\\n                              <input class=\\\"inp_change\\\" matInput [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"technical_weightage\\\"\\r\\n                                value=\\\"\\\" readonly> %\\r\\n                          </div>\\r\\n                      </div>\\r\\n                    </div>  \\r\\n\\r\\n                  <div fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\" class=\\\"set_height\\\">\\r\\n                      <table mat-table [dataSource]=\\\"techDataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n                         <!-- title Column -->\\r\\n                          <ng-container matColumnDef=\\\"name\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef> Title </th>\\r\\n                            <td mat-cell *matCellDef=\\\"let element\\\">{{element.name}}</td>\\r\\n                          </ng-container>\\r\\n                        \\r\\n                          \\r\\n                        \\r\\n                          <!-- skills_description Column -->\\r\\n                          <ng-container matColumnDef=\\\"description\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef> Description Of Skills </th>\\r\\n                            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.description}} </td>\\r\\n                          </ng-container>\\r\\n                    \\r\\n                          <!-- level Column -->\\r\\n                          <ng-container matColumnDef=\\\"level\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef> Expected Proficiency Level </th>\\r\\n                            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.expected_proficiency_level}} </td>\\r\\n                          </ng-container>\\r\\n                    \\r\\n                    \\r\\n                          <!-- Buttons Column -->\\r\\n                          <ng-container matColumnDef=\\\"buttons\\\">\\r\\n                              <th mat-header-cell *matHeaderCellDef>Actions</th>\\r\\n                              <td mat-cell *matCellDef=\\\"let element\\\"> \\r\\n                                 \\r\\n                               <button class=\\\"new_btn mr-lef\\\" (click)=\\\"editpopup('tskill', element, 'assigned-appraisal-cycle/skills/')\\\"><mat-icon>feedback</mat-icon></button>\\r\\n                               <button class=\\\"new_btn\\\" (click)=\\\"deleteItem('tskill', element.id, 'assigned-appraisal-cycle/skills/')\\\"><mat-icon>delete</mat-icon></button>\\r\\n                               \\r\\n                               \\r\\n                                \\r\\n                              </td>\\r\\n                            </ng-container>\\r\\n                    \\r\\n                    \\r\\n                         \\r\\n                        \\r\\n                          <tr mat-header-row *matHeaderRowDef=\\\"skillColums\\\"></tr>\\r\\n                          <tr mat-row *matRowDef=\\\"let row; columns: skillColums;\\\"></tr>\\r\\n                        </table>\\r\\n                  </div>\\r\\n\\r\\n                  \\r\\n                  <!-- Start Corporate Values Section -->\\r\\n                   <div fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\" class=\\\"sect_ion\\\"> \\r\\n                      <div fxLayout=\\\"row wrap\\\"> \\r\\n                        <div fxFlex.gt-md=\\\"70\\\" fxFlex=\\\"100\\\">\\r\\n                            <mat-label class=\\\"lbl_cs\\\"><b>Section D : Corporate Values</b></mat-label>\\r\\n                        </div>\\r\\n                        <div fxFlex.gt-md=\\\"30\\\" fxFlex=\\\"100\\\">\\r\\n                            <mat-label class=\\\"lbl_cs\\\">Total Section A Weightage : </mat-label>\\r\\n                            <input class=\\\"inp_change\\\" matInput [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"corporate_weightage\\\"\\r\\n                                value=\\\"\\\" readonly> %\\r\\n                        </div>\\r\\n                      </div>\\r\\n                   </div>\\r\\n\\r\\n                  <div fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\" class=\\\"set_height\\\">\\r\\n                      <table mat-table [dataSource]=\\\"corValDataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n                         <!-- category Column -->\\r\\n                          <ng-container matColumnDef=\\\"name\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef> Name </th>\\r\\n                            <td mat-cell *matCellDef=\\\"let element\\\">{{element.name}}</td>\\r\\n                          </ng-container>\\r\\n                        \\r\\n                          <!-- goals_description Column -->\\r\\n                          <ng-container matColumnDef=\\\"description\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef> Description </th>\\r\\n                            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.description}} </td>\\r\\n                          </ng-container>\\r\\n                    \\r\\n                          <!-- mearsu_weight Column -->\\r\\n                          <ng-container matColumnDef=\\\"mearsu_weight\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef fxHide fxShow.gt-sm> Mearsurement/Weightage </th>\\r\\n                            <td mat-cell *matCellDef=\\\"let element\\\" fxHide fxShow.gt-sm> {{element.measurement}}/{{element.weightage}} </td>\\r\\n                          </ng-container>\\r\\n                    \\r\\n                    \\r\\n                          <!-- Buttons Column -->\\r\\n                          <ng-container matColumnDef=\\\"buttons\\\">\\r\\n                              <th mat-header-cell *matHeaderCellDef>Actions</th>\\r\\n                              <td mat-cell *matCellDef=\\\"let element\\\"> \\r\\n                                 \\r\\n                               <button class=\\\"new_btn mr-lef\\\" (click)=\\\"editpopup('cvalue', element, 'assigned-appraisal-cycle/corporate-values/')\\\"><mat-icon>feedback</mat-icon></button>\\r\\n                               <button class=\\\"new_btn\\\" (click)=\\\"deleteItem('cvalue', element.id, 'assigned-appraisal-cycle/corporate-values/')\\\"><mat-icon>delete</mat-icon></button>\\r\\n                               \\r\\n                               \\r\\n                                \\r\\n                              </td>\\r\\n                            </ng-container>\\r\\n                    \\r\\n                    \\r\\n                         \\r\\n                        \\r\\n                          <tr mat-header-row *matHeaderRowDef=\\\"calValColumns\\\"></tr>\\r\\n                          <tr mat-row *matRowDef=\\\"let row; columns: calValColumns;\\\"></tr>\\r\\n                      </table>\\r\\n                  </div>\\r\\n\\r\\n                 \\r\\n                  \\r\\n\\r\\n              </div>\\r\\n            </form>\\r\\n     <!-- </mat-card> -->\\r\\n   </div>\\r\\n </div>\\r\\n\\r\\n \\r\\n\\r\\n \\r\\n             \\r\\n       \\r\\n   </div>\\r\\n </div>\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n#editemp {\\n  width: 384px;\\n  max-width: 384px;\\n  padding: 0px;\\n  text-align: center;\\n  background: #FFFFFF;\\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12); }\\n@media screen and (max-width: 599px) {\\n    #editemp {\\n      padding: 0px;\\n      width: 100%; } }\\n#editemp .logo {\\n    width: 128px;\\n    margin: 32px auto; }\\n#editemp .title {\\n    font-size: 12px;\\n    color: #ccc;\\n    margin: 16px 32px 32px 30px; }\\n#editemp form {\\n    width: 100%;\\n    text-align: left; }\\n#editemp form mat-form-field {\\n      width: 100%; }\\n#editemp form .submit-button {\\n      width: 220px;\\n      margin: 16px auto;\\n      display: block; }\\n@media screen and (max-width: 599px) {\\n        #editemp form .submit-button {\\n          width: 90%; } }\\n#editemp .login {\\n    margin: 32px auto 24px auto;\\n    width: 250px;\\n    font-weight: 500; }\\n#editemp .login .text {\\n      margin-right: 8px; }\\n.reset {\\n  display: block;\\n  width: 100%;\\n  left: 30%;\\n  float: left;\\n  position: relative; }\\n.editemp .mat-card {\\n  border: 1px solid #fa7915;\\n  border-radius: 10px; }\\n.editemp .mat-card-header {\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  background: #f2ab13;\\n  padding: 14px 0 0 0;\\n  border-radius: 10px;\\n  border-bottom-left-radius: 0px;\\n  border-bottom-right-radius: 0px; }\\n.editemp .mat-card-title {\\n  font-size: 20px;\\n  font-weight: 500; }\\n.editemp .mat-card-subtitle {\\n  font-size: 20px;\\n  color: #000; }\\n.editemp .mat-card-title, .editemp .mat-card-subtitle {\\n  margin-bottom: 5px; }\\n.editemp .mat-card-content {\\n  text-align: left;\\n  padding: 20px; }\\n.editemp .mat-card-content ul {\\n  list-style: none;\\n  margin: 0; }\\n.editemp .mat-card-content ul li {\\n  font-size: 18px;\\n  padding: 5px 0px; }\\n.editemp .mat-card-content ul li:before {\\n  font-weight: 100;\\n  margin-left: -1em;\\n  background-color: #fb7215;\\n  border-radius: 50%;\\n  content: \\\"\\\";\\n  display: inline-block;\\n  margin-right: 10px;\\n  margin-bottom: 2px;\\n  height: 8px;\\n  width: 8px; }\\n.editemp .free {\\n  width: 100%;\\n  display: block;\\n  float: left;\\n  padding: 20px; }\\n.editemp .paid {\\n  width: 60%;\\n  display: block;\\n  float: left;\\n  padding: 20px; }\\n.editemp .paid .left, .editemp .paid .right {\\n    width: 50%;\\n    display: block;\\n    float: left; }\\n.new_r {\\n  float: left;\\n  margin-left: 20px;\\n  margin-top: 20px !important; }\\ndiv.mat-horizontal-stepper-header-container {\\n  display: none !important; }\\n.rr_right {\\n  float: right; }\\n@media only screen and (max-width: 767px) {\\n  .editemp {\\n    margin: 0px !important; }\\n    .editemp .free, .editemp .paid, .editemp .left, .editemp .right {\\n      width: 100% !important; }\\n    .editemp .free .mat-card-content {\\n      height: 230px; }\\n    .editemp .paid .mat-card-content {\\n      height: 600px; } }\\n.example-headers-align .mat-expansion-panel-header-title,\\n.example-headers-align .mat-expansion-panel-header-description {\\n  flex-basis: 0; }\\n.example-headers-align .mat-expansion-panel-header-description {\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n  -webkit-box-align: center;\\n          align-items: center; }\\nmat-form-field {\\n  display: block !important; }\\n.mat-icon {\\n  height: 37px !important; }\\n.mt_i {\\n  font-size: 24px !important; }\\n.mat-expansion-panel-header {\\n  background-color: black !important;\\n  margin-bottom: 10px;\\n  border-radius: 11px; }\\n.mat-expansion-panel-content {\\n  background-color: white !important; }\\n.mat-expansion-panel:not([class*=mat-elevation-z]) {\\n  box-shadow: none !important; }\\n.mat-expansion-panel-header-title {\\n  color: white !important; }\\n.change_c {\\n  color: white !important;\\n  font-size: 44px; }\\n.lbl_cs {\\n  float: left; }\\n.mr_tp {\\n  margin-top: 15px;\\n  margin-right: 10px; }\\n.mr_last {\\n  margin-top: 15px; }\\n.example-button-row button,\\n.example-button-row a {\\n  margin-right: 8px; }\\n.example-button-row {\\n  text-align: center;\\n  margin-top: 10px; }\\n.ch_color {\\n  padding-top: 7px; }\\n.mat-form-field-appearance-outline .mat-form-field-infix {\\n  padding: 10px 0 10px 0 !important;\\n  margin-top: -10px !important; }\\n.sect_ion {\\n  margin-top: 20px;\\n  background-color: antiquewhite;\\n  padding: 13px;\\n  border-radius: 12px; }\\n.inp_change {\\n  height: 25px;\\n  width: 33px;\\n  background-color: white;\\n  margin-left: 20px;\\n  padding: 5px; }\\ntable {\\n  width: 100%; }\\n.page-layout.blank {\\n  min-height: 50%; }\\n.new_btn {\\n  height: 24px;\\n  width: 24px;\\n  background-color: #f49f14;\\n  border-radius: 50px;\\n  padding-top: 4px; }\\n.mr-lef {\\n  margin-right: 10px; }\\n.new_btn .mat-icon {\\n  height: 20px;\\n  width: 20px;\\n  font-size: 17px; }\\n.mr_ch {\\n  margin-top: 50px;\\n  height: 37px; }\\n.img_s {\\n  height: 25px;\\n  width: 25px;\\n  background-color: #f49f14;\\n  border-radius: 50px;\\n  margin-right: 6px; }\\n.set_height {\\n  max-height: 300px;\\n  overflow-y: scroll;\\n  margin-top: 10px; }\\n.mat-header-cell {\\n  font-size: 14px;\\n  font-weight: 500; }\\n.btn_new {\\n  background-color: #000;\\n  color: #FFFFFF;\\n  margin-left: 20px;\\n  margin-top: 20px;\\n  border-radius: 50px; }\\n.h_editEv {\\n  margin-top: -15px;\\n  box-shadow: 0px 6px 10px grey;\\n  padding: 8px; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators,FormControl} from '@angular/forms';\r\nimport { MatDialog } from '@angular/material';\r\nimport { EvaluationPopComponent } from './evaluation-pop/evaluation-pop.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ApiLoaderService } from '@fuse/services/api-loader.service';\r\nimport { ApiService } from '@fuse/services/api.service';\r\nimport * as moment from 'moment';\r\nimport { ToasterService } from '@fuse/services/toaster-service.service';\r\n\r\nexport interface PeriodicElement {\r\n  category: string;\r\n  goals: string;\r\n  goals_description: string;\r\n  mearsu_weight: string;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  {category: 'Marketing', goals: 'Sales Target', goals_description: 'To achieve $20,000 in Sale',mearsu_weight:'$/10%'},\r\n  {category: 'Marketing', goals: 'Sales Target', goals_description: 'To achieve $20,000 in Sale',mearsu_weight:'$/20%'},\r\n  {category: 'Marketing', goals: 'Sales Target', goals_description: 'To achieve $20,000 in Sale',mearsu_weight:'$/20%'},\r\n  {category: 'Marketing', goals: 'Sales Target', goals_description: 'To achieve $20,000 in Sale',mearsu_weight:'$/20%'},\r\n  {category: 'Marketing', goals: 'Sales Target', goals_description: 'To achieve $20,000 in Sale',mearsu_weight:'$/20%'},\r\n  {category: 'Marketing', goals: 'Sales Target', goals_description: 'To achieve $20,000 in Sale',mearsu_weight:'$/20%'},\r\n  {category: 'Marketing', goals: 'Sales Target', goals_description: 'To achieve $20,000 in Sale',mearsu_weight:'$/20%'},\r\n  {category: 'Marketing', goals: 'Sales Target', goals_description: 'To achieve $20,000 in Sale',mearsu_weight:'$/20%'},\r\n  {category: 'Marketing', goals: 'Sales Target', goals_description: 'To achieve $20,000 in Sale',mearsu_weight:'$/20%'},\r\n  {category: 'Marketing', goals: 'Sales Target', goals_description: 'To achieve $20,000 in Sale',mearsu_weight:'$/20%'},\r\n];\r\n\r\n\r\nexport interface PeriodicElement1 {\r\n  title: string;\r\n  skills_description: string;\r\n  level: string;\r\n}\r\n\r\nconst ELEMENT_DATA1: PeriodicElement1[] = [\r\n  {title: 'Communication', skills_description: 'Convey and exchange thoughts', level: '[Level 3]Negotiate with otherto address issues'},\r\n  {title: 'Marketing', skills_description: 'Convey and exchange thoughts', level: '[Level 3]Negotiate with otherto address issues'},\r\n  {title: 'Marketing', skills_description: 'Convey and exchange thoughts', level: '[Level 3]Negotiate with otherto address issues'},\r\n  {title: 'Marketing', skills_description: 'Convey and exchange thoughts', level: '[Level 3]Negotiate with otherto address issues'},\r\n  {title: 'Marketing', skills_description: 'Convey and exchange thoughts', level: '[Level 3]Negotiate with otherto address issues'},\r\n  {title: 'Marketing', skills_description: 'Convey and exchange thoughts', level: '[Level 3]Negotiate with otherto address issues'},\r\n  {title: 'Marketing', skills_description: 'Convey and exchange thoughts', level: '[Level 3]Negotiate with otherto address issues'},\r\n  {title: 'Marketing', skills_description: 'Convey and exchange thoughts', level: '[Level 3]Negotiate with otherto address issues'},\r\n  {title: 'Marketing', skills_description: 'Convey and exchange thoughts', level: '[Level 3]Negotiate with otherto address issues'},\r\n  {title: 'Marketing', skills_description: 'Convey and exchange thoughts', level: '[Level 3]Negotiate with otherto address issues'},\r\n];\r\n\r\n@Component({\r\n  selector: 'app-edit-evaluation',\r\n  templateUrl: './edit-evaluation.component.html',\r\n  styleUrls: ['./edit-evaluation.component.scss']\r\n})\r\nexport class EditEvaluationComponent implements OnInit {\r\n  \r\n  userFormData: any;\r\n  \r\n  goalColumns: string[] = ['category', 'name', 'description','mearsu_weight','buttons'];\r\n  calValColumns: string[] = [ 'name', 'description','mearsu_weight','buttons'];\r\n  skillColums: string[] = ['name','description','level','buttons'];\r\n\r\n  goals;\r\n  goalDataSource;\r\n\r\n  genericList;\r\n  genericDataSource;\r\n\r\n  techList;\r\n  techDataSource;\r\n\r\n  cvalList;\r\n  corValDataSource;\r\n\r\n  start;\r\n  end;\r\n  goal_weightage = '10';\r\n  generic_weightage = '56';\r\n  technical_weightage = '15';\r\n  corporate_weightage = '10';\r\n\r\n  isLinear = false;\r\n  firstFormGroup: FormGroup;\r\n  secondFormGroup: FormGroup;\r\n  options: FormGroup;\r\n  id;\r\n\r\n  dialogRef: any;\r\n\r\n  \r\n  constructor(private toast: ToasterService, private _formBuilder: FormBuilder,private apiService: ApiService, public dialog: MatDialog\r\n    , private apiloader: ApiLoaderService, private route: ActivatedRoute, private router: Router) {\r\n    this.route.params.subscribe(params => {\r\n      this.id = params['id'];\r\n      this.getUserPerForm(this.id);\r\n    });\r\n    this.options = _formBuilder.group({\r\n      hideRequired: false,\r\n      floatLabel: 'auto'\r\n    });\r\n  }\r\n\r\n  // For form validator\r\n  //email = new FormControl('', [Validators.required, Validators.email]);\r\n\r\n  // Sufix and prefix\r\n  hide = false;\r\n\r\n  // getErrorMessage() {\r\n  //   return this.email.hasError('required')\r\n  //     ? 'You must enter a value'\r\n  //     : this.email.hasError('email')\r\n  //       ? 'Not a valid email'\r\n  //       : '';\r\n  // }\r\n   \r\n  step = 1;\r\n\r\n  setStep(index: number) {\r\n    this.step = index;\r\n  }\r\n\r\n  // nextStep() {\r\n  //   this.step++;\r\n  // }\r\n\r\n  // prevStep() {\r\n  //   this.step--;\r\n  // }\r\n\r\n  ngOnInit() {\r\n    this.firstFormGroup = this._formBuilder.group({\r\n      firstCtrl: ['', Validators.required]\r\n    });\r\n    this.secondFormGroup = this._formBuilder.group({\r\n      secondCtrl: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  getUserPerForm(id) {\r\n    this.apiService.getData('employees-performance-forms/' + id).subscribe(response => {\r\n      if (response.status == 'success') {\r\n        this.userFormData = response.data;\r\n        this.goalDataSource = this.userFormData.goals;\r\n        this.genericDataSource = this.userFormData.genericSkills;\r\n        this.techDataSource = this.userFormData.technicalSkills;\r\n        this.corValDataSource = this.userFormData.corporateValues;\r\n        this.start = moment(this.userFormData.appraisal_period_start).format('DD MMM YYYY');\r\n        this.end = moment(this.userFormData.appraisal_period_end).format('DD MMM YYYY');\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteItem(type, id, url) {\r\n    this.apiloader.setLoader(true);\r\n    this.apiService.deleteData(url + id).subscribe(response => {\r\n      if (response.status == 'success') {\r\n        this.apiloader.setLoader(false);\r\n        if (type == 'goal') {\r\n          this.getUserPerForm(this.id);\r\n          this.toast.showSuccess('Goal deleted Successfully!.');\r\n        }\r\n        else if(type == 'cvalue') {\r\n          this.getUserPerForm(this.id);\r\n          this.toast.showSuccess('Corporate value deleted Successfully!.');\r\n        }\r\n        else {\r\n          this.getUserPerForm(this.id);\r\n          this.toast.showSuccess('Skill deleted Successfully!.');\r\n        }\r\n      }\r\n    }, error => {\r\n      this.apiloader.setLoader(false);\r\n      this.toast.showError(error);\r\n    });\r\n  }\r\n\r\n  editpopup(type, row, url) {\r\n      this.dialogRef = this.dialog.open(EvaluationPopComponent, {\r\n          panelClass : 'evaluation-pop-dialog',\r\n          data       : { modalType: type, details: row}\r\n      });\r\n\r\n      this.dialogRef.afterClosed().subscribe((response) => {\r\n          if ( !response ) {\r\n              return;\r\n          } else {\r\n            this.apiloader.setLoader(true);\r\n            this.apiService.postData(url + row.id, response).subscribe(res => {\r\n                if (res.status == 'success') {\r\n                  this.apiloader.setLoader(false);\r\n                  if (type == 'goal') {\r\n                    this.getUserPerForm(this.id);\r\n                    this.toast.showSuccess('Goal updated Successfully!.');\r\n                  }\r\n                  else if(type == 'cvalue') {\r\n                    this.getUserPerForm(this.id);\r\n                    this.toast.showSuccess('Corporate value updated Successfully!.');\r\n                  }\r\n                  else {\r\n                    this.getUserPerForm(this.id);\r\n                    this.toast.showSuccess('Skill updated Successfully!.');\r\n                  }\r\n                }\r\n            }, error => {\r\n              this.apiloader.setLoader(false);\r\n              this.toast.showError(error);\r\n            });\r\n          }\r\n      });\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"content mat-white-bg mat-elevation-z4\\\">\\r\\n    <div class=\\\"dialog-content-wrapper\\\">\\r\\n        <mat-toolbar matDialogTitle class=\\\"mat-accent m-0\\\">\\r\\n            <mat-toolbar-row fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n                <span class=\\\"title dialog-title\\\">{{dialogTitle}}</span>\\r\\n                <button mat-icon-button (click)=\\\"dialogRef.close()\\\" aria-label=\\\"Close dialog\\\">\\r\\n                    <mat-icon>close</mat-icon>\\r\\n                </button>\\r\\n            </mat-toolbar-row>\\r\\n        </mat-toolbar>\\r\\n\\r\\n        <div mat-dialog-content class=\\\"p-16 m-0\\\" fusePerfectScrollbar>\\r\\n\\r\\n\\r\\n            <!-- Start Goal & Corporate value Form -->\\r\\n            <form [formGroup]=\\\"editForm\\\">\\r\\n\\r\\n                <div fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\" fxLayout=\\\"column\\\"  *ngIf=\\\"data.modalType == 'goal'\\\">\\r\\n                    <mat-label class=\\\"label\\\">Category</mat-label>\\r\\n                    <mat-form-field appearance=\\\"outline\\\" fxFlex>\\r\\n                        <input formControlName=\\\"category\\\" matInput placeholder=\\\"Category\\\">\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n\\r\\n                <div fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\" fxLayout=\\\"column\\\">\\r\\n                    <mat-label class=\\\"label\\\">Name</mat-label>\\r\\n                    <mat-form-field appearance=\\\"outline\\\" fxFlex>\\r\\n                        <input formControlName=\\\"name\\\" matInput placeholder=\\\"Name\\\">\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n\\r\\n                <div fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\" fxLayout=\\\"column\\\">\\r\\n                    <mat-label class=\\\"label\\\">Description</mat-label>\\r\\n                    <mat-form-field appearance=\\\"outline\\\" fxFlex>\\r\\n                        <textarea formControlName=\\\"description\\\" matInput placeholder=\\\"Description\\\"\\r\\n                            matAutosizeMinRows=5 matAutosizeMaxRows=10></textarea>\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n                \\r\\n                <div fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\" fxLayout=\\\"column\\\" *ngIf=\\\"data.modalType == 'tskill' || data.modalType == 'gskill'\\\">\\r\\n                    <mat-label class=\\\"label\\\">Type</mat-label>\\r\\n                    <mat-form-field appearance=\\\"outline\\\" fxFlex>\\r\\n                        <input formControlName=\\\"type\\\" matInput placeholder=\\\"Type\\\" readonly>\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n\\r\\n\\r\\n                <div fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\" fxLayout=\\\"column\\\" *ngIf=\\\"data.modalType == 'tskill' || data.modalType == 'gskill'\\\">\\r\\n                    <mat-label class=\\\"label\\\">Expected Proficiency Level</mat-label>\\r\\n                    <mat-form-field appearance=\\\"outline\\\" fxFlex>\\r\\n                        <input formControlName=\\\"expected_proficiency_level\\\" matInput placeholder=\\\"Expected Proficiency Level\\\">\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n\\r\\n                <div fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\" fxLayout=\\\"column\\\" *ngIf=\\\"data.modalType == 'cvalue' || data.modalType == 'goal'\\\">\\r\\n                    <mat-label class=\\\"label\\\">Measurement</mat-label>\\r\\n                    <mat-form-field appearance=\\\"outline\\\" fxFlex>\\r\\n                        <mat-select formControlName=\\\"measurement\\\" placeholder=\\\"Measurement(Default)\\\">\\r\\n                            <mat-option value=\\\"$\\\">$</mat-option>\\r\\n                            <mat-option value=\\\"%\\\">%</mat-option>\\r\\n                            <mat-option value=\\\"number\\\">Number</mat-option>\\r\\n                        </mat-select>\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n\\r\\n                <div fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\" fxLayout=\\\"column\\\">\\r\\n                    <mat-label class=\\\"label\\\">Weightage</mat-label>\\r\\n                    <mat-form-field appearance=\\\"outline\\\" fxFlex>\\r\\n                        <input formControlName=\\\"weightage\\\" matInput placeholder=\\\"Weightage(Default)\\\">\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n\\r\\n                <div fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\" class=\\\"mr_bt\\\">\\r\\n                    <mat-label class=\\\"lbl_cs\\\"><b>My Achievement- by User</b></mat-label>\\r\\n                </div>\\r\\n\\r\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\" fxFlex>\\r\\n                        <textarea formControlName=\\\"user_comments\\\" matInput placeholder=\\\"This is example comment- user\\\"\\r\\n                            matAutosizeMinRows=5 matAutosizeMaxRows=10 readonly></textarea>\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n\\r\\n\\r\\n                <div fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\" class=\\\"mr_bt\\\">\\r\\n                    <mat-label class=\\\"lbl_cs\\\"><b>Comment by Manager Low</b></mat-label>\\r\\n                </div>\\r\\n\\r\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\" fxFlex>\\r\\n                        <input readonly formControlName=\\\"manager_low_rating\\\" matInput placeholder=\\\"My Performance Rating\\\">\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n\\r\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\" fxFlex>\\r\\n                        <textarea readonly formControlName=\\\"manager_low_comments\\\" matInput placeholder=\\\"My Achievement\\\"\\r\\n                            matAutosizeMinRows=5 matAutosizeMaxRows=10></textarea>\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n\\r\\n                <div fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\" class=\\\"mr_bt\\\">\\r\\n                    <mat-label class=\\\"lbl_cs\\\"><b>Comment by Manager High</b></mat-label>\\r\\n                </div>\\r\\n\\r\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\" fxFlex>\\r\\n                        <input readonly formControlName=\\\"manager_high_rating\\\" matInput placeholder=\\\"My Performance Rating\\\">\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n\\r\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\" fxFlex>\\r\\n                        <textarea readonly formControlName=\\\"manager_high_comments\\\" matInput placeholder=\\\"My Achievement\\\"\\r\\n                            matAutosizeMinRows=5 matAutosizeMaxRows=10></textarea>\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n\\r\\n            </form>\\r\\n\\r\\n            <!-- End Goals & Corporate Value Form -->\\r\\n\\r\\n\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div mat-dialog-actions class=\\\"m-0 p-16\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n\\r\\n            <button mat-raised-button class=\\\"save-button mat-accent\\\" (click)=\\\"response(editForm.value)\\\" aria-label=\\\"SAVE\\\">\\r\\n                Submit\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","module.exports = \".lbl_cs {\\n  color: #f49f14; }\\n\\n.mr_bt {\\n  margin-bottom: 10px; }\\n\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-evaluation-pop',\r\n  templateUrl: './evaluation-pop.component.html',\r\n  styleUrls: ['./evaluation-pop.component.scss']\r\n})\r\nexport class EvaluationPopComponent implements OnInit {\r\n\r\n  dialogTitle: string;\r\n  editgoal: FormGroup;\r\n  editForm: FormGroup;\r\n  action: string;\r\n  demoTitle:string;\r\n  id;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<EvaluationPopComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private formBuilder: FormBuilder\r\n  ) {\r\n    this.editForm = this.createContactForm();\r\n    if(data.modalType == \"goal\") {\r\n      this.dialogTitle = \"Goals\";\r\n      if (data.details) {\r\n        let formData = data.details;\r\n        this.id = formData.id;\r\n        this.editForm.patchValue({ category: formData.category, name: formData.name, description: formData.description,\r\n           measurement: formData.measurement, weightage: formData.weightage });\r\n        if (formData.review) {\r\n          this.editForm.patchValue({ user_comments: formData.review.user_comments, \r\n          manager_low_rating: formData.review.manager_low_rating , manager_high_rating: formData.review.manager_high_rating, \r\n          manager_low_comments: formData.review.manager_low_comments, manager_high_comments: formData.review.manager_high_comments });\r\n        }\r\n      }\r\n    } else if(data.modalType == \"cvalue\") {\r\n      this.dialogTitle = \"Corporate Value\";\r\n      if (data.details) {\r\n        let formData = data.details;\r\n        this.id = formData.id;\r\n        this.editForm.patchValue({ name: formData.name, description: formData.description,\r\n           measurement: formData.measurement, weightage: formData.weightage });\r\n           this.editForm.patchValue({ name: formData.name, description: formData.description,\r\n            expected_proficiency_level: formData.expected_proficiency_level });\r\n        if (formData.review) {\r\n          this.editForm.patchValue({ user_comments: formData.review.user_comments, \r\n            manager_low_rating: formData.review.manager_low_rating , manager_high_rating: formData.review.manager_high_rating, \r\n            manager_low_comments: formData.review.manager_low_comments, manager_high_comments: formData.review.manager_high_comments });\r\n        }\r\n      }\r\n    } else if(data.modalType == \"tskill\") {\r\n      this.dialogTitle = \"Technical Skill\";\r\n      this.editForm.patchValue({type: 'technical'});\r\n      if (data.details) {\r\n        let formData = data.details;\r\n        this.id = formData.id;\r\n        this.editForm.patchValue({ name: formData.name, description: formData.description,\r\n          expected_proficiency_level: formData.expected_proficiency_level, weightage: formData.weightage });\r\n          if (formData.review) {\r\n            this.editForm.patchValue({ user_comments: formData.review.user_comments, \r\n              manager_low_rating: formData.review.manager_low_rating , manager_high_rating: formData.review.manager_high_rating, \r\n              manager_low_comments: formData.review.manager_low_comments, manager_high_comments: formData.review.manager_high_comments });\r\n          }\r\n      }\r\n    } else {\r\n      this.dialogTitle = \"Generic Skill\";\r\n      this.editForm.patchValue({type: 'generic'});\r\n      if (data.details) {\r\n        let formData = data.details;\r\n        this.id = formData.id;\r\n        this.editForm.patchValue({ name: formData.name, description: formData.description,\r\n          expected_proficiency_level: formData.expected_proficiency_level, weightage: formData.weightage });\r\n          if (formData.review) {\r\n            this.editForm.patchValue({ user_comments: formData.review.user_comments, \r\n              manager_low_rating: formData.review.manager_low_rating , manager_high_rating: formData.review.manager_high_rating, \r\n              manager_low_comments: formData.review.manager_low_comments, manager_high_comments: formData.review.manager_high_comments });\r\n          }\r\n      }\r\n    }\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  createContactForm()\r\n    {\r\n        return this.formBuilder.group({\r\n            category          : [''],\r\n            type          : [''],\r\n            name          : [''],\r\n            description       : [''],\r\n            measurement           : [''],\r\n            weightage           : [''],\r\n            user_comments : [''],\r\n            manager_low_rating : [''],\r\n            manager_low_comments : [''],\r\n            manager_high_rating : [''],\r\n            manager_high_comments : [''],\r\n            expected_proficiency_level : [''],\r\n         });\r\n    }\r\n\r\n    response(formData){\r\n      delete formData.user_comments;\r\n      delete formData.manager_low_rating;\r\n      delete formData.manager_low_comments;\r\n      delete formData.manager_high_rating;\r\n      delete formData.manager_high_comments;\r\n\r\n      if(this.data.modalType == \"goal\") {\r\n        delete formData.type;\r\n        delete formData.expected_proficiency_level;\r\n      } else if(this.data.modalType == \"cvalue\") {\r\n        delete formData.category;\r\n        delete formData.type;\r\n        delete formData.expected_proficiency_level;\r\n      } else if(this.data.modalType == \"tskill\") {\r\n        delete formData.category;\r\n        delete formData.measurement;\r\n      } else {\r\n        delete formData.category;\r\n        delete formData.measurement;\r\n      }\r\n      this.dialogRef.close(formData);\r\n    }\r\n\r\n}\r\n","module.exports = \"<!-- HEADER -->\\r\\n<div class=\\\"header mat-accent-bg p-16 p-sm-24\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start start\\\" fxLayout.gt-xs=\\\"row\\\"\\r\\n  fxLayoutAlign.gt-xs=\\\"space-between center\\\">\\r\\n\\r\\n  <!-- APP TITLE -->\\r\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n    <div class=\\\"logo\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n      <!-- <mat-icon class=\\\"logo-icon mr-16\\\">settings</mat-icon> -->\\r\\n      <span class=\\\"logo-text h1\\\">Performance Evaluation Forms Library</span>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <!-- / APP TITLE -->\\r\\n</div>\\r\\n<!-- / HEADER -->\\r\\n\\r\\n<div class=\\\"performance m-16\\\">\\r\\n  <div class=\\\"free\\\">\\r\\n\\r\\n    <!-- ============================================================== -->\\r\\n    <!-- Card Grid-->\\r\\n    <!-- ============================================================== -->\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n\\r\\n      <div class=\\\"switch-toggle\\\">\\r\\n        Current <input type=\\\"checkbox\\\" (change)=\\\"onChange($event)\\\" id=\\\"switch\\\"><label for=\\\"switch\\\">Toggle</label>\\r\\n        Archive\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"search-container\\\">\\r\\n        <div class=\\\"search\\\">\\r\\n          <input class=\\\"search-click\\\" [(ngModel)]=\\\"query\\\" placeholder=\\\"Type here....\\\">\\r\\n          <button class=\\\"srch-btn\\\" (click)=\\\"onClick()\\\">Search</button>\\r\\n        </div>\\r\\n        <div class=\\\"filter\\\">\\r\\n          <button mat-raised-button [matMenuTriggerFor]=\\\"menu\\\"><img class=\\\"imgSize\\\"\\r\\n              src=\\\"assets/images/funnel.png\\\"></button>\\r\\n          <mat-menu #menu=\\\"matMenu\\\" class=\\\"mm_menu filter-menu\\\" xPosition=\\\"before\\\">\\r\\n            <button class=\\\"bg_c\\\" mat-menu-item>By Default Shorting (A>Z)</button>\\r\\n            <button mat-menu-item (click)=\\\"onClickName()\\\">Short By Name</button>\\r\\n            <button mat-menu-item (click)=\\\"onClickDepart()\\\">Short By Department</button>\\r\\n            <button mat-menu-item>Short By Status</button>\\r\\n          </mat-menu>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-md=\\\"100\\\" *ngIf=\\\"!chkToggle\\\" fxFlex=\\\"100\\\">\\r\\n\\r\\n      <div fxFlex.gt-sm=\\\"95\\\" fxFlex.gt-md=\\\"95\\\" fxFlex=\\\"100\\\" class=\\\"head_ing\\\">\\r\\n        <h4>Set Goal Setting Forms</h4>\\r\\n      </div>\\r\\n     \\r\\n                                   \\r\\n        <table mat-table [dataSource]=\\\"dataSource | searchFilter: 'performance-evaluation' : searstr\\\" class=\\\"mat-elevation-z8 radiusBottom\\\" >\\r\\n\\r\\n          <!-- setting_form Column -->\\r\\n          <ng-container matColumnDef=\\\"setting_form\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Name Of Goal Setting Forms </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{element.performance_name}}</td>\\r\\n          </ng-container>\\r\\n\\r\\n          <!-- Weight Column -->\\r\\n          <ng-container matColumnDef=\\\"user\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef fxHide fxShow.gt-sm> Users </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\" fxHide fxShow.gt-sm> {{element.first_name}} {{element.last_name}}\\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <!-- Symbol Column -->\\r\\n          <ng-container matColumnDef=\\\"department\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Department </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.department}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <!-- Symbol Column -->\\r\\n          <ng-container matColumnDef=\\\"rating\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef fxHide fxShow.gt-sm> Rating </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\" fxHide fxShow.gt-sm> {{element.rating}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n\\r\\n          <!-- Buttons Column -->\\r\\n          <ng-container matColumnDef=\\\"buttons\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef>Actions</th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n              <button class=\\\"new_btn mr-lef\\\" (click)=\\\"editEvaluation(element.id)\\\">\\r\\n                <mat-icon>edit</mat-icon>\\r\\n              </button>\\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n        </table>\\r\\n\\r\\n      </div>\\r\\n\\r\\n      <ng-container *ngIf=\\\"chkToggle\\\">\\r\\n\\r\\n      </ng-container>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n@media screen and (max-width: 599px) {\\n  :host .header {\\n    padding: 16px; } }\\n:host .header .search {\\n  position: relative;\\n  max-width: 780px; }\\n:host .header .search .search-icon {\\n    margin: 0 -24px 0 0; }\\n:host .header .search .search-input {\\n    padding: 0 0 0 48px;\\n    background: none;\\n    font-size: 24px;\\n    line-height: 48px;\\n    height: 48px;\\n    color: #FFFFFF;\\n    border-bottom: 2px solid rgba(255, 255, 255, 0.3);\\n    -webkit-transition: border-color 300ms ease;\\n    transition: border-color 300ms ease; }\\n:host .header .search .search-input:focus {\\n      border-color: white; }\\n:host .header .search .search-input::-webkit-input-placeholder {\\n      color: #FFFFFF; }\\n:host .content .result-info {\\n  padding-bottom: 16px;\\n  border-bottom: 1px solid rgba(0, 0, 0, 0.12); }\\n:host .content .result-info .mat-title {\\n    padding-right: 8px; }\\n@media screen and (max-width: 599px) {\\n    :host .content .result-info .pager {\\n      margin-top: 16px; } }\\n:host .content .result-info .pager .page-info {\\n    font-weight: 500;\\n    margin: 0 8px 0 0; }\\n:host .content .simple-pagination {\\n  margin: 32px 0; }\\n.switch-toggle {\\n  display: -webkit-box;\\n  display: flex;\\n  margin-left: 25px;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  -webkit-box-align: center;\\n          align-items: center; }\\ninput[type=checkbox] {\\n  height: 0;\\n  width: 0;\\n  visibility: hidden; }\\nlabel {\\n  cursor: pointer;\\n  text-indent: -9999px;\\n  width: 90px;\\n  height: 30px;\\n  background: #ccc;\\n  display: block;\\n  border-radius: 100px;\\n  position: relative;\\n  margin: 0px 10px; }\\nlabel:after {\\n  content: '';\\n  position: absolute;\\n  top: 0px;\\n  left: 0px;\\n  width: 50px;\\n  height: 30px;\\n  background: #f2ab13;\\n  border-radius: 50px;\\n  -webkit-transition: 0.3s;\\n  transition: 0.3s; }\\ninput:checked + label {\\n  background: #ccc; }\\ninput:checked + label:after {\\n  left: calc(100% - 0px);\\n  -webkit-transform: translateX(-100%);\\n          transform: translateX(-100%); }\\nlabel:active:after {\\n  width: 50px; }\\n.search-container {\\n  display: -webkit-box;\\n  display: flex;\\n  padding: 20px;\\n  flex-basis: 100%;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n  -webkit-box-align: center;\\n          align-items: center;\\n  flex-wrap: wrap; }\\n.search-container .search {\\n    display: -webkit-box;\\n    display: flex;\\n    flex-basis: 90%; }\\n.search-container .search .search-click {\\n      padding: 10px 20px;\\n      font-size: 17px;\\n      border: 1px solid grey;\\n      float: left;\\n      display: -webkit-box;\\n      display: flex;\\n      background: #ffffff;\\n      flex-basis: 90%;\\n      border-top-left-radius: 20px;\\n      border-bottom-left-radius: 20px; }\\n.search-container .search .srch-btn {\\n      padding: 10px 20px;\\n      background: #ccc;\\n      color: white;\\n      display: -webkit-box;\\n      display: flex;\\n      font-size: 17px;\\n      border: 1px solid grey;\\n      border-left: none;\\n      cursor: pointer;\\n      flex-basis: 10%;\\n      position: relative;\\n      right: 20px;\\n      border-radius: 20px; }\\n.search-container .filter {\\n    display: -webkit-box;\\n    display: flex;\\n    flex-basis: 10%;\\n    -webkit-box-align: center;\\n            align-items: center; }\\n@media only screen and (max-width: 767px) {\\n      .search-container .filter {\\n        padding: 20px 0px 0px 0px; } }\\ntable {\\n  width: 95%;\\n  margin: 0px 2% 10px 2%; }\\n.page-layout.blank {\\n  min-height: 50%; }\\n.new_btn {\\n  height: 24px;\\n  width: 24px;\\n  background-color: #f49f14;\\n  border-radius: 50px;\\n  cursor: pointer;\\n  padding-top: 4px; }\\n.mr-lef {\\n  margin-right: 10px; }\\n.new_btn .mat-icon {\\n  height: 20px;\\n  width: 20px;\\n  font-size: 17px; }\\n.mr_ch {\\n  margin-top: 50px;\\n  height: 37px; }\\n.img_s {\\n  height: 25px;\\n  width: 25px;\\n  background-color: #f49f14;\\n  border-radius: 50px;\\n  margin-right: 6px; }\\n.sl_toggle {\\n  margin-left: 22px; }\\n.inp_change {\\n  height: 50px;\\n  width: 100%;\\n  background-color: white;\\n  margin-left: 20px;\\n  padding: 5px; }\\n.head_ing {\\n  margin: 0 2%;\\n  background-color: black;\\n  border-top-right-radius: 10px;\\n  border-top-left-radius: 10px; }\\n.head_ing h4 {\\n  color: white;\\n  padding: 12px 12px 12px 22px;\\n  margin: 0px 0; }\\n.radiusBottom {\\n  border-bottom-right-radius: 10px;\\n  border-bottom-left-radius: 10px; }\\n.change_se {\\n  width: 98%;\\n  border: 1px ridge grey;\\n  height: 46px;\\n  margin-bottom: 20px;\\n  margin-top: 20px;\\n  border-radius: 50px;\\n  background-color: white; }\\n.change_bnt {\\n  height: 44px;\\n  width: 13%;\\n  border-radius: 50px; }\\n.txt_search {\\n  width: 87%;\\n  padding-left: 15px; }\\n.change_se ::ng-deep .mat-form-field-underline {\\n  height: 0px !important; }\\n.mr_top {\\n  margin-top: 20px; }\\n.imgSize {\\n  width: 20px;\\n  height: 20px; }\\n.bg_c {\\n  background-color: bisque;\\n  margin-top: -8px; }\\n@media only screen and (min-width: 320px) and (max-width: 320px) {\\n  .txt_search {\\n    width: 70%;\\n    padding-left: 15px; } }\\n@media only screen and (max-width: 360px) {\\n  .txt_search {\\n    width: 70%;\\n    padding-left: 15px; } }\\n@media only screen and (max-width: 411px) {\\n  .txt_search {\\n    width: 74%;\\n    padding-left: 15px; } }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ApiLoaderService } from '@fuse/services/api-loader.service';\r\nimport { ApiService } from '@fuse/services/api.service';\r\n\r\nexport interface PeriodicElement {\r\n  setting_form: string;\r\n  user: string;\r\n  department: string;\r\n  rating: string;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  {setting_form: 'Annual Performance 2019', user: 'Employee 1',department:'Sales Manager', rating: 'Team Leader'},\r\n  {setting_form: 'Annual Performance 2019', user: 'Employee 1', department:'Research Manager',rating: 'Team Leader'},\r\n  {setting_form: 'Annual Performance 2019', user: 'Employee 1', department:'Research Manager',rating: 'Team Leader'},\r\n  {setting_form: 'Annual Review 2019', user: 'Employee 1', department:'Research Manager',rating: 'Team Leader'},\r\n  {setting_form: 'Annual Review 2019', user: 'Employee 1',department:'Research Manager', rating: 'Team Leader'},\r\n  {setting_form: 'Annual Review 2019', user: 'Employee 1', department:'Research Manager',rating: 'Team Leader'},\r\n  {setting_form: 'Annual Review 2019', user: 'Employee 1', department:'Research Manager',rating: 'Team Leader'},\r\n  {setting_form: 'Annual Review 2019', user: 'Employee 1',department:'Research Manager',rating: 'Team Leader'},\r\n  {setting_form: 'Annual Review 2019', user: 'Employee 1',department:'Research Manager', rating: 'Team Leader',},\r\n  {setting_form: 'Annual Review 2019', user: 'Employee 1', department:'Research Manager',rating: 'Team Leader',},\r\n];\r\n\r\n@Component({\r\n  selector: 'app-performance-evaluation',\r\n  templateUrl: './performance-evaluation.component.html',\r\n  styleUrls: ['./performance-evaluation.component.scss']\r\n})\r\nexport class PerformanceEvaluationComponent implements OnInit {\r\n  query: string;\r\n  searstr: string;\r\n  order:boolean = false;\r\n  displayedColumns: string[] = ['setting_form', 'user', 'department','rating','buttons'];\r\n\r\n  //dataSource = ELEMENT_DATA;\r\n  dataSource:Array<{first_name: string,last_name: string,performance_name: string,department: string,id: any }> = [];\r\n  chkToggle:boolean = false;\r\n\r\n \r\n\r\n  constructor( private router: Router,  private apiloader: ApiLoaderService,  private apiService: ApiService) { }\r\n\r\n  ngOnInit() {\r\n    this.getAllPer();\r\n  }\r\n \r\n  onClick(){\r\n    this.searstr=this.query;\r\n  }\r\n\r\n  onClickName(){\r\n    let data1 = this.dataSource;\r\n    this.dataSource = [];\r\n\r\n    this.order = !this.order;\r\n     data1.sort((n1,n2) => {       \r\n      return (this.order)? n1.performance_name.localeCompare(n2.performance_name):n2.performance_name.localeCompare(n1.performance_name);\r\n    });\r\n    this.dataSource = data1;\r\n    console.log(this.dataSource);\r\n  }\r\n  \r\n\r\n  getAllPer() {\r\n    this.apiloader.setLoader(true);\r\n    const id = sessionStorage.getItem('client_id');        \r\n        this.apiService.getData('employees-performance-forms').subscribe(response => {\r\n            if (response.data){                \r\n                this.apiloader.setLoader(false);\r\n                const data = response.data;\r\n                this.dataSource = data;\r\n            }\r\n        }, error => {\r\n          this.apiloader.setLoader(false);\r\n        });\r\n  }\r\n\r\n\r\n  onChange(e) {\r\n    this.chkToggle = e.target.checked;\r\n   }\r\n\r\n     /**\r\n     * Edit Evaluation\r\n     */\r\n    editEvaluation(id)\r\n    {\r\n        this.router.navigate(['/apps/performance/performance-evaluation/edit-evaluation', id]);\r\n    }\r\n\r\n}\r\n","module.exports = \"<div id=\\\"contacts\\\" class=\\\"page-layout simple left-sidenav inner-sidenav\\\">\\r\\n  <div class=\\\"header mat-accent-bg p-16 p-sm-24\\\" fxLayout=\\\"row\\\" \\r\\n    fxLayoutAlign=\\\"space-between center\\\">\\r\\n    <div class=\\\"title\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n      <div class=\\\"logo\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n        <mat-icon class=\\\"logo-icon mr-16\\\" *fuseIfOnDom [@animate]=\\\"{value:'*',params:{delay:'50ms',scale:'0.2'}}\\\">\\r\\n          perm_identity</mat-icon>\\r\\n        <span class=\\\"logo-text h1\\\" *fuseIfOnDom [@animate]=\\\"{value:'*',params:{delay:'100ms',x:'-25px'}}\\\">Performance\\r\\n          Management Form</span>\\r\\n      </div>\\r\\n    </div>\\r\\n    <button mat-fab routerLink=\\\"form-library\\\" class=\\\"fab-add\\\" *fuseIfOnDom [@animate]=\\\"{value:'*', params:{delay:'300ms',scale:'.2'}}\\\">\\r\\n      <mat-icon>add</mat-icon>\\r\\n    </button>\\r\\n  </div>\\r\\n  <mat-sidenav-container>\\r\\n    <div class=\\\"center p-24 pb-56\\\" fusePerfectScrollbar>\\r\\n        <div class=\\\"search-container\\\">        \\r\\n            <div class=\\\"search\\\">\\r\\n                <input class=\\\"search-click\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"query\\\" placeholder=\\\"Type here....\\\">\\r\\n                <button class=\\\"srch-btn\\\"  (click)=\\\"onClick()\\\">Search</button>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n        <div fxFlex.gt-sm=\\\"95\\\" fxFlex.gt-md=\\\"95\\\" fxFlex=\\\"100\\\" class=\\\"head_ing\\\">\\r\\n            <h4>Set Goal Setting Forms</h4>\\r\\n        </div>\\r\\n\\r\\n        <div fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\">\\r\\n      \\r\\n            <table mat-table [dataSource]=\\\"dataSource | searchFilter: 'performance-management' : searstr\\\" class=\\\"mat-elevation-z8 radiusBottom\\\">\\r\\n        \\r\\n              <!-- setting_form Column -->\\r\\n              <ng-container matColumnDef=\\\"name\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Name Of Goal Setting Forms </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element\\\">{{element.name}}</td>\\r\\n              </ng-container>\\r\\n            \\r\\n              <!-- Weight Column -->\\r\\n              <ng-container matColumnDef=\\\"industry\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef fxHide fxShow.gt-sm> Industry </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element\\\" fxHide fxShow.gt-sm> {{element.industry.name}} </td>\\r\\n              </ng-container>\\r\\n            \\r\\n              <!-- Symbol Column -->\\r\\n              <ng-container matColumnDef=\\\"job_role\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef fxHide fxShow.gt-sm> Job Role </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element\\\" fxHide fxShow.gt-sm> {{element.job_role.name}} </td>\\r\\n              </ng-container>        \\r\\n         \\r\\n              <!-- Buttons Column -->\\r\\n              <ng-container matColumnDef=\\\"buttons\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef>Actions</th>\\r\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> \\r\\n                   <button class=\\\"new_btn mr-lef\\\" routerLink=\\\"form-library/{{element.id}}\\\"><mat-icon>edit</mat-icon></button>\\r\\n                   <button class=\\\"new_btn\\\" (click)=\\\"deleteForm(element.id)\\\"><mat-icon>delete</mat-icon></button>\\r\\n                   </td>\\r\\n               </ng-container>\\r\\n            \\r\\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n            </table>\\r\\n            </div>\\r\\n    </div>\\r\\n  </mat-sidenav-container>\\r\\n\\r\\n</div>\"","module.exports = \".search-container {\\n  display: -webkit-box;\\n  display: flex;\\n  padding: 20px;\\n  flex-basis: 100%;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n  -webkit-box-align: center;\\n          align-items: center;\\n  flex-wrap: wrap; }\\n  @media screen and (max-width: 767px) {\\n    .search-container {\\n      padding: 10px; } }\\n  .search-container .search {\\n    display: -webkit-box;\\n    display: flex;\\n    flex-basis: 90%; }\\n  .search-container .search .search-click {\\n      padding: 10px 20px;\\n      font-size: 17px;\\n      border: 1px solid grey;\\n      float: left;\\n      display: -webkit-box;\\n      display: flex;\\n      background: #ffffff;\\n      flex-basis: 90%;\\n      border-top-left-radius: 20px;\\n      border-bottom-left-radius: 20px; }\\n  .search-container .search .srch-btn {\\n      padding: 10px 20px;\\n      background: #ccc;\\n      color: white;\\n      display: -webkit-box;\\n      display: flex;\\n      font-size: 17px;\\n      border: 1px solid grey;\\n      border-left: none;\\n      cursor: pointer;\\n      flex-basis: 10%;\\n      position: relative;\\n      right: 20px;\\n      border-radius: 20px; }\\n  @media screen and (max-width: 767px) {\\n        .search-container .search .srch-btn {\\n          right: 40px; } }\\n  .head_ing {\\n  margin: 0 2%;\\n  background-color: black;\\n  border-top-right-radius: 10px;\\n  border-top-left-radius: 10px; }\\n  .head_ing h4 {\\n  color: white;\\n  padding: 12px 12px 12px 22px;\\n  margin: 0px 0; }\\n  table {\\n  width: 96%;\\n  margin: 0px 2% 10px 2%; }\\n  table .new_btn {\\n    height: 24px;\\n    width: 24px;\\n    background-color: #f49f14;\\n    border-radius: 50px;\\n    cursor: pointer;\\n    padding-top: 4px; }\\n  table .new_btn .mat-icon {\\n      height: 20px;\\n      width: 20px;\\n      font-size: 17px; }\\n  table .mr-lef {\\n    margin-right: 10px; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { ApiLoaderService } from '@fuse/services/api-loader.service';\r\nimport { ApiService } from '@fuse/services/api.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToasterService } from '@fuse/services/toaster-service.service';\r\n\r\n@Component({\r\n  selector: 'app-performance-management',\r\n  templateUrl: './performance-management.component.html',\r\n  styleUrls: ['./performance-management.component.scss'],\r\n  animations   : fuseAnimations\r\n})\r\nexport class PerformanceManagementComponent implements OnInit {\r\n  query: string;\r\n  searstr:string;\r\n  displayedColumns: string[] = ['name','industry','job_role','buttons'];\r\n  dataSource;\r\n\r\n  constructor(private toast: ToasterService, private apiService: ApiService, private apiloader: ApiLoaderService) { }\r\n\r\n  ngOnInit() {\r\n    this.getForms();\r\n  }\r\n  onClick(){\r\n    this.searstr=this.query;\r\n  }\r\n  getForms() {\r\n    this.apiloader.setLoader(true);\r\n    this.apiService.getData('goal-setting-form').subscribe(response => {\r\n        if (response.status == 'success') {\r\n          this.apiloader.setLoader(false);\r\n          this.dataSource = response.data;\r\n        }\r\n    }, error => this.apiloader.setLoader(false));\r\n  }\r\n\r\n  deleteForm(formId) {\r\n    this.apiloader.setLoader(true);\r\n    this.apiService.deleteData('goal-setting-form/' + formId).subscribe(response => {\r\n      if (response.status == 'success') {\r\n        this.apiloader.setLoader(false);\r\n        this.getForms();\r\n        this.toast.showSuccess('Goal Setting Form Deleted Successfully!.');\r\n      }\r\n    }, error => {\r\n      this.apiloader.setLoader(false);\r\n      this.toast.showError(error);\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"<!-- HEADER -->\\r\\n<div class=\\\"header mat-accent-bg p-16 p-sm-24\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start start\\\" fxLayout.gt-xs=\\\"row\\\"\\r\\n  fxLayoutAlign.gt-xs=\\\"space-between center\\\">\\r\\n\\r\\n  <!-- APP TITLE -->\\r\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n    <div class=\\\"logo\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n      <!-- <mat-icon class=\\\"logo-icon mr-16\\\">settings</mat-icon> -->\\r\\n      <span class=\\\"logo-text h1\\\">Performance Management Setting Up</span>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n  <!-- / APP TITLE -->\\r\\n</div>\\r\\n<!-- / HEADER -->\\r\\n\\r\\n<div class=\\\"performance m-16\\\">\\r\\n  <div class=\\\"free\\\">\\r\\n\\r\\n    <!-- ============================================================== -->\\r\\n    <!-- Card Grid-->\\r\\n    <!-- ============================================================== -->\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex.gt-sm=\\\"100\\\" fxFlex=\\\"100\\\">\\r\\n\\r\\n        <div fxFlex.gt-sm=\\\"95\\\" fxFlex.gt-md=\\\"95\\\" fxFlex=\\\"100\\\" class=\\\"head_ing\\\">\\r\\n          <h4>Select Employees</h4>\\r\\n        </div>\\r\\n\\r\\n        <mat-card xFlex.gt-sm=\\\"95\\\" fxFlex.gt-md=\\\"95\\\" fxFlex=\\\"100\\\" class=\\\"mm_leftCard\\\">\\r\\n          <div fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\" class=\\\"mr_top\\\">\\r\\n            <mat-radio-group aria-label=\\\"Select an option\\\" [(ngModel)]=\\\"selectionOption\\\">\\r\\n              <mat-radio-button class=\\\"w_idth\\\" name=\\\"AddList\\\" value=\\\"1\\\">Add by List</mat-radio-button>\\r\\n              <mat-radio-button class=\\\"w_idth\\\" name=\\\"BulkList\\\" value=\\\"2\\\">Bulk Upload List</mat-radio-button>\\r\\n            </mat-radio-group>\\r\\n          </div>\\r\\n          <div xFlex.gt-sm=\\\"95\\\" fxFlex.gt-md=\\\"95\\\" fxFlex=\\\"100\\\" class=\\\"mm_leftCard bulk-upload\\\"\\r\\n            *ngIf=\\\"selectionOption == '2'\\\">\\r\\n            <div class=\\\"upload\\\">\\r\\n              <form>\\r\\n                <span style=\\\"color: #949090; padding-right: 5px;\\\"> Upload File : </span>\\r\\n                <label class=\\\"file\\\">\\r\\n                  <input type=\\\"file\\\" id=\\\"file\\\" ng2FileSelect aria-label=\\\"File browser example\\\" />\\r\\n                  <span class=\\\"file-custom\\\"></span>\\r\\n                </label>\\r\\n              </form>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-card>\\r\\n\\r\\n        <div xFlex.gt-sm=\\\"95\\\" fxFlex.gt-md=\\\"95\\\" fxFlex=\\\"100\\\" class=\\\"mm_leftCard\\\" *ngIf=\\\"selectionOption == '1'\\\">\\r\\n          <mat-form-field class=\\\"example-chip-list mat_w\\\">\\r\\n            <mat-chip-list #chipList aria-label=\\\"Fruit selection\\\">\\r\\n              <mat-chip *ngFor=\\\"let fruit of fruits\\\" [selectable]=\\\"selectable\\\" [removable]=\\\"removable\\\"\\r\\n                (removed)=\\\"remove(fruit)\\\">\\r\\n                {{fruit.name}}\\r\\n                <mat-icon matChipRemove *ngIf=\\\"removable\\\">cancel</mat-icon>\\r\\n              </mat-chip>\\r\\n              <input placeholder=\\\"Search User...\\\" #fruitInput [formControl]=\\\"fruitCtrl\\\" [matAutocomplete]=\\\"auto\\\"\\r\\n                [matChipInputFor]=\\\"chipList\\\" [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\"\\r\\n                [matChipInputAddOnBlur]=\\\"addOnBlur\\\" (matChipInputTokenEnd)=\\\"add($event)\\\">\\r\\n            </mat-chip-list>\\r\\n            <mat-autocomplete #auto=\\\"matAutocomplete\\\" (optionSelected)=\\\"selected($event)\\\">\\r\\n              <mat-option *ngFor=\\\"let fruit of filteredFruits | async\\\" [value]=\\\"fruit\\\">\\r\\n                {{fruit.name}}\\r\\n              </mat-option>\\r\\n            </mat-autocomplete>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n        <div class=\\\"download\\\">\\r\\n          Download File : <span style=\\\"padding-left: 10px\\\"> <strong> Download Template </strong></span> <i\\r\\n            class=\\\"fa fa-download\\\"></i>\\r\\n        </div>\\r\\n\\r\\n        <div fxFlex.gt-sm=\\\"95\\\" fxFlex.gt-md=\\\"95\\\" fxFlex=\\\"100\\\" class=\\\"head_ing1\\\">\\r\\n          <h4>Select Goal Form</h4>\\r\\n        </div>\\r\\n\\r\\n        <!-- <div class=\\\"title\\\">\\r\\n           <div class=\\\"left\\\">\\r\\n              <h4>Select Goal Form</h4>\\r\\n           </div>\\r\\n           <div class=\\\"right\\\">+</div>\\r\\n         </div> -->\\r\\n\\r\\n        <div fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-md=\\\"100\\\" fxFlex=\\\"100\\\">\\r\\n          <mat-card xFlex.gt-sm=\\\"95\\\" fxFlex.gt-md=\\\"95\\\" fxFlex=\\\"100\\\" class=\\\"mm_leftCard\\\">\\r\\n            <div class=\\\"data\\\">\\r\\n              <div class=\\\"change_se\\\">\\r\\n                <input class=\\\"txt_search\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"query\\\" placeholder=\\\"Type here....\\\">\\r\\n                <button class=\\\"change_bnt\\\">\\r\\n                  <mat-icon>search</mat-icon>\\r\\n                </button>\\r\\n              </div>\\r\\n              <div class=\\\"search-content\\\">\\r\\n                <mat-radio-group aria-label=\\\"Select an option\\\"  [(ngModel)]=\\\"enrollmentForm\\\">\\r\\n                  <mat-radio-button class=\\\"srchrdio\\\" [value]=\\\"eachVal.id\\\" *ngFor=\\\"let eachVal of totalGoals | searchFilter: 'form-library' : query\\\">\\r\\n                    {{eachVal.name}}</mat-radio-button>\\r\\n                </mat-radio-group>\\r\\n              </div>\\r\\n            </div>\\r\\n          </mat-card>\\r\\n        </div>\\r\\n        <!-- <div class=\\\"change_se\\\">\\r\\n              <input class=\\\"txt_search\\\" placeholder=\\\"Type here....\\\">\\r\\n              <button class=\\\"change_bnt\\\"><mat-icon>search</mat-icon></button>\\r\\n          </div> -->\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class = \\\"text-center\\\">\\r\\n  <button mat-raised-button (click)=\\\"onSubmit()\\\" color=\\\"primary\\\">Save & Confirm</button>\\r\\n</div>\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n.head_ing {\\n  margin: 0 2%;\\n  background-color: black; }\\n.head_ing h4 {\\n  color: white;\\n  padding: 12px 12px 12px 22px;\\n  margin: 0px 0; }\\n.mr_top {\\n  margin: 20px 3% 10px 3%; }\\n.mr_top1 {\\n  margin: 20px 0px 10px 0px; }\\n.w_idth {\\n  width: 50%;\\n  padding: 10px; }\\n.mat_w {\\n  width: 100%; }\\n.mat_w ::ng-deep .mat-form-field-infix {\\n    margin: 10px; }\\n.download {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-pack: end;\\n          justify-content: flex-end;\\n  padding-right: 4%;\\n  margin-top: 15px; }\\n.download i {\\n    font-size: 20px;\\n    color: #000;\\n    padding-left: 10px; }\\n.mat_w::ng-deep .mat-form-field-flex {\\n  background: antiquewhite; }\\n.head_ing1 {\\n  margin: 10px 2% 0 2%;\\n  background-color: black; }\\n.head_ing1 h4 {\\n  color: white;\\n  padding: 12px 12px 12px 22px;\\n  margin: 0px 0; }\\n.data {\\n  padding: 13px; }\\n.change_se {\\n  border-radius: 20px;\\n  padding: 6px;\\n  height: 36px;\\n  width: 300px;\\n  border: 1px ridge gray;\\n  display: -webkit-box;\\n  display: flex; }\\n.txt_search {\\n  width: 90%;\\n  padding: 10px; }\\n.mm_left {\\n  margin-left: 10px; }\\n.mm_leftCard {\\n  margin: 0px 2.1%; }\\n.mat-card {\\n  padding: 0px !important; }\\n::-webkit-input-placeholder {\\n  /* Chrome/Opera/Safari */\\n  padding: 10px; }\\n.search-content {\\n  padding: 15px 0px; }\\n.search-content .srchrdio {\\n    display: block;\\n    padding-bottom: 10px; }\\n.bulk-upload {\\n  padding-bottom: 20px; }\\n.bulk-upload .bulk-upload i {\\n    color: #000; }\\n.bulk-upload .bulk-upload .download, .bulk-upload .bulk-upload .upload {\\n    font-size: 18px;\\n    padding: 15px 0px; }\\n.bulk-upload .download i {\\n    padding-left: 10px;\\n    font-size: 20px; }\\n.bulk-upload .file {\\n    position: relative;\\n    display: inline-block;\\n    cursor: pointer;\\n    height: 2.5rem;\\n    width: 400px; }\\n@media only screen and (max-width: 767px) {\\n      .bulk-upload .file {\\n        width: 320px;\\n        margin: 15px 0px; } }\\n.bulk-upload input {\\n    min-width: 14rem;\\n    margin: 0;\\n    filter: alpha(opacity=0);\\n    opacity: 0; }\\n.bulk-upload .file-custom {\\n    position: absolute;\\n    top: -5px;\\n    right: 0;\\n    left: 0;\\n    z-index: 5;\\n    font-size: 16px;\\n    height: 40px;\\n    padding: .5rem 1rem;\\n    line-height: 1.7;\\n    color: #555;\\n    background-color: antiquewhite;\\n    border: .075rem solid #ddd;\\n    border-radius: .25rem;\\n    box-shadow: inset 0 0.2rem 0.4rem rgba(0, 0, 0, 0.05);\\n    -webkit-user-select: none;\\n    -moz-user-select: none;\\n    -ms-user-select: none;\\n    user-select: none; }\\n@media only screen and (max-width: 767px) {\\n      .bulk-upload .file-custom {\\n        top: -10px; } }\\n.bulk-upload span.file-custom:before {\\n    position: absolute;\\n    top: -.075rem;\\n    right: -.075rem;\\n    bottom: -.075rem;\\n    z-index: 6;\\n    font-size: 18px;\\n    display: block;\\n    content: \\\"Choose a File\\\";\\n    height: 40px;\\n    padding: .5rem 1rem;\\n    line-height: 1.5;\\n    color: #000;\\n    background: #F57D3F;\\n    border: .075rem solid #ddd;\\n    border-radius: 0 .25rem .25rem 0; }\\n.bulk-upload .file-history {\\n    width: 100%;\\n    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); }\\n.bulk-upload .file-history th.mat-header-cell {\\n    background: #f57d3f;\\n    font-size: 14px;\\n    font-weight: bold;\\n    color: #000; }\\n.bulk-upload .upload button {\\n    margin-left: 10px;\\n    background-color: #006b48 !important; }\\n@media only screen and (max-width: 767px) {\\n      .bulk-upload .upload button {\\n        margin-left: 0px; } }\\n.bulk-upload .set_height {\\n    overflow-y: scroll; }\\n\"","import { COMMA, ENTER } from '@angular/cdk/keycodes';\r\nimport { Component, OnInit, ElementRef, ViewChild, EventEmitter } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { MatAutocompleteSelectedEvent, MatAutocomplete } from '@angular/material/autocomplete';\r\nimport { MatChipInputEvent } from '@angular/material/chips';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { ApiLoaderService } from '@fuse/services/api-loader.service';\r\nimport { ApiService } from '@fuse/services/api.service';\r\nimport { ToasterService } from '@fuse/services/toaster-service.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-performance-setting',\r\n  templateUrl: './performance-setting.component.html',\r\n  styleUrls: ['./performance-setting.component.scss']\r\n})\r\nexport class PerformanceSettingComponent implements OnInit {\r\n  query: string;\r\n  dataSource: any;\r\n  userType: string;\r\n  visible = true;\r\n  selectable = true;\r\n  removable = true;\r\n  addOnBlur = true;\r\n  separatorKeysCodes: number[] = [ENTER, COMMA];\r\n  totalGoals;\r\n  enrollmentForm = '';\r\n  fruitCtrl = new FormControl();\r\n  filteredFruits: Observable<any[]>;\r\n  fruits: any[] = [];\r\n  //allFruits: string[] = ['User 1', 'User 2', 'User 3', 'User 4', 'User 5'];\r\n  allFruits: any = [];\r\n  selectionOption = '1';\r\n\r\n  @ViewChild('fruitInput') fruitInput: ElementRef<HTMLInputElement>;\r\n  @ViewChild('auto') matAutocomplete: MatAutocomplete;\r\n\r\n  constructor(private router: Router, private toast: ToasterService, private apiService: ApiService, private apiloader: ApiLoaderService) {\r\n    this.userType = sessionStorage.getItem('role');\r\n    this.getAllUsers();\r\n    this.filteredFruits = this.fruitCtrl.valueChanges.pipe(\r\n      startWith(null),\r\n      map((fruit: any | null) => fruit ? this._filter(fruit) : this.allFruits.slice()));\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.apiloader.setLoader(true);\r\n    this.apiService.getData('goal-setting-form').subscribe(response => {\r\n      if (response.status === 'success') {\r\n        this.apiloader.setLoader(false);\r\n        this.totalGoals = response.data;\r\n      }\r\n    }, error => this.apiloader.setLoader(false));\r\n\r\n\r\n  }\r\n\r\n  add(event: MatChipInputEvent): void {\r\n    if (!this.matAutocomplete.isOpen) {\r\n      const input = event.input;\r\n      const value = event.value;\r\n\r\n      // Add our fruit\r\n      if ((value || '').trim()) {\r\n        this.fruits.push(value.trim());\r\n      }\r\n\r\n      // Reset the input value\r\n      if (input) {\r\n        input.value = '';\r\n      }\r\n\r\n      this.fruitCtrl.setValue(null);\r\n    }\r\n  }\r\n\r\n  remove(fruit: any): void {\r\n    const index = this.fruits.indexOf(fruit);\r\n    if (index >= 0) {\r\n      this.fruits.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  // getAllUsers(){\r\n  //   const id = sessionStorage.getItem('client_id');        \r\n  //     this.apiService.getData('users', { 'client_id': id } ).subscribe(response => {\r\n  //         if (response.data){\r\n\r\n  //             let data = response.data;\r\n  //             let users = [];\r\n  //             for (let i = 0; i < data.length; i++){\r\n  //                 if (data[i].role !== 'CLIENT_ADMIN'){\r\n  //                     users.push(data[i]);\r\n  //                 }\r\n  //             }\r\n  //         }\r\n  //     });\r\n  // }\r\n\r\n  selected(event: MatAutocompleteSelectedEvent): void {\r\n    console.log(event);\r\n    this.fruits.push(event.option.value);\r\n    this.fruitInput.nativeElement.value = '';\r\n    this.fruitCtrl.setValue(null);\r\n  }\r\n\r\n  private _filter(value: any): string[] {\r\n    let filterValue = '';\r\n    if (value.name) {\r\n      filterValue = value.name.toLowerCase();\r\n    } else {\r\n      filterValue = value.toLowerCase();\r\n    }\r\n    console.log(this.allFruits.filter(fruit => fruit.name.toLowerCase().indexOf(filterValue) === 0));\r\n    return this.allFruits.filter(fruit => fruit.name.toLowerCase().indexOf(filterValue) === 0);\r\n    //return this.totalGoals.filter(fruit => fruit.toLowerCase().indexOf(filterValue) === 0);\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  getAllUsers() {\r\n    const id = sessionStorage.getItem('client_id');\r\n    const role = sessionStorage.getItem('role');\r\n    //alert(role);\r\n    if (role === 'CLIENT_ADMIN') {\r\n\r\n      this.apiService.getData('users', { 'client_id': id }).subscribe(response => {\r\n        if (response.data) {\r\n\r\n          let data = response.data;\r\n          let users = [];\r\n          let usersName = [];\r\n          for (let i = 0; i < data.length; i++) {\r\n            let obj = { name: '', id: '' };\r\n            if (data[i].role !== 'CLIENT_ADMIN') {\r\n              users.push(data[i]);\r\n              obj.name = data[i].first_name + ' '  + data[i].last_name;\r\n              obj.id = data[i].id;\r\n              const obj1 = data[i].first_name + ' '  + data[i].last_name;\r\n              usersName.push(obj);\r\n            }\r\n          }\r\n\r\n          this.allFruits = usersName;\r\n          console.log(this.allFruits);\r\n        }\r\n      }, error => {\r\n        //this.toast.showError(error);\r\n      });\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    console.log(this.fruits);\r\n    this.apiloader.setLoader(true);\r\n    const users = this.fruits.map((eachFruit) => {\r\n      return eachFruit.id;\r\n    });\r\n    const id = sessionStorage.getItem('client_id');        \r\n        this.apiService.postData('appraisal-cycle/assign', {client_id: id, goal_setting_form_id: this.enrollmentForm, users: users}).subscribe(response => {\r\n            if (response.data){                \r\n                this.apiloader.setLoader(false);\r\n                const data = response.data;\r\n                console.log(data);\r\n                this.dataSource = data;\r\n                this.router.navigate(['/apps/performance/performance-evaluation']);\r\n                this.toast.showSuccess('Goal Setting Form Assigned Successfully!.');\r\n            }\r\n        }, error => {\r\n          this.apiloader.setLoader(false);\r\n          this.toast.showError(error);\r\n        });\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n","module.exports = \"<div id=\\\"performance\\\" class=\\\"page-layout simple tabbed perform\\\" fusePerfectScrollbar>\\r\\n   <router-outlet></router-outlet>\\r\\n</div>\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n#editemp {\\n  width: 384px;\\n  max-width: 384px;\\n  padding: 0px;\\n  text-align: center;\\n  background: #FFFFFF;\\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12); }\\n@media screen and (max-width: 599px) {\\n    #editemp {\\n      padding: 0px;\\n      width: 100%; } }\\n#editemp .logo {\\n    width: 128px;\\n    margin: 32px auto; }\\n#editemp .title {\\n    font-size: 12px;\\n    color: #ccc;\\n    margin: 16px 32px 32px 30px; }\\n#editemp form {\\n    width: 100%;\\n    text-align: left; }\\n#editemp form mat-form-field {\\n      width: 100%; }\\n#editemp form .submit-button {\\n      width: 220px;\\n      margin: 16px auto;\\n      display: block; }\\n@media screen and (max-width: 599px) {\\n        #editemp form .submit-button {\\n          width: 90%; } }\\n#editemp .login {\\n    margin: 32px auto 24px auto;\\n    width: 250px;\\n    font-weight: 500; }\\n#editemp .login .text {\\n      margin-right: 8px; }\\n.reset {\\n  display: block;\\n  width: 100%;\\n  left: 30%;\\n  float: left;\\n  position: relative; }\\n.editemp .mat-card {\\n  border: 1px solid #fa7915;\\n  border-radius: 10px; }\\n.editemp .mat-card-header {\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  background: #f2ab13;\\n  padding: 14px 0 0 0;\\n  border-radius: 10px;\\n  border-bottom-left-radius: 0px;\\n  border-bottom-right-radius: 0px; }\\n.editemp .mat-card-title {\\n  font-size: 20px;\\n  font-weight: 500; }\\n.editemp .mat-card-subtitle {\\n  font-size: 20px;\\n  color: #000; }\\n.editemp .mat-card-title, .editemp .mat-card-subtitle {\\n  margin-bottom: 5px; }\\n.editemp .mat-card-content {\\n  text-align: left;\\n  padding: 20px; }\\n.editemp .mat-card-content ul {\\n  list-style: none;\\n  margin: 0; }\\n.editemp .mat-card-content ul li {\\n  font-size: 18px;\\n  padding: 5px 0px; }\\n.editemp .mat-card-content ul li:before {\\n  font-weight: 100;\\n  margin-left: -1em;\\n  background-color: #fb7215;\\n  border-radius: 50%;\\n  content: \\\"\\\";\\n  display: inline-block;\\n  margin-right: 10px;\\n  margin-bottom: 2px;\\n  height: 8px;\\n  width: 8px; }\\n.editemp .free {\\n  width: 100%;\\n  display: block;\\n  float: left;\\n  padding: 20px; }\\n.editemp .paid {\\n  width: 60%;\\n  display: block;\\n  float: left;\\n  padding: 20px; }\\n.editemp .paid .left, .editemp .paid .right {\\n    width: 50%;\\n    display: block;\\n    float: left; }\\n.new_r {\\n  float: left;\\n  margin-left: 20px;\\n  margin-top: 20px !important; }\\ndiv.mat-horizontal-stepper-header-container {\\n  display: none !important; }\\n.rr_right {\\n  float: right; }\\n@media only screen and (max-width: 767px) {\\n  .editemp {\\n    margin: 0px !important; }\\n    .editemp .free, .editemp .paid, .editemp .left, .editemp .right {\\n      width: 100% !important; }\\n    .editemp .free .mat-card-content {\\n      height: 230px; }\\n    .editemp .paid .mat-card-content {\\n      height: 600px; } }\\n.example-headers-align .mat-expansion-panel-header-title,\\n.example-headers-align .mat-expansion-panel-header-description {\\n  flex-basis: 0; }\\n.example-headers-align .mat-expansion-panel-header-description {\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n  -webkit-box-align: center;\\n          align-items: center; }\\nmat-form-field {\\n  display: block !important; }\\n.mat-icon {\\n  height: 37px !important; }\\n.mt_i {\\n  font-size: 24px !important; }\\n.mat-expansion-panel-header {\\n  background-color: black !important;\\n  margin-bottom: 10px;\\n  border-radius: 11px; }\\n.mat-expansion-panel-content {\\n  background-color: white !important; }\\n.mat-expansion-panel:not([class*=mat-elevation-z]) {\\n  box-shadow: none !important; }\\n.mat-expansion-panel-header-title {\\n  color: white !important; }\\n.change_c {\\n  color: white !important;\\n  font-size: 44px; }\\n.lbl_cs {\\n  float: left; }\\n.mr_tp {\\n  margin-top: 15px;\\n  margin-right: 10px; }\\n.mr_last {\\n  margin-top: 15px; }\\n.mat-form-field-infix {\\n  padding: 5px 0 5px 0 !important; }\\n.example-button-row button,\\n.example-button-row a {\\n  margin-right: 8px; }\\n.example-button-row {\\n  text-align: center; }\\n.ch_color {\\n  padding-top: 7px; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators,FormControl} from '@angular/forms';\r\n\r\n// export interface Tile {\r\n//   color: string;\r\n//   cols: number;\r\n//   rows: number;\r\n//   text: string;\r\n// }\r\n\r\n@Component({\r\n  selector: 'app-performance',\r\n  templateUrl: './performance.component.html',\r\n  styleUrls: ['./performance.component.scss']\r\n})\r\nexport class PerformanceComponent implements OnInit {\r\n  isLinear = false;\r\n  firstFormGroup: FormGroup;\r\n  secondFormGroup: FormGroup;\r\n  options: FormGroup;\r\n\r\n  constructor(private _formBuilder: FormBuilder) {\r\n    this.options = _formBuilder.group({\r\n      hideRequired: false,\r\n      floatLabel: 'auto'\r\n    });\r\n  }\r\n\r\n  // For form validator\r\n  //email = new FormControl('', [Validators.required, Validators.email]);\r\n\r\n  // Sufix and prefix\r\n  hide = false;\r\n\r\n  // getErrorMessage() {\r\n  //   return this.email.hasError('required')\r\n  //     ? 'You must enter a value'\r\n  //     : this.email.hasError('email')\r\n  //       ? 'Not a valid email'\r\n  //       : '';\r\n  // }\r\n   \r\n  step = 1;\r\n\r\n  setStep(index: number) {\r\n    this.step = index;\r\n  }\r\n\r\n  // nextStep() {\r\n  //   this.step++;\r\n  // }\r\n\r\n  // prevStep() {\r\n  //   this.step--;\r\n  // }\r\n\r\n  ngOnInit() {\r\n    this.firstFormGroup = this._formBuilder.group({\r\n      firstCtrl: ['', Validators.required]\r\n    });\r\n    this.secondFormGroup = this._formBuilder.group({\r\n      secondCtrl: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  // tiles: Tile[] = [\r\n  //   {text: 'One', cols: 3, rows: 1, color: 'lightblue'},\r\n  //   {text: 'Two', cols: 1, rows: 2, color: 'lightgreen'},\r\n  //   {text: 'Three', cols: 1, rows: 1, color: 'lightpink'},\r\n  //   {text: 'Four', cols: 2, rows: 1, color: '#DDBDF1'},\r\n  // ];\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FuseSharedModule } from '@fuse/shared.module';\r\n\r\nimport { PerformanceComponent } from './performance.component';\r\nimport {\r\n  MatAutocompleteModule,\r\n  MatOptionModule,\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatChipsModule,\r\n  MatDatepickerModule,\r\n  MatDialogModule,\r\n  MatExpansionModule,\r\n  MatFormFieldModule,\r\n  MatGridListModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatPaginatorModule,\r\n  MatProgressBarModule,\r\n  MatProgressSpinnerModule,\r\n  MatRadioModule,\r\n  MatSelectModule,\r\n  MatSidenavModule,\r\n  MatSliderModule,\r\n  MatSlideToggleModule,\r\n  MatSnackBarModule,\r\n  MatSortModule,\r\n  MatTableModule,\r\n  MatTabsModule,\r\n  MatToolbarModule,\r\n  MatTooltipModule,\r\n  MatStepperModule\r\n} from '@angular/material';\r\nimport { EmployeePerformanceComponent } from './employee-performance/employee-performance.component';\r\nimport { FormLibraryComponent } from './form-library/form-library.component';\r\nimport { EditpopupComponent } from './form-library/editpopup/editpopup.component';\r\nimport { PerformanceEvaluationComponent } from './performance-evaluation/performance-evaluation.component';\r\nimport { EditEvaluationComponent } from './performance-evaluation/edit-evaluation/edit-evaluation.component';\r\nimport { EvaluationPopComponent } from './performance-evaluation/edit-evaluation/evaluation-pop/evaluation-pop.component';\r\nimport { PerformanceSettingComponent } from './performance-setting/performance-setting.component';\r\nimport { PerformanceManagementComponent } from './performance-management/performance-management.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n      path     : '',\r\n      component: PerformanceComponent,\r\n      children:[\r\n        {\r\n          path     : 'performance-management',\r\n          component: PerformanceManagementComponent,\r\n         },\r\n         {\r\n          path     : 'performance-management/form-library',\r\n          component: FormLibraryComponent,\r\n         },\r\n         {\r\n           path     : 'performance-management/form-library/:formId',\r\n           component: FormLibraryComponent,\r\n         },\r\n         {\r\n          path     : 'performance-evaluation',\r\n          component: PerformanceEvaluationComponent,\r\n         },\r\n         {\r\n          path     : 'employee-performance',\r\n          component: EmployeePerformanceComponent,\r\n         },\r\n         {\r\n          path     : 'performance-setting',\r\n          component: PerformanceSettingComponent,\r\n         },\r\n         {\r\n          path     : 'performance-evaluation/edit-evaluation/:id',\r\n          component: EditEvaluationComponent,\r\n         }\r\n      ]\r\n  }\r\n];\r\n\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    FuseSharedModule,\r\n    MatAutocompleteModule,\r\n    MatOptionModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatExpansionModule,\r\n    MatFormFieldModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatStepperModule\r\n  ],\r\n  declarations: [PerformanceComponent, EmployeePerformanceComponent, FormLibraryComponent, EditpopupComponent, PerformanceEvaluationComponent, EditEvaluationComponent, EvaluationPopComponent, PerformanceSettingComponent, PerformanceManagementComponent],\r\n  entryComponents: [EditpopupComponent,EvaluationPopComponent]\r\n})\r\nexport class PerformanceModule { }\r\n"],"sourceRoot":""}