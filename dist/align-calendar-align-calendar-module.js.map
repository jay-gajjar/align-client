{"version":3,"sources":["webpack:///./src/app/main/content/apps/align-calendar/align-cal.service.ts","webpack:///./src/app/main/content/apps/align-calendar/align-calendar.module.ts","webpack:///./src/app/main/content/apps/align-calendar/calendar.component.html","webpack:///./src/app/main/content/apps/align-calendar/calendar.component.scss","webpack:///./src/app/main/content/apps/align-calendar/calendar.component.ts","webpack:///./src/app/main/content/apps/align-calendar/calendar.service.ts","webpack:///./src/app/main/content/apps/align-calendar/event-form/event-form.component.html","webpack:///./src/app/main/content/apps/align-calendar/event-form/event-form.component.scss","webpack:///./src/app/main/content/apps/align-calendar/event-form/event-form.component.ts","webpack:///./src/app/main/content/apps/align-calendar/event.model.ts"],"names":[],"mappings":"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","file":"align-calendar-align-calendar-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\nimport { apiUri } from '@fuse/constant';\r\n\r\n@Injectable()\r\nexport class AlignCalService {\r\n  baseUrl = apiUri;    \r\n  constructor(private http: HttpClient) { }\r\n\r\n  setHeaders(){\r\n    let headers: HttpHeaders = new HttpHeaders();\r\n    headers = headers.set('Accept', 'application/json');\r\n    headers = headers.set('Content-Type', 'application/x-www-form-urlencoded');\r\n    return headers;\r\n  }\r\n\r\n  public postData(url, data, type?: string): Observable<any>{\r\n      let headers = this.setHeaders();\r\n      if (type = 'reset'){\r\n        headers = headers.set('Authorization', 'Bearer 12344' );\r\n      }\r\n      const options = { headers: headers };\r\n      return this.http.post(this.baseUrl + url, data, options).map(this.extractData).catch(this.handleError);\r\n  }\r\n\r\n  public getData(url, data?: any): Observable<any>{\r\n      const headers = this.setHeaders();\r\n      if (data){\r\n        const queryParams =  Object.keys(data).map(key => key + '=' + data[key]).join('&');\r\n        url += '?' + queryParams;\r\n      }\r\n      const options = { headers: headers };\r\n      return this.http.get(this.baseUrl + url, options).map(this.extractData).catch(this.handleError);\r\n  }\r\n\r\n  public deleteData(url): Observable<any>{\r\n    const headers = this.setHeaders();\r\n    const options = { headers: headers };\r\n    return this.http.delete(this.baseUrl + url, options).map(this.extractData).catch(this.handleError);\r\n  }\r\n\r\n  private extractData(res: Response) {\r\n      const body = res;\r\n      return body || {};\r\n  }\r\n\r\n  private handleError(error: any) {\r\n    const errMsg = error.error;\r\n    if (typeof errMsg.message === 'object') {\r\n      const arr = Array.from(Object.keys(errMsg.message), k => errMsg.message[k]);\r\n      return throwError(arr);\r\n    }\r\n    return throwError(errMsg.message);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { MatButtonModule, MatDatepickerModule, MatFormFieldModule, MatIconModule, MatInputModule, MatSlideToggleModule, MatToolbarModule } from '@angular/material';\r\n\r\nimport { CalendarModule } from 'angular-calendar';\r\nimport { ColorPickerModule } from 'ngx-color-picker';\r\n\r\nimport { FuseSharedModule } from '@fuse/shared.module';\r\nimport { FuseConfirmDialogModule } from '@fuse/components';\r\n\r\nimport { CalendarService } from './calendar.service';\r\nimport { FuseCalendarComponent } from './calendar.component';\r\nimport { FuseCalendarEventFormDialogComponent } from './event-form/event-form.component';\r\nimport { AlignCalService } from './align-cal.service';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path     : '',\r\n        component: FuseCalendarComponent,\r\n        children : [],\r\n        resolve  : {\r\n            chat: CalendarService\r\n        }\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    declarations   : [\r\n        FuseCalendarComponent,\r\n        FuseCalendarEventFormDialogComponent\r\n    ],\r\n    imports        : [\r\n        RouterModule.forChild(routes),\r\n\r\n        MatButtonModule,\r\n        MatDatepickerModule,\r\n        MatFormFieldModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatSlideToggleModule,\r\n        MatToolbarModule,\r\n\r\n        CalendarModule.forRoot(),\r\n        ColorPickerModule,\r\n\r\n        FuseSharedModule,\r\n        FuseConfirmDialogModule\r\n    ],\r\n    providers      : [\r\n        CalendarService,\r\n        AlignCalService\r\n    ],\r\n    entryComponents: [FuseCalendarEventFormDialogComponent]\r\n})\r\nexport class AlignCalendarModule\r\n{\r\n}\r\n","module.exports = \"<div id=\\\"calendar\\\" class=\\\"page-layout simple fullwidth\\\" fusePerfectScrollbar>\\r\\n\\r\\n    <!-- HEADER -->\\r\\n    <div class=\\\"header p-16 p-sm-24\\\" [ngClass]=\\\"viewDate | date:'MMM'\\\">\\r\\n\\r\\n        <div class=\\\"header-content\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n\\r\\n            <div class=\\\"header-top\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\" fxLayout.xs=\\\"column\\\">\\r\\n\\r\\n                <div class=\\\"logo mb-16 mb-sm-0\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n                    <mat-icon class=\\\"logo-icon\\\" *fuseIfOnDom [@animate]=\\\"{value:'*',params:{delay:'50ms',scale:'0.2'}}\\\">today</mat-icon>\\r\\n                    <span class=\\\"logo-text\\\" *fuseIfOnDom [@animate]=\\\"{value:'*',params:{delay:'100ms',x:'-25px'}}\\\">Calendar</span>\\r\\n                </div>\\r\\n\\r\\n                <!-- TOOLBAR -->\\r\\n                <div class=\\\"toolbar\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n\\r\\n                    <button mat-icon-button aria-label=\\\"Search\\\" matTooltip=\\\"Search\\\">\\r\\n                        <mat-icon>search</mat-icon>\\r\\n                    </button>\\r\\n\\r\\n                    <button mat-icon-button\\r\\n                            mwlCalendarToday\\r\\n                            [(viewDate)]=\\\"viewDate\\\"\\r\\n                            (viewDateChange)=\\\"selectedDay = {date:$event}\\\"\\r\\n                            aria-label=\\\"Today\\\" matTooltip=\\\"Today\\\">\\r\\n                        <mat-icon>today</mat-icon>\\r\\n                    </button>\\r\\n\\r\\n                    <button mat-icon-button (click)=\\\"view='day'\\\" aria-label=\\\"Day\\\" matTooltip=\\\"Day\\\">\\r\\n                        <mat-icon>view_day</mat-icon>\\r\\n                    </button>\\r\\n\\r\\n                    <button mat-icon-button (click)=\\\"view='week'\\\" aria-label=\\\"Week\\\" matTooltip=\\\"Week\\\">\\r\\n                        <mat-icon>view_week</mat-icon>\\r\\n                    </button>\\r\\n\\r\\n                    <button mat-icon-button (click)=\\\"view='month'\\\" aria-label=\\\"Month\\\" matTooltip=\\\"Month\\\">\\r\\n                        <mat-icon>view_module</mat-icon>\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- / TOOLBAR -->\\r\\n\\r\\n            <!-- HEADER BOTTOM -->\\r\\n            <div class=\\\"header-bottom\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\"\\r\\n                 *fuseIfOnDom [@animate]=\\\"{value:'*',params:{delay:'150ms'}}\\\">\\r\\n\\r\\n                <button mat-icon-button class=\\\"arrow\\\"\\r\\n                        mwlCalendarPreviousView\\r\\n                        [view]=\\\"view\\\"\\r\\n                        [(viewDate)]=\\\"viewDate\\\"\\r\\n                        (viewDateChange)=\\\"selectedDay = {date:$event}\\\"\\r\\n                        aria-label=\\\"Previous\\\">\\r\\n                    <mat-icon>chevron_left</mat-icon>\\r\\n                </button>\\r\\n\\r\\n                <div class=\\\"title\\\">\\r\\n                    {{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}\\r\\n                </div>\\r\\n\\r\\n                <button mat-icon-button class=\\\"arrow\\\"\\r\\n                        mwlCalendarNextView\\r\\n                        [view]=\\\"view\\\"\\r\\n                        [(viewDate)]=\\\"viewDate\\\"\\r\\n                        (viewDateChange)=\\\"selectedDay = {date:$event}\\\"\\r\\n                        aria-label=\\\"Next\\\">\\r\\n                    <mat-icon>chevron_right</mat-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n            <!-- / HEADER BOTTOM -->\\r\\n        </div>\\r\\n\\r\\n        <!-- ADD EVENT BUTTON -->\\r\\n        <button mat-fab class=\\\"add-event-button mat-warn\\\" (click)=\\\"addHoliday()\\\" aria-label=\\\"Add event\\\"\\r\\n                *fuseIfOnDom [@animate]=\\\"{value:'*',params:{delay:'300ms',scale:'0.2'}}\\\">\\r\\n            <mat-icon>add</mat-icon>\\r\\n        </button>\\r\\n        <!-- / ADD EVENT BUTTON -->\\r\\n    </div>\\r\\n    <!-- / HEADER -->\\r\\n\\r\\n    <!-- CONTENT -->\\r\\n    <div class=\\\"content\\\" fusePerfectScrollbar *fuseIfOnDom [@animate]=\\\"{value:'*',params:{delay:'200ms',y:'50px'}}\\\">\\r\\n        <div [ngSwitch]=\\\"view\\\">\\r\\n            <mwl-calendar-month-view\\r\\n                *ngSwitchCase=\\\"'month'\\\"\\r\\n                [viewDate]=\\\"viewDate\\\"\\r\\n                [events]=\\\"events\\\"\\r\\n                [refresh]=\\\"refresh\\\"\\r\\n                [activeDayIsOpen]=\\\"activeDayIsOpen\\\"\\r\\n                (dayClicked)=\\\"dayClicked($event.day)\\\"\\r\\n                (eventClicked)=\\\"editEvent('edit', $event.event)\\\"\\r\\n                (eventTimesChanged)=\\\"eventTimesChanged($event)\\\"\\r\\n                (beforeViewRender)=\\\"beforeMonthViewRender($event)\\\">\\r\\n            </mwl-calendar-month-view>\\r\\n            <mwl-calendar-week-view\\r\\n                *ngSwitchCase=\\\"'week'\\\"\\r\\n                [viewDate]=\\\"viewDate\\\"\\r\\n                (viewDateChange)=\\\"selectedDay = {date:$event}\\\"\\r\\n                [events]=\\\"events\\\"\\r\\n                [refresh]=\\\"refresh\\\"\\r\\n                (dayClicked)=\\\"dayClicked($event.day)\\\"\\r\\n                (eventClicked)=\\\"editEvent('edit', $event.event)\\\"\\r\\n                (eventTimesChanged)=\\\"eventTimesChanged($event)\\\">\\r\\n            </mwl-calendar-week-view>\\r\\n            <mwl-calendar-day-view\\r\\n                *ngSwitchCase=\\\"'day'\\\"\\r\\n                [viewDate]=\\\"viewDate\\\"\\r\\n                (viewDateChange)=\\\"selectedDay = {date:$event}\\\"\\r\\n                [events]=\\\"events\\\"\\r\\n                [refresh]=\\\"refresh\\\"\\r\\n                (dayClicked)=\\\"dayClicked($event.day)\\\"\\r\\n                (eventClicked)=\\\"editEvent('edit', $event.event)\\\"\\r\\n                (eventTimesChanged)=\\\"eventTimesChanged($event)\\\">\\r\\n            </mwl-calendar-day-view>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- / CONTENT -->\\r\\n</div>\\r\\n\"","module.exports = \"\"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef } from '@angular/material';\r\nimport { Subject } from 'rxjs';\r\nimport { startOfDay, isSameDay, isSameMonth } from 'date-fns';\r\nimport { CalendarEvent, CalendarEventAction, CalendarEventTimesChangedEvent, CalendarMonthViewDay } from 'angular-calendar';\r\n\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport { fuseAnimations } from '@fuse/animations';\r\n\r\nimport { FuseCalendarEventFormDialogComponent } from './event-form/event-form.component';\r\nimport { CalendarEventModel } from './event.model';\r\nimport { CalendarService } from './calendar.service';\r\nimport { AlignCalService } from './align-cal.service';\r\nimport { ApiLoaderService } from '@fuse/services/api-loader.service';\r\nimport { ToasterService } from '@fuse/services/toaster-service.service';\r\n\r\n@Component({\r\n    selector     : 'fuse-calendar',\r\n    templateUrl  : './calendar.component.html',\r\n    styleUrls    : ['./calendar.component.scss'],\r\n    animations   : fuseAnimations\r\n})\r\nexport class FuseCalendarComponent implements OnInit\r\n{\r\n    view: string;\r\n    viewDate: Date;\r\n    events: CalendarEvent[];\r\n    public actions: CalendarEventAction[];\r\n    activeDayIsOpen: boolean;\r\n    refresh: Subject<any> = new Subject();\r\n    dialogRef: any;\r\n    confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n    selectedDay: any;\r\n\r\n    constructor(\r\n        public dialog: MatDialog,\r\n        public calendarService: CalendarService,\r\n        private calService: AlignCalService,\r\n        private apiloader: ApiLoaderService,\r\n        private toast: ToasterService,\r\n    )\r\n    {\r\n        this.view = 'month';\r\n        this.viewDate = new Date();\r\n        this.activeDayIsOpen = true;\r\n        this.selectedDay = {date: startOfDay(new Date())};\r\n\r\n        this.actions = [\r\n            {\r\n                label  : '<i class=\"material-icons s-16\">edit</i>',\r\n                onClick: ({event}: { event: CalendarEvent }): void => {\r\n                    this.editEvent('edit', event);\r\n                }\r\n            },\r\n            {\r\n                label  : '<i class=\"material-icons s-16\">delete</i>',\r\n                onClick: ({event}: { event: CalendarEvent }): void => {\r\n                    this.deleteEvent(event.id);\r\n                }\r\n            }\r\n        ];\r\n\r\n        /**\r\n         * Get events from service/server\r\n         */\r\n    }\r\n\r\n    ngOnInit()\r\n    {\r\n        this.getHolidays();\r\n\r\n        /**\r\n         * Watch re-render-refresh for updating db\r\n         */\r\n        this.refresh.subscribe(updateDB => {\r\n            // console.warn('REFRESH');\r\n            if ( updateDB )\r\n            {\r\n                // console.warn('UPDATE DB');\r\n                this.calendarService.updateEvents(this.events);\r\n            }\r\n        });\r\n\r\n        this.calendarService.onEventsUpdated.subscribe(events => {\r\n            this.setEvents();\r\n            this.refresh.next();\r\n        });\r\n    }\r\n\r\n    getHolidays(){\r\n        this.apiloader.setLoader(true);\r\n        this.calService.getData('holidays').subscribe(response => {\r\n            if (response.data){\r\n                this.apiloader.setLoader(false);\r\n                 const events = response.data;\r\n                 for (let i = 0; i < events.length; i++){\r\n                    events[i].title = events[i].details;\r\n                    events[i].start = events[i].date;\r\n                    events[i].color = {\r\n                        primary  : '#ad2121',\r\n                        secondary: '#FAE3E3'\r\n                    };\r\n                    events[i].actions = this.actions;\r\n                 }\r\n                 this.events = events;\r\n                 this.setEvents();\r\n            }\r\n        }, error => {\r\n            this.apiloader.setLoader(false);\r\n            this.toast.showError(error);\r\n        });\r\n    }\r\n\r\n    setEvents()\r\n    {\r\n        this.events = this.events.map(item => {\r\n            item.actions = this.actions;\r\n            return new CalendarEventModel(item);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Before View Renderer\r\n     * @param {any} header\r\n     * @param {any} body\r\n     */\r\n    beforeMonthViewRender({header, body})\r\n    {\r\n        body.forEach((day) => {\r\n            const event = day.events;\r\n            if (event.length){\r\n                event.forEach(item => {\r\n                    day.cssClass = 'holiday';\r\n                });\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    /**\r\n     * Day clicked\r\n     * @param {MonthViewDay} day\r\n     */\r\n    dayClicked(day: CalendarMonthViewDay): void\r\n    {\r\n        const date: Date = day.date;\r\n        const events: CalendarEvent[] = day.events;\r\n\r\n        if ( isSameMonth(date, this.viewDate) )\r\n        {\r\n            if ( (isSameDay(this.viewDate, date) && this.activeDayIsOpen === true) || events.length === 0 )\r\n            {\r\n                this.activeDayIsOpen = false;\r\n            }\r\n            else\r\n            {\r\n                this.activeDayIsOpen = true;\r\n                this.viewDate = date;\r\n            }\r\n        }\r\n        this.selectedDay = day;\r\n        this.refresh.next();\r\n    }\r\n\r\n    /**\r\n     * Event times changed\r\n     * Event dropped or resized\r\n     * @param {CalendarEvent} event\r\n     * @param {Date} newStart\r\n     * @param {Date} newEnd\r\n     */\r\n    eventTimesChanged({event, newStart, newEnd}: CalendarEventTimesChangedEvent): void\r\n    {\r\n        event.start = newStart;\r\n        event.end = newEnd;\r\n        // console.warn('Dropped or resized', event);\r\n        this.refresh.next(true);\r\n    }\r\n\r\n    /**\r\n     * Delete Event\r\n     * @param event\r\n     */\r\n    deleteEvent(id)\r\n    {\r\n        this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n            disableClose: false\r\n        });\r\n\r\n        this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete?';\r\n\r\n        this.confirmDialogRef.afterClosed().subscribe(result => {\r\n            if ( result )\r\n            {\r\n                this.apiloader.setLoader(true);\r\n                this.calService.deleteData('holidays/' + id).subscribe(response => {\r\n                    if (response.status === 'success'){\r\n                        this.apiloader.setLoader(false);\r\n                        this.getHolidays();\r\n                        this.toast.showSuccess('Holiday Deleted Successfully!.');\r\n                    }\r\n                }, error => {\r\n                    this.apiloader.setLoader(false);\r\n                    this.toast.showError(error);\r\n                });\r\n            }\r\n            this.confirmDialogRef = null;\r\n        });\r\n\r\n    }\r\n\r\n    /**\r\n     * Edit Event\r\n     * @param {string} action\r\n     * @param {CalendarEvent} event\r\n     */\r\n    editEvent(action: string, event: CalendarEvent)\r\n    {\r\n        this.dialogRef = this.dialog.open(FuseCalendarEventFormDialogComponent, {\r\n            panelClass: 'event-form-dialog',\r\n            data      : {\r\n                event : event,\r\n                action: action\r\n            }\r\n        });\r\n\r\n        this.dialogRef.afterClosed()\r\n            .subscribe(response => {\r\n                if ( !response )\r\n                {\r\n                    return;\r\n                }\r\n                const actionType: string = response[0];\r\n                const formData = response[1];\r\n                switch ( actionType )\r\n                {\r\n                    case 'save':\r\n                        this.updateEvent(formData);\r\n                        break;\r\n\r\n                    case 'delete':\r\n\r\n                        this.deleteEvent(formData);\r\n\r\n                        break;\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Add Event\r\n     */\r\n    addHoliday(): void\r\n    {\r\n        this.dialogRef = this.dialog.open(FuseCalendarEventFormDialogComponent, {\r\n            panelClass: 'event-form-dialog',\r\n            data      : {\r\n                action: 'new',\r\n                date  : this.selectedDay.date\r\n            }\r\n        });\r\n        this.dialogRef.afterClosed()\r\n            .subscribe((response: FormGroup) => {\r\n                if ( !response )\r\n                {\r\n                    return;\r\n                }else{\r\n                    this.createHoliday(response);\r\n                }\r\n                \r\n            });\r\n    }\r\n\r\n    createHoliday(formData){\r\n        this.apiloader.setLoader(true);\r\n        const body = new URLSearchParams();\r\n        body.set('details', formData.details);\r\n        body.set('date', formData.date);\r\n\r\n        this.calService.postData('holidays', body.toString()).subscribe(response => {\r\n            if (response.data){\r\n                this.apiloader.setLoader(false);\r\n                this.getHolidays();\r\n                this.toast.showSuccess('Holiday Created Successfully!.');\r\n            }\r\n        }, error => {\r\n            this.apiloader.setLoader(false);\r\n            this.toast.showError(error);\r\n        });\r\n    }\r\n\r\n    updateEvent(formData){\r\n        this.apiloader.setLoader(true);\r\n            \r\n        const body = new URLSearchParams();\r\n        body.set('details', formData.details);\r\n        body.set('date', formData.date);\r\n    \r\n        this.calService.postData('holidays/' + formData.id, body.toString()).subscribe(response => {\r\n            if (response.status === 'success'){\r\n                this.getHolidays();\r\n                this.apiloader.setLoader(false);\r\n                this.toast.showSuccess('Data Updated Successfully!');\r\n            }\r\n        }, error => {\r\n            this.apiloader.setLoader(false);\r\n            this.toast.showError(error);\r\n        });\r\n    }\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class CalendarService implements Resolve<any>\r\n{\r\n    events: any;\r\n    onEventsUpdated = new Subject<any>();\r\n\r\n    constructor(private http: HttpClient)\r\n    {\r\n\r\n    }\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            Promise.all([\r\n                this.getEvents()\r\n            ]).then(\r\n                ([events]: [any]) => {\r\n                    resolve();\r\n                },\r\n                reject\r\n            );\r\n        });\r\n    }\r\n\r\n    getEvents()\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            this.http.get('api/calendar-admin/events')\r\n                .subscribe((response: any) => {\r\n                    this.events = response.data;\r\n                    this.onEventsUpdated.next(this.events);\r\n                    resolve(this.events);\r\n                }, reject);\r\n        });\r\n    }\r\n\r\n    updateEvents(events)\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            this.http.post('api/calendar-admin/events', {\r\n                id  : 'events',\r\n                data: [...events]\r\n            })\r\n                .subscribe((response: any) => {\r\n                    this.getEvents();\r\n                }, reject);\r\n        });\r\n    }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"dialog-content-wrapper\\\">\\r\\n    <mat-toolbar class=\\\"mat-accent m-0\\\">\\r\\n        <mat-toolbar-row fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n            <span class=\\\"title dialog-title\\\">{{dialogTitle}}</span>\\r\\n            <button mat-icon-button (click)=\\\"dialogRef.close()\\\" aria-label=\\\"Close dialog\\\">\\r\\n                <mat-icon>close</mat-icon>\\r\\n            </button>\\r\\n        </mat-toolbar-row>\\r\\n    </mat-toolbar>\\r\\n\\r\\n    <div mat-dialog-content class=\\\"p-24 m-0\\\" fusePerfectScrollbar>\\r\\n\\r\\n        <form name=\\\"eventForm\\\" [formGroup]=\\\"eventForm\\\" class=\\\"event-form w-100-p\\\" fxLayout=\\\"column\\\" fxFlex>\\r\\n\\r\\n            <mat-form-field class=\\\"w-100-p\\\">\\r\\n                <input matInput\\r\\n                       name=\\\"details\\\"\\r\\n                       formControlName=\\\"details\\\"\\r\\n                       placeholder=\\\"Title\\\"\\r\\n                       required>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field class=\\\"mr-sm-24\\\" fxFlex>\\r\\n                <input matInput [matDatepicker]=\\\"startDatePicker\\\" placeholder=\\\"Date\\\"\\r\\n                        name=\\\"date\\\"\\r\\n                        formControlName=\\\"date\\\" required>\\r\\n                <mat-datepicker-toggle matSuffix [for]=\\\"startDatePicker\\\"></mat-datepicker-toggle>\\r\\n                <mat-datepicker #startDatePicker></mat-datepicker>\\r\\n            </mat-form-field>\\r\\n\\r\\n        </form>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div mat-dialog-actions class=\\\"m-0 p-16\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n\\r\\n        <button *ngIf=\\\"action !=='edit'\\\"\\r\\n                mat-raised-button\\r\\n                (click)=\\\"closeAdd(eventForm.value)\\\"\\r\\n                class=\\\"save-button mat-accent\\\"\\r\\n                [disabled]=\\\"eventForm.invalid\\\"\\r\\n                aria-label=\\\"SAVE\\\">\\r\\n            SAVE\\r\\n        </button>\\r\\n\\r\\n        <button *ngIf=\\\"action ==='edit'\\\"\\r\\n                mat-raised-button\\r\\n                (click)=\\\"closeEdit(['save',eventForm.value])\\\"\\r\\n                class=\\\"save-button mat-accent\\\"\\r\\n                [disabled]=\\\"eventForm.invalid\\\"\\r\\n                aria-label=\\\"SAVE\\\">\\r\\n            SAVE\\r\\n        </button>\\r\\n\\r\\n        <button *ngIf=\\\"action ==='edit'\\\"\\r\\n                mat-icon-button\\r\\n                (click)=\\\"dialogRef.close(['delete',event.id])\\\"\\r\\n                aria-label=\\\"Delete\\\"\\r\\n                matTooltip=\\\"Delete\\\">\\r\\n            <mat-icon>delete</mat-icon>\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n.event-form-dialog {\\n  width: 480px; }\\n@media screen and (max-width: 599px) {\\n    .event-form-dialog {\\n      width: 100%; } }\\n.event-form-dialog .mat-dialog-container {\\n    padding: 0; }\\n.event-form-dialog .dialog-content-wrapper {\\n    max-height: 85vh;\\n    display: -webkit-box;\\n    display: flex;\\n    -webkit-box-orient: vertical;\\n    -webkit-box-direction: normal;\\n            flex-direction: column; }\\n.event-form-dialog .primary-color-input,\\n  .event-form-dialog .secondary-color-input {\\n    padding: 6px 8px; }\\n\"","import { Component, Inject, ViewEncapsulation } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\r\nimport { MatColors } from '@fuse/mat-colors';\r\nimport { CalendarEvent } from 'angular-calendar';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n    selector     : 'fuse-calendar-event-form-dialog',\r\n    templateUrl  : './event-form.component.html',\r\n    styleUrls    : ['./event-form.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class FuseCalendarEventFormDialogComponent\r\n{\r\n    event: CalendarEvent;\r\n    dialogTitle: string;\r\n    eventForm: FormGroup;\r\n    action: string;\r\n    presetColors = MatColors.presets;\r\n\r\n    constructor(\r\n        public dialogRef: MatDialogRef<FuseCalendarEventFormDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) private data: any,\r\n        private formBuilder: FormBuilder\r\n    )\r\n    {\r\n        this.action = data.action;\r\n\r\n        this.eventForm = this.createEventForm();\r\n\r\n        if ( this.action === 'edit' )\r\n        {\r\n            this.event = data.event;\r\n            this.dialogTitle = 'Update Holiday';\r\n            this.eventForm.patchValue({'details': this.event.title, 'date': this.event.start});\r\n        }\r\n        else\r\n        {\r\n            this.dialogTitle = 'Public Holiday';\r\n            this.eventForm.patchValue({'date': data.date});\r\n        }\r\n    }\r\n\r\n    createEventForm()\r\n    {\r\n        return new FormGroup({\r\n            details : new FormControl(''),\r\n            date : new FormControl('')\r\n        });\r\n    }\r\n\r\n    closeAdd(data){        \r\n        data.date = moment(data.date).format('YYYY-MM-DD');\r\n        this.dialogRef.close(data);\r\n    }\r\n\r\n    closeEdit(data){        \r\n        data[1].date = moment(data[1].date).format('YYYY-MM-DD');\r\n        Object.assign(data[1], {id: this.event.id});\r\n        this.dialogRef.close(data);\r\n    }\r\n}\r\n","import { CalendarEventAction } from 'angular-calendar';\r\nimport { startOfDay, endOfDay } from 'date-fns';\r\n\r\nexport class CalendarEventModel\r\n{\r\n    id?: any;\r\n    start: Date;\r\n    end?: Date;\r\n    title: string;\r\n    color: {\r\n        primary: string;\r\n        secondary: string;\r\n    };\r\n    actions?: CalendarEventAction[];\r\n    allDay?: boolean;\r\n    isEvent?: boolean;\r\n    cssClass?: string;\r\n    resizable?: {\r\n        beforeStart?: boolean;\r\n        afterEnd?: boolean;\r\n    };\r\n    draggable?: boolean;\r\n    meta?: {\r\n        location: string,\r\n        notes: string\r\n    };\r\n\r\n    constructor(data?)\r\n    {\r\n        data = data || {};\r\n        this.id = data.id || '';\r\n        this.start = new Date(data.start) || startOfDay(new Date());\r\n        this.end = new Date(data.end) || endOfDay(new Date());\r\n        this.title = data.title || '';\r\n        this.color = {\r\n            primary  : data.color && data.color.primary || '#1e90ff',\r\n            secondary: data.color && data.color.secondary || '#D1E8FF'\r\n        };\r\n        this.draggable = data.draggable || true;\r\n        this.resizable = {\r\n            beforeStart: data.resizable && data.resizable.beforeStart || true,\r\n            afterEnd   : data.resizable && data.resizable.afterEnd || true\r\n        };\r\n        this.actions = data.actions || [];\r\n        this.allDay = data.allDay || false;\r\n        this.isEvent = data.isEvent;\r\n        this.cssClass = data.cssClass || '';\r\n        this.meta = {\r\n            location: data.meta && data.meta.location || '',\r\n            notes   : data.meta && data.meta.notes || ''\r\n        };\r\n    }\r\n}\r\n"],"sourceRoot":""}